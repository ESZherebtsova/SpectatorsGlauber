//
// File generated by /home/liza/root/buildedroot/bin/rootcint at Fri May 19 02:08:15 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__Centrality
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Centrality.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::NA61DataEvent NA61DataEvent;
      #else
      class NA61DataEvent  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~NA61DataEvent() throw() {};
         ::TTree* fChain; //!pointer to the analyzed TTree or TChain
         int fCurrent; //!current Tree number in a TChain
         int Event_Id; //
         int Run_Id; //
         int Event_Timestamp; //
         float TPC_track_pT[2000]; //
         float TPC_track_eta[2000]; //
         float TPC_track_phi[2000]; //
         int TPC_track_nClusters_Total[2000]; //
         int TPC_track_nClusters_TPCV1[2000]; //
         int TPC_track_nClusters_TPCV2[2000]; //
         int TPC_track_nClusters_TPCVmain[2000]; //
         int TPC_track_nClusters_TPCVgap[2000]; //
         int TPC_track_nClustersPotential_Total[2000]; //
         int TPC_track_nClustersPotential_TPCV1[2000]; //
         int TPC_track_nClustersPotential_TPCV2[2000]; //
         int TPC_track_nClustersPotential_TPCVmain[2000]; //
         int TPC_track_nClustersPotential_TPCVgap[2000]; //
         int TPC_track_nClustersFit_Total[2000]; //
         int TPC_track_nClustersFit_TPCV1[2000]; //
         int TPC_track_nClustersFit_TPCV2[2000]; //
         int TPC_track_nClustersFit_TPCVmain[2000]; //
         int TPC_track_nClustersFit_TPCVgap[2000]; //
         int TPC_track_nClustersdEdX_Total[2000]; //
         int TPC_track_nClustersdEdX_TPCV1[2000]; //
         int TPC_track_nClustersdEdX_TPCV2[2000]; //
         int TPC_track_nClustersdEdX_TPCVmain[2000]; //
         int TPC_track_nClustersdEdX_TPCVgap[2000]; //
         float TPC_track_EnergyClusters_Total[2000]; //
         float TPC_track_EnergyClusters_TPCV1[2000]; //
         float TPC_track_EnergyClusters_TPCV2[2000]; //
         float TPC_track_EnergyClusters_TPCVmain[2000]; //
         float TPC_track_EnergyClusters_TPCVgap[2000]; //
         float TPC_track_DCAtoVertex_X[2000]; //
         float TPC_track_DCAtoVertex_Y[2000]; //
         float TPC_track_DCAtoVertex_Z[2000]; //
         float TPC_track_chi2[2000]; //
         int TPC_track_ndf[2000]; //
         int TPC_Multiplicity; //
         int TPC_Multiplicity_all; //
         int TPC_Multiplicity_Clusters_VTPC1_VTPC2; //
         int TPC_Multiplicity_Clusters_All; //
         float TPC_cos1; //
         float TPC_sin1; //
         float TPC_cos2; //
         float TPC_sin2; //
         int PSD_module_Number; //
         int PSD_section_Number; //
         float PSD_section_slice_Energy[10]; //
         float PSD_module_X[45]; //
         float PSD_module_Y[45]; //
         float PSD_module_Z[45]; //
         float PSD_module_Energy[45]; //
         float PSD_module_Energy_default[45]; //
         int PSD_module_number_of_sections[45]; //
         float PSD_section_Energy[45][10]; //
         int PSD_section_Number_array[45][10]; //
         float PSD_Energy; //
         float PSD_1_Energy; //
         float PSD_2_Energy; //
         float PSD_3_Energy; //
         float Vertex_X; //
         float Vertex_Y; //
         float Vertex_Z; //
         bool T1; //
         bool T2; //
         bool T3; //
         bool T4; //
         int BPD_Status[2][3][3]; //
         float BPD_Position[2][3][3]; //
         float BPD_PositionError[2][3][3]; //
         float BPD_Z[2][3][3]; //
         float BPD_RMS[2][3][3]; //
         float BPD_Maximum[2][3][3]; //
         float BPD_Charge[2][3][3]; //
         float BPD_SumOfAll[2][3][3]; //
         float triggersADC[2][6]; //
         bool isTriggers_Simple[2][6]; //
         bool isTriggers_Combined[2][4]; //
         float Beam_Momentum[2][3]; //
         float Beam_Fitted2DLineXZ[2][3]; //
         float Beam_Fitted2DLineYZ[2][3]; //
         int Beam_Status[2]; //
         float WFA_TimeStructure[6][2000]; //
         int WFA_NumberOfSignalHits[6]; //
         float FitVertexX; //
         float FitVertexY; //
         float FitVertexZ; //
         int FitVertexQ; //
         ::TBranch* b_Event_Id; //!
         ::TBranch* b_Run_Id; //!
         ::TBranch* b_Event_Timestamp; //!
         ::TBranch* b_TPC_track_pT; //!
         ::TBranch* b_TPC_track_eta; //!
         ::TBranch* b_TPC_track_phi; //!
         ::TBranch* b_TPC_track_nClusters_Total; //!
         ::TBranch* b_TPC_track_nClusters_TPCV1; //!
         ::TBranch* b_TPC_track_nClusters_TPCV2; //!
         ::TBranch* b_TPC_track_nClusters_TPCVmain; //!
         ::TBranch* b_TPC_track_nClusters_TPCVgap; //!
         ::TBranch* b_TPC_track_nClustersPotential_Total; //!
         ::TBranch* b_TPC_track_nClustersPotential_TPCV1; //!
         ::TBranch* b_TPC_track_nClustersPotential_TPCV2; //!
         ::TBranch* b_TPC_track_nClustersPotential_TPCVmain; //!
         ::TBranch* b_TPC_track_nClustersPotential_TPCVgap; //!
         ::TBranch* b_TPC_track_nClustersFit_Total; //!
         ::TBranch* b_TPC_track_nClustersFit_TPCV1; //!
         ::TBranch* b_TPC_track_nClustersFit_TPCV2; //!
         ::TBranch* b_TPC_track_nClustersFit_TPCVmain; //!
         ::TBranch* b_TPC_track_nClustersFit_TPCVgap; //!
         ::TBranch* b_TPC_track_nClustersdEdX_Total; //!
         ::TBranch* b_TPC_track_nClustersdEdX_TPCV1; //!
         ::TBranch* b_TPC_track_nClustersdEdX_TPCV2; //!
         ::TBranch* b_TPC_track_nClustersdEdX_TPCVmain; //!
         ::TBranch* b_TPC_track_nClustersdEdX_TPCVgap; //!
         ::TBranch* b_TPC_track_EnergyClusters_Total; //!
         ::TBranch* b_TPC_track_EnergyClusters_TPCV1; //!
         ::TBranch* b_TPC_track_EnergyClusters_TPCV2; //!
         ::TBranch* b_TPC_track_EnergyClusters_TPCVmain; //!
         ::TBranch* b_TPC_track_EnergyClusters_TPCVgap; //!
         ::TBranch* b_TPC_track_DCAtoVertex_X; //!
         ::TBranch* b_TPC_track_DCAtoVertex_Y; //!
         ::TBranch* b_TPC_track_DCAtoVertex_Z; //!
         ::TBranch* b_TPC_track_chi2; //!
         ::TBranch* b_TPC_track_ndf; //!
         ::TBranch* b_TPC_Multiplicity; //!
         ::TBranch* b_TPC_Multiplicity_all; //!
         ::TBranch* b_TPC_Multiplicity_Clusters_VTPC1_VTPC2; //!
         ::TBranch* b_TPC_Multiplicity_Clusters_All; //!
         ::TBranch* b_TPC_cos1; //!
         ::TBranch* b_TPC_sin1; //!
         ::TBranch* b_TPC_cos2; //!
         ::TBranch* b_TPC_sin2; //!
         ::TBranch* b_PSD_module_Number; //!
         ::TBranch* b_PSD_section_Number; //!
         ::TBranch* b_PSD_section_slice_Energy; //!
         ::TBranch* b_PSD_module_X; //!
         ::TBranch* b_PSD_module_Y; //!
         ::TBranch* b_PSD_module_Z; //!
         ::TBranch* b_PSD_module_Energy; //!
         ::TBranch* b_PSD_module_Energy_default; //!
         ::TBranch* b_PSD_module_number_of_sections; //!
         ::TBranch* b_PSD_section_Energy; //!
         ::TBranch* b_PSD_section_Number_array; //!
         ::TBranch* b_PSD_Energy; //!
         ::TBranch* b_PSD_1_Energy; //!
         ::TBranch* b_PSD_2_Energy; //!
         ::TBranch* b_PSD_3_Energy; //!
         ::TBranch* b_Vertex_X; //!
         ::TBranch* b_Vertex_Y; //!
         ::TBranch* b_Vertex_Z; //!
         ::TBranch* b_T1; //!
         ::TBranch* b_T2; //!
         ::TBranch* b_T3; //!
         ::TBranch* b_T4; //!
         ::TBranch* b_BPD_Status; //!
         ::TBranch* b_BPD_Position; //!
         ::TBranch* b_BPD_PositionError; //!
         ::TBranch* b_BPD_Z; //!
         ::TBranch* b_BPD_RMS; //!
         ::TBranch* b_BPD_Maximum; //!
         ::TBranch* b_BPD_Charge; //!
         ::TBranch* b_BPD_SumOfAll; //!
         ::TBranch* b_triggersADC; //!
         ::TBranch* b_isTriggers_Simple; //!
         ::TBranch* b_isTriggers_Combined; //!
         ::TBranch* b_Beam_Momentum; //!
         ::TBranch* b_Beam_Fitted2DLineXZ; //!
         ::TBranch* b_Beam_Fitted2DLineYZ; //!
         ::TBranch* b_Beam_Status; //!
         ::TBranch* b_WFA_TimeStructure; //!
         ::TBranch* b_WFA_NumberOfSignalHits; //!
         ::TBranch* b_FitVertexX; //!
         ::TBranch* b_FitVertexY; //!
         ::TBranch* b_FitVertexZ; //!
         ::TBranch* b_FitVertexQ; //!
         ::TString fOutFile; //
         bool isPSD1; //
         bool isPSD2; //
         bool isPSD3; //
         bool isTPC; //
         int PSD1id; //
         int PSD2id; //
         int PSD3id; //
         int TPCid; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void CentralityDetectorEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityDetectorEvent(void *p = 0);
   static void *newArray_CentralityDetectorEvent(Long_t size, void *p);
   static void delete_CentralityDetectorEvent(void *p);
   static void deleteArray_CentralityDetectorEvent(void *p);
   static void destruct_CentralityDetectorEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityDetectorEvent*)
   {
      ::CentralityDetectorEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityDetectorEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityDetectorEvent", ::CentralityDetectorEvent::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralityDetectorEvent.h", 10,
                  typeid(::CentralityDetectorEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralityDetectorEvent::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityDetectorEvent) );
      instance.SetNew(&new_CentralityDetectorEvent);
      instance.SetNewArray(&newArray_CentralityDetectorEvent);
      instance.SetDelete(&delete_CentralityDetectorEvent);
      instance.SetDeleteArray(&deleteArray_CentralityDetectorEvent);
      instance.SetDestructor(&destruct_CentralityDetectorEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralityDetectorEvent*)
   {
      return GenerateInitInstanceLocal((::CentralityDetectorEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityDetectorEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralityEventContainer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityEventContainer(void *p = 0);
   static void *newArray_CentralityEventContainer(Long_t size, void *p);
   static void delete_CentralityEventContainer(void *p);
   static void deleteArray_CentralityEventContainer(void *p);
   static void destruct_CentralityEventContainer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityEventContainer*)
   {
      ::CentralityEventContainer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityEventContainer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityEventContainer", ::CentralityEventContainer::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralityEventContainer.h", 13,
                  typeid(::CentralityEventContainer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralityEventContainer::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityEventContainer) );
      instance.SetNew(&new_CentralityEventContainer);
      instance.SetNewArray(&newArray_CentralityEventContainer);
      instance.SetDelete(&delete_CentralityEventContainer);
      instance.SetDeleteArray(&deleteArray_CentralityEventContainer);
      instance.SetDestructor(&destruct_CentralityEventContainer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralityEventContainer*)
   {
      return GenerateInitInstanceLocal((::CentralityEventContainer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityEventContainer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralitySlice_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralitySlice(void *p = 0);
   static void *newArray_CentralitySlice(Long_t size, void *p);
   static void delete_CentralitySlice(void *p);
   static void deleteArray_CentralitySlice(void *p);
   static void destruct_CentralitySlice(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralitySlice*)
   {
      ::CentralitySlice *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralitySlice >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralitySlice", ::CentralitySlice::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralitySlice.h", 11,
                  typeid(::CentralitySlice), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralitySlice::Dictionary, isa_proxy, 4,
                  sizeof(::CentralitySlice) );
      instance.SetNew(&new_CentralitySlice);
      instance.SetNewArray(&newArray_CentralitySlice);
      instance.SetDelete(&delete_CentralitySlice);
      instance.SetDeleteArray(&deleteArray_CentralitySlice);
      instance.SetDestructor(&destruct_CentralitySlice);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralitySlice*)
   {
      return GenerateInitInstanceLocal((::CentralitySlice*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralitySlice*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralitySlicesFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralitySlicesFinder(void *p = 0);
   static void *newArray_CentralitySlicesFinder(Long_t size, void *p);
   static void delete_CentralitySlicesFinder(void *p);
   static void deleteArray_CentralitySlicesFinder(void *p);
   static void destruct_CentralitySlicesFinder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralitySlicesFinder*)
   {
      ::CentralitySlicesFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralitySlicesFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralitySlicesFinder", ::CentralitySlicesFinder::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralitySlicesFinder.h", 21,
                  typeid(::CentralitySlicesFinder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralitySlicesFinder::Dictionary, isa_proxy, 4,
                  sizeof(::CentralitySlicesFinder) );
      instance.SetNew(&new_CentralitySlicesFinder);
      instance.SetNewArray(&newArray_CentralitySlicesFinder);
      instance.SetDelete(&delete_CentralitySlicesFinder);
      instance.SetDeleteArray(&deleteArray_CentralitySlicesFinder);
      instance.SetDestructor(&destruct_CentralitySlicesFinder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralitySlicesFinder*)
   {
      return GenerateInitInstanceLocal((::CentralitySlicesFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralitySlicesFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GlauberParGetter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GlauberParGetter(void *p = 0);
   static void *newArray_GlauberParGetter(Long_t size, void *p);
   static void delete_GlauberParGetter(void *p);
   static void deleteArray_GlauberParGetter(void *p);
   static void destruct_GlauberParGetter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GlauberParGetter*)
   {
      ::GlauberParGetter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GlauberParGetter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GlauberParGetter", ::GlauberParGetter::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/../Glauber/GlauberParGetter.h", 13,
                  typeid(::GlauberParGetter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GlauberParGetter::Dictionary, isa_proxy, 4,
                  sizeof(::GlauberParGetter) );
      instance.SetNew(&new_GlauberParGetter);
      instance.SetNewArray(&newArray_GlauberParGetter);
      instance.SetDelete(&delete_GlauberParGetter);
      instance.SetDeleteArray(&deleteArray_GlauberParGetter);
      instance.SetDestructor(&destruct_GlauberParGetter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GlauberParGetter*)
   {
      return GenerateInitInstanceLocal((::GlauberParGetter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GlauberParGetter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralityGetter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityGetter(void *p = 0);
   static void *newArray_CentralityGetter(Long_t size, void *p);
   static void delete_CentralityGetter(void *p);
   static void deleteArray_CentralityGetter(void *p);
   static void destruct_CentralityGetter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityGetter*)
   {
      ::CentralityGetter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityGetter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityGetter", ::CentralityGetter::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralityGetter.h", 15,
                  typeid(::CentralityGetter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralityGetter::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityGetter) );
      instance.SetNew(&new_CentralityGetter);
      instance.SetNewArray(&newArray_CentralityGetter);
      instance.SetDelete(&delete_CentralityGetter);
      instance.SetDeleteArray(&deleteArray_CentralityGetter);
      instance.SetDestructor(&destruct_CentralityGetter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralityGetter*)
   {
      return GenerateInitInstanceLocal((::CentralityGetter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityGetter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NA61DataEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NA61DataEvent_Dictionary();
   static void *new_NA61DataEvent(void *p = 0);
   static void *newArray_NA61DataEvent(Long_t size, void *p);
   static void delete_NA61DataEvent(void *p);
   static void deleteArray_NA61DataEvent(void *p);
   static void destruct_NA61DataEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NA61DataEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::NA61DataEvent) == sizeof( ::ROOTShadow::Shadow::NA61DataEvent));
      ::NA61DataEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::NA61DataEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("NA61DataEvent", "/home/liza/CentralityFramework/CentralityFramework/include/NA61DataEvent.h", 19,
                  typeid(::NA61DataEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &NA61DataEvent_ShowMembers, &NA61DataEvent_Dictionary, isa_proxy, 4,
                  sizeof(::NA61DataEvent) );
      instance.SetNew(&new_NA61DataEvent);
      instance.SetNewArray(&newArray_NA61DataEvent);
      instance.SetDelete(&delete_NA61DataEvent);
      instance.SetDeleteArray(&deleteArray_NA61DataEvent);
      instance.SetDestructor(&destruct_NA61DataEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NA61DataEvent*)
   {
      return GenerateInitInstanceLocal((::NA61DataEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NA61DataEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NA61DataEvent_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEvent*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeTrack(void *p = 0);
   static void *newArray_DataTreeTrack(Long_t size, void *p);
   static void delete_DataTreeTrack(void *p);
   static void deleteArray_DataTreeTrack(void *p);
   static void destruct_DataTreeTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeTrack*)
   {
      ::DataTreeTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeTrack", ::DataTreeTrack::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeTrack.h", 14,
                  typeid(::DataTreeTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeTrack::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeTrack) );
      instance.SetNew(&new_DataTreeTrack);
      instance.SetNewArray(&newArray_DataTreeTrack);
      instance.SetDelete(&delete_DataTreeTrack);
      instance.SetDeleteArray(&deleteArray_DataTreeTrack);
      instance.SetDestructor(&destruct_DataTreeTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeTrack*)
   {
      return GenerateInitInstanceLocal((::DataTreeTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreePSDSection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreePSDSection(void *p = 0);
   static void *newArray_DataTreePSDSection(Long_t size, void *p);
   static void delete_DataTreePSDSection(void *p);
   static void deleteArray_DataTreePSDSection(void *p);
   static void destruct_DataTreePSDSection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreePSDSection*)
   {
      ::DataTreePSDSection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreePSDSection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreePSDSection", ::DataTreePSDSection::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreePSDSection.h", 10,
                  typeid(::DataTreePSDSection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreePSDSection::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreePSDSection) );
      instance.SetNew(&new_DataTreePSDSection);
      instance.SetNewArray(&newArray_DataTreePSDSection);
      instance.SetDelete(&delete_DataTreePSDSection);
      instance.SetDeleteArray(&deleteArray_DataTreePSDSection);
      instance.SetDestructor(&destruct_DataTreePSDSection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreePSDSection*)
   {
      return GenerateInitInstanceLocal((::DataTreePSDSection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreePSDSection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreePSDModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreePSDModule(void *p = 0);
   static void *newArray_DataTreePSDModule(Long_t size, void *p);
   static void delete_DataTreePSDModule(void *p);
   static void deleteArray_DataTreePSDModule(void *p);
   static void destruct_DataTreePSDModule(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreePSDModule*)
   {
      ::DataTreePSDModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreePSDModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreePSDModule", ::DataTreePSDModule::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreePSDModule.h", 12,
                  typeid(::DataTreePSDModule), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreePSDModule::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreePSDModule) );
      instance.SetNew(&new_DataTreePSDModule);
      instance.SetNewArray(&newArray_DataTreePSDModule);
      instance.SetDelete(&delete_DataTreePSDModule);
      instance.SetDeleteArray(&deleteArray_DataTreePSDModule);
      instance.SetDestructor(&destruct_DataTreePSDModule);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreePSDModule*)
   {
      return GenerateInitInstanceLocal((::DataTreePSDModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreePSDModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeTOFHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeTOFHit(void *p = 0);
   static void *newArray_DataTreeTOFHit(Long_t size, void *p);
   static void delete_DataTreeTOFHit(void *p);
   static void deleteArray_DataTreeTOFHit(void *p);
   static void destruct_DataTreeTOFHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeTOFHit*)
   {
      ::DataTreeTOFHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeTOFHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeTOFHit", ::DataTreeTOFHit::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeTOFHit.h", 10,
                  typeid(::DataTreeTOFHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeTOFHit::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeTOFHit) );
      instance.SetNew(&new_DataTreeTOFHit);
      instance.SetNewArray(&newArray_DataTreeTOFHit);
      instance.SetDelete(&delete_DataTreeTOFHit);
      instance.SetDeleteArray(&deleteArray_DataTreeTOFHit);
      instance.SetDestructor(&destruct_DataTreeTOFHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeTOFHit*)
   {
      return GenerateInitInstanceLocal((::DataTreeTOFHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeTOFHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeV0Candidate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeV0Candidate(void *p = 0);
   static void *newArray_DataTreeV0Candidate(Long_t size, void *p);
   static void delete_DataTreeV0Candidate(void *p);
   static void deleteArray_DataTreeV0Candidate(void *p);
   static void destruct_DataTreeV0Candidate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeV0Candidate*)
   {
      ::DataTreeV0Candidate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeV0Candidate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeV0Candidate", ::DataTreeV0Candidate::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeV0Candidate.h", 10,
                  typeid(::DataTreeV0Candidate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeV0Candidate::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeV0Candidate) );
      instance.SetNew(&new_DataTreeV0Candidate);
      instance.SetNewArray(&newArray_DataTreeV0Candidate);
      instance.SetDelete(&delete_DataTreeV0Candidate);
      instance.SetDeleteArray(&deleteArray_DataTreeV0Candidate);
      instance.SetDestructor(&destruct_DataTreeV0Candidate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeV0Candidate*)
   {
      return GenerateInitInstanceLocal((::DataTreeV0Candidate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeV0Candidate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeMCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeMCTrack(void *p = 0);
   static void *newArray_DataTreeMCTrack(Long_t size, void *p);
   static void delete_DataTreeMCTrack(void *p);
   static void deleteArray_DataTreeMCTrack(void *p);
   static void destruct_DataTreeMCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeMCTrack*)
   {
      ::DataTreeMCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeMCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeMCTrack", ::DataTreeMCTrack::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeMCTrack.h", 10,
                  typeid(::DataTreeMCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeMCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeMCTrack) );
      instance.SetNew(&new_DataTreeMCTrack);
      instance.SetNewArray(&newArray_DataTreeMCTrack);
      instance.SetDelete(&delete_DataTreeMCTrack);
      instance.SetDeleteArray(&deleteArray_DataTreeMCTrack);
      instance.SetDestructor(&destruct_DataTreeMCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeMCTrack*)
   {
      return GenerateInitInstanceLocal((::DataTreeMCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeMCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeTrigger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeTrigger(void *p = 0);
   static void *newArray_DataTreeTrigger(Long_t size, void *p);
   static void delete_DataTreeTrigger(void *p);
   static void deleteArray_DataTreeTrigger(void *p);
   static void destruct_DataTreeTrigger(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeTrigger*)
   {
      ::DataTreeTrigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeTrigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeTrigger", ::DataTreeTrigger::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeTrigger.h", 11,
                  typeid(::DataTreeTrigger), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeTrigger::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeTrigger) );
      instance.SetNew(&new_DataTreeTrigger);
      instance.SetNewArray(&newArray_DataTreeTrigger);
      instance.SetDelete(&delete_DataTreeTrigger);
      instance.SetDeleteArray(&deleteArray_DataTreeTrigger);
      instance.SetDestructor(&destruct_DataTreeTrigger);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeTrigger*)
   {
      return GenerateInitInstanceLocal((::DataTreeTrigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeTrigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeBPD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeBPD(void *p = 0);
   static void *newArray_DataTreeBPD(Long_t size, void *p);
   static void delete_DataTreeBPD(void *p);
   static void deleteArray_DataTreeBPD(void *p);
   static void destruct_DataTreeBPD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeBPD*)
   {
      ::DataTreeBPD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeBPD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeBPD", ::DataTreeBPD::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeBPD.h", 10,
                  typeid(::DataTreeBPD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeBPD::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeBPD) );
      instance.SetNew(&new_DataTreeBPD);
      instance.SetNewArray(&newArray_DataTreeBPD);
      instance.SetDelete(&delete_DataTreeBPD);
      instance.SetDeleteArray(&deleteArray_DataTreeBPD);
      instance.SetDestructor(&destruct_DataTreeBPD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeBPD*)
   {
      return GenerateInitInstanceLocal((::DataTreeBPD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeBPD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeEvent(void *p = 0);
   static void *newArray_DataTreeEvent(Long_t size, void *p);
   static void delete_DataTreeEvent(void *p);
   static void deleteArray_DataTreeEvent(void *p);
   static void destruct_DataTreeEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeEvent*)
   {
      ::DataTreeEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeEvent", ::DataTreeEvent::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeEvent.h", 21,
                  typeid(::DataTreeEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeEvent::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeEvent) );
      instance.SetNew(&new_DataTreeEvent);
      instance.SetNewArray(&newArray_DataTreeEvent);
      instance.SetDelete(&delete_DataTreeEvent);
      instance.SetDeleteArray(&deleteArray_DataTreeEvent);
      instance.SetDestructor(&destruct_DataTreeEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeEvent*)
   {
      return GenerateInitInstanceLocal((::DataTreeEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NA61DataEventNew_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NA61DataEventNew(void *p = 0);
   static void *newArray_NA61DataEventNew(Long_t size, void *p);
   static void delete_NA61DataEventNew(void *p);
   static void deleteArray_NA61DataEventNew(void *p);
   static void destruct_NA61DataEventNew(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NA61DataEventNew*)
   {
      ::NA61DataEventNew *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NA61DataEventNew >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NA61DataEventNew", ::NA61DataEventNew::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/NA61DataEventNew.h", 18,
                  typeid(::NA61DataEventNew), ::ROOT::DefineBehavior(ptr, ptr),
                  &::NA61DataEventNew::Dictionary, isa_proxy, 4,
                  sizeof(::NA61DataEventNew) );
      instance.SetNew(&new_NA61DataEventNew);
      instance.SetNewArray(&newArray_NA61DataEventNew);
      instance.SetDelete(&delete_NA61DataEventNew);
      instance.SetDeleteArray(&deleteArray_NA61DataEventNew);
      instance.SetDestructor(&destruct_NA61DataEventNew);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NA61DataEventNew*)
   {
      return GenerateInitInstanceLocal((::NA61DataEventNew*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NA61DataEventNew*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralityManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityManager(void *p = 0);
   static void *newArray_CentralityManager(Long_t size, void *p);
   static void delete_CentralityManager(void *p);
   static void deleteArray_CentralityManager(void *p);
   static void destruct_CentralityManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityManager*)
   {
      ::CentralityManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityManager", ::CentralityManager::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralityManager.h", 15,
                  typeid(::CentralityManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralityManager::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityManager) );
      instance.SetNew(&new_CentralityManager);
      instance.SetNewArray(&newArray_CentralityManager);
      instance.SetDelete(&delete_CentralityManager);
      instance.SetDeleteArray(&deleteArray_CentralityManager);
      instance.SetDestructor(&destruct_CentralityManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralityManager*)
   {
      return GenerateInitInstanceLocal((::CentralityManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeInterface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeInterface(void *p = 0);
   static void *newArray_TreeInterface(Long_t size, void *p);
   static void delete_TreeInterface(void *p);
   static void deleteArray_TreeInterface(void *p);
   static void destruct_TreeInterface(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeInterface*)
   {
      ::TreeInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeInterface", ::TreeInterface::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/TreeInterface.h", 18,
                  typeid(::TreeInterface), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeInterface::Dictionary, isa_proxy, 4,
                  sizeof(::TreeInterface) );
      instance.SetNew(&new_TreeInterface);
      instance.SetNewArray(&newArray_TreeInterface);
      instance.SetDelete(&delete_TreeInterface);
      instance.SetDeleteArray(&deleteArray_TreeInterface);
      instance.SetDestructor(&destruct_TreeInterface);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeInterface*)
   {
      return GenerateInitInstanceLocal((::TreeInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CentralityContainerNormalizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityContainerNormalizer(void *p = 0);
   static void *newArray_CentralityContainerNormalizer(Long_t size, void *p);
   static void delete_CentralityContainerNormalizer(void *p);
   static void deleteArray_CentralityContainerNormalizer(void *p);
   static void destruct_CentralityContainerNormalizer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityContainerNormalizer*)
   {
      ::CentralityContainerNormalizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityContainerNormalizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityContainerNormalizer", ::CentralityContainerNormalizer::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/include/CentralityContainerNormalizer.h", 18,
                  typeid(::CentralityContainerNormalizer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CentralityContainerNormalizer::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityContainerNormalizer) );
      instance.SetNew(&new_CentralityContainerNormalizer);
      instance.SetNewArray(&newArray_CentralityContainerNormalizer);
      instance.SetDelete(&delete_CentralityContainerNormalizer);
      instance.SetDeleteArray(&deleteArray_CentralityContainerNormalizer);
      instance.SetDestructor(&destruct_CentralityContainerNormalizer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CentralityContainerNormalizer*)
   {
      return GenerateInitInstanceLocal((::CentralityContainerNormalizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityContainerNormalizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GlauberFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GlauberFitter(void *p = 0);
   static void *newArray_GlauberFitter(Long_t size, void *p);
   static void delete_GlauberFitter(void *p);
   static void deleteArray_GlauberFitter(void *p);
   static void destruct_GlauberFitter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GlauberFitter*)
   {
      ::GlauberFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GlauberFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GlauberFitter", ::GlauberFitter::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/Glauber/GlauberFitter.h", 13,
                  typeid(::GlauberFitter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GlauberFitter::Dictionary, isa_proxy, 4,
                  sizeof(::GlauberFitter) );
      instance.SetNew(&new_GlauberFitter);
      instance.SetNewArray(&newArray_GlauberFitter);
      instance.SetDelete(&delete_GlauberFitter);
      instance.SetDeleteArray(&deleteArray_GlauberFitter);
      instance.SetDestructor(&destruct_GlauberFitter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GlauberFitter*)
   {
      return GenerateInitInstanceLocal((::GlauberFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GlauberFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliGlauberNucleus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliGlauberNucleus(void *p = 0);
   static void *newArray_AliGlauberNucleus(Long_t size, void *p);
   static void delete_AliGlauberNucleus(void *p);
   static void deleteArray_AliGlauberNucleus(void *p);
   static void destruct_AliGlauberNucleus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliGlauberNucleus*)
   {
      ::AliGlauberNucleus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliGlauberNucleus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliGlauberNucleus", ::AliGlauberNucleus::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/Glauber/AliGlauberNucleus.h", 22,
                  typeid(::AliGlauberNucleus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliGlauberNucleus::Dictionary, isa_proxy, 4,
                  sizeof(::AliGlauberNucleus) );
      instance.SetNew(&new_AliGlauberNucleus);
      instance.SetNewArray(&newArray_AliGlauberNucleus);
      instance.SetDelete(&delete_AliGlauberNucleus);
      instance.SetDeleteArray(&deleteArray_AliGlauberNucleus);
      instance.SetDestructor(&destruct_AliGlauberNucleus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliGlauberNucleus*)
   {
      return GenerateInitInstanceLocal((::AliGlauberNucleus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliGlauberNucleus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliGlauberMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliGlauberMC(void *p = 0);
   static void *newArray_AliGlauberMC(Long_t size, void *p);
   static void delete_AliGlauberMC(void *p);
   static void deleteArray_AliGlauberMC(void *p);
   static void destruct_AliGlauberMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliGlauberMC*)
   {
      ::AliGlauberMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliGlauberMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliGlauberMC", ::AliGlauberMC::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/Glauber/AliGlauberMC.h", 26,
                  typeid(::AliGlauberMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliGlauberMC::Dictionary, isa_proxy, 4,
                  sizeof(::AliGlauberMC) );
      instance.SetNew(&new_AliGlauberMC);
      instance.SetNewArray(&newArray_AliGlauberMC);
      instance.SetDelete(&delete_AliGlauberMC);
      instance.SetDeleteArray(&deleteArray_AliGlauberMC);
      instance.SetDestructor(&destruct_AliGlauberMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliGlauberMC*)
   {
      return GenerateInitInstanceLocal((::AliGlauberMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliGlauberMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliGlauberNucleon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliGlauberNucleon(void *p = 0);
   static void *newArray_AliGlauberNucleon(Long_t size, void *p);
   static void delete_AliGlauberNucleon(void *p);
   static void deleteArray_AliGlauberNucleon(void *p);
   static void destruct_AliGlauberNucleon(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliGlauberNucleon*)
   {
      ::AliGlauberNucleon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliGlauberNucleon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliGlauberNucleon", ::AliGlauberNucleon::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/Glauber/AliGlauberNucleon.h", 19,
                  typeid(::AliGlauberNucleon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliGlauberNucleon::Dictionary, isa_proxy, 4,
                  sizeof(::AliGlauberNucleon) );
      instance.SetNew(&new_AliGlauberNucleon);
      instance.SetNewArray(&newArray_AliGlauberNucleon);
      instance.SetDelete(&delete_AliGlauberNucleon);
      instance.SetDeleteArray(&deleteArray_AliGlauberNucleon);
      instance.SetDestructor(&destruct_AliGlauberNucleon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliGlauberNucleon*)
   {
      return GenerateInitInstanceLocal((::AliGlauberNucleon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliGlauberNucleon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeConverterNA61_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataTreeConverterNA61(void *p = 0);
   static void *newArray_DataTreeConverterNA61(Long_t size, void *p);
   static void delete_DataTreeConverterNA61(void *p);
   static void deleteArray_DataTreeConverterNA61(void *p);
   static void destruct_DataTreeConverterNA61(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeConverterNA61*)
   {
      ::DataTreeConverterNA61 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeConverterNA61 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeConverterNA61", ::DataTreeConverterNA61::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeConverterNA61.h", 23,
                  typeid(::DataTreeConverterNA61), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeConverterNA61::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeConverterNA61) );
      instance.SetNew(&new_DataTreeConverterNA61);
      instance.SetNewArray(&newArray_DataTreeConverterNA61);
      instance.SetDelete(&delete_DataTreeConverterNA61);
      instance.SetDeleteArray(&deleteArray_DataTreeConverterNA61);
      instance.SetDestructor(&destruct_DataTreeConverterNA61);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeConverterNA61*)
   {
      return GenerateInitInstanceLocal((::DataTreeConverterNA61*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeConverterNA61*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DataTreeSTSTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DataTreeSTSTrack(void *p);
   static void deleteArray_DataTreeSTSTrack(void *p);
   static void destruct_DataTreeSTSTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTreeSTSTrack*)
   {
      ::DataTreeSTSTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataTreeSTSTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTreeSTSTrack", ::DataTreeSTSTrack::Class_Version(), "/home/liza/CentralityFramework/CentralityFramework/InputTree/DataTreeSTSTrack.h", 10,
                  typeid(::DataTreeSTSTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DataTreeSTSTrack::Dictionary, isa_proxy, 4,
                  sizeof(::DataTreeSTSTrack) );
      instance.SetDelete(&delete_DataTreeSTSTrack);
      instance.SetDeleteArray(&deleteArray_DataTreeSTSTrack);
      instance.SetDestructor(&destruct_DataTreeSTSTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataTreeSTSTrack*)
   {
      return GenerateInitInstanceLocal((::DataTreeSTSTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTreeSTSTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr CentralityDetectorEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityDetectorEvent::Class_Name()
{
   return "CentralityDetectorEvent";
}

//______________________________________________________________________________
const char *CentralityDetectorEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityDetectorEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityDetectorEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityDetectorEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityDetectorEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityDetectorEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityDetectorEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityDetectorEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralityEventContainer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityEventContainer::Class_Name()
{
   return "CentralityEventContainer";
}

//______________________________________________________________________________
const char *CentralityEventContainer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityEventContainer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityEventContainer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityEventContainer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityEventContainer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityEventContainer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityEventContainer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityEventContainer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralitySlice::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralitySlice::Class_Name()
{
   return "CentralitySlice";
}

//______________________________________________________________________________
const char *CentralitySlice::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlice*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralitySlice::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlice*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralitySlice::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlice*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralitySlice::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlice*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralitySlicesFinder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralitySlicesFinder::Class_Name()
{
   return "CentralitySlicesFinder";
}

//______________________________________________________________________________
const char *CentralitySlicesFinder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlicesFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralitySlicesFinder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlicesFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralitySlicesFinder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlicesFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralitySlicesFinder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralitySlicesFinder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GlauberParGetter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GlauberParGetter::Class_Name()
{
   return "GlauberParGetter";
}

//______________________________________________________________________________
const char *GlauberParGetter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberParGetter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GlauberParGetter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberParGetter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GlauberParGetter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberParGetter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GlauberParGetter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberParGetter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralityGetter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityGetter::Class_Name()
{
   return "CentralityGetter";
}

//______________________________________________________________________________
const char *CentralityGetter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityGetter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityGetter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityGetter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityGetter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityGetter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityGetter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityGetter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeTrack::Class_Name()
{
   return "DataTreeTrack";
}

//______________________________________________________________________________
const char *DataTreeTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreePSDSection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreePSDSection::Class_Name()
{
   return "DataTreePSDSection";
}

//______________________________________________________________________________
const char *DataTreePSDSection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDSection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreePSDSection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDSection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreePSDSection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDSection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreePSDSection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDSection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreePSDModule::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreePSDModule::Class_Name()
{
   return "DataTreePSDModule";
}

//______________________________________________________________________________
const char *DataTreePSDModule::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreePSDModule::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreePSDModule::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreePSDModule::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreePSDModule*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeTOFHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeTOFHit::Class_Name()
{
   return "DataTreeTOFHit";
}

//______________________________________________________________________________
const char *DataTreeTOFHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTOFHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeTOFHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTOFHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeTOFHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTOFHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeTOFHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTOFHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeV0Candidate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeV0Candidate::Class_Name()
{
   return "DataTreeV0Candidate";
}

//______________________________________________________________________________
const char *DataTreeV0Candidate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeV0Candidate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeV0Candidate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeV0Candidate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeV0Candidate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeV0Candidate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeV0Candidate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeV0Candidate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeMCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeMCTrack::Class_Name()
{
   return "DataTreeMCTrack";
}

//______________________________________________________________________________
const char *DataTreeMCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeMCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeMCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeMCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeMCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeMCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeMCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeMCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeTrigger::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeTrigger::Class_Name()
{
   return "DataTreeTrigger";
}

//______________________________________________________________________________
const char *DataTreeTrigger::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeTrigger::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeTrigger::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeTrigger::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeTrigger*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeBPD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeBPD::Class_Name()
{
   return "DataTreeBPD";
}

//______________________________________________________________________________
const char *DataTreeBPD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeBPD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeBPD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeBPD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeBPD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeBPD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeBPD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeBPD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeEvent::Class_Name()
{
   return "DataTreeEvent";
}

//______________________________________________________________________________
const char *DataTreeEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr NA61DataEventNew::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *NA61DataEventNew::Class_Name()
{
   return "NA61DataEventNew";
}

//______________________________________________________________________________
const char *NA61DataEventNew::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEventNew*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NA61DataEventNew::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEventNew*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NA61DataEventNew::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEventNew*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NA61DataEventNew::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEventNew*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralityManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityManager::Class_Name()
{
   return "CentralityManager";
}

//______________________________________________________________________________
const char *CentralityManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TreeInterface::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TreeInterface::Class_Name()
{
   return "TreeInterface";
}

//______________________________________________________________________________
const char *TreeInterface::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TreeInterface::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TreeInterface::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TreeInterface::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeInterface*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CentralityContainerNormalizer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityContainerNormalizer::Class_Name()
{
   return "CentralityContainerNormalizer";
}

//______________________________________________________________________________
const char *CentralityContainerNormalizer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityContainerNormalizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityContainerNormalizer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityContainerNormalizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityContainerNormalizer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityContainerNormalizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityContainerNormalizer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CentralityContainerNormalizer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GlauberFitter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GlauberFitter::Class_Name()
{
   return "GlauberFitter";
}

//______________________________________________________________________________
const char *GlauberFitter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GlauberFitter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GlauberFitter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GlauberFitter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlauberFitter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AliGlauberNucleus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliGlauberNucleus::Class_Name()
{
   return "AliGlauberNucleus";
}

//______________________________________________________________________________
const char *AliGlauberNucleus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliGlauberNucleus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliGlauberNucleus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliGlauberNucleus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AliGlauberMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliGlauberMC::Class_Name()
{
   return "AliGlauberMC";
}

//______________________________________________________________________________
const char *AliGlauberMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliGlauberMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliGlauberMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliGlauberMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AliGlauberNucleon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliGlauberNucleon::Class_Name()
{
   return "AliGlauberNucleon";
}

//______________________________________________________________________________
const char *AliGlauberNucleon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliGlauberNucleon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliGlauberNucleon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliGlauberNucleon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliGlauberNucleon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeConverterNA61::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeConverterNA61::Class_Name()
{
   return "DataTreeConverterNA61";
}

//______________________________________________________________________________
const char *DataTreeConverterNA61::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeConverterNA61*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeConverterNA61::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeConverterNA61*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeConverterNA61::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeConverterNA61*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeConverterNA61::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeConverterNA61*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DataTreeSTSTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataTreeSTSTrack::Class_Name()
{
   return "DataTreeSTSTrack";
}

//______________________________________________________________________________
const char *DataTreeSTSTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeSTSTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataTreeSTSTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeSTSTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataTreeSTSTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeSTSTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataTreeSTSTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DataTreeSTSTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void CentralityDetectorEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityDetectorEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityDetectorEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityDetectorEvent::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityDetectorEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityDetectorEvent.
      TClass *R__cl = ::CentralityDetectorEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetId", &fDetId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWeights", (void*)&fWeights);
      R__insp.InspectMember("vector<Float_t>", (void*)&fWeights, "fWeights.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralityDetectorEvent(void *p) {
      return  p ? new(p) ::CentralityDetectorEvent : new ::CentralityDetectorEvent;
   }
   static void *newArray_CentralityDetectorEvent(Long_t nElements, void *p) {
      return p ? new(p) ::CentralityDetectorEvent[nElements] : new ::CentralityDetectorEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityDetectorEvent(void *p) {
      delete ((::CentralityDetectorEvent*)p);
   }
   static void deleteArray_CentralityDetectorEvent(void *p) {
      delete [] ((::CentralityDetectorEvent*)p);
   }
   static void destruct_CentralityDetectorEvent(void *p) {
      typedef ::CentralityDetectorEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralityDetectorEvent

//______________________________________________________________________________
void CentralityEventContainer::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityEventContainer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityEventContainer::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityEventContainer::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityEventContainer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityEventContainer.
      TClass *R__cl = ::CentralityEventContainer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunId", &fRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", &fB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventId", &fEventId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorEvents", (void*)&fDetectorEvents);
      R__insp.InspectMember("vector<CentralityDetectorEvent>", (void*)&fDetectorEvents, "fDetectorEvents.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralityEventContainer(void *p) {
      return  p ? new(p) ::CentralityEventContainer : new ::CentralityEventContainer;
   }
   static void *newArray_CentralityEventContainer(Long_t nElements, void *p) {
      return p ? new(p) ::CentralityEventContainer[nElements] : new ::CentralityEventContainer[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityEventContainer(void *p) {
      delete ((::CentralityEventContainer*)p);
   }
   static void deleteArray_CentralityEventContainer(void *p) {
      delete [] ((::CentralityEventContainer*)p);
   }
   static void destruct_CentralityEventContainer(void *p) {
      typedef ::CentralityEventContainer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralityEventContainer

//______________________________________________________________________________
void CentralityGetter::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityGetter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityGetter::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityGetter::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityGetter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityGetter.
      TClass *R__cl = ::CentralityGetter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSlices", &fNSlices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet1Int", &isDet1Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet2Int", &isDet2Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunId", &fRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlice", &fSlice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCentrTree", &fCentrTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCentrFile", &fCentrFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1Norm", &fDet1Norm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2Norm", &fDet2Norm);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralityGetter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CentralityGetter : new ::CentralityGetter;
   }
   static void *newArray_CentralityGetter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CentralityGetter[nElements] : new ::CentralityGetter[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityGetter(void *p) {
      delete ((::CentralityGetter*)p);
   }
   static void deleteArray_CentralityGetter(void *p) {
      delete [] ((::CentralityGetter*)p);
   }
   static void destruct_CentralityGetter(void *p) {
      typedef ::CentralityGetter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralityGetter

//______________________________________________________________________________
void CentralitySlicesFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralitySlicesFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralitySlicesFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralitySlicesFinder::Class(),this);
   }
}

//______________________________________________________________________________
void CentralitySlicesFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralitySlicesFinder.
      TClass *R__cl = ::CentralitySlicesFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1Name", &fDet1Name);
      R__insp.InspectMember(fDet1Name, "fDet1Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2Name", &fDet2Name);
      R__insp.InspectMember(fDet2Name, "fDet2Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCuts", &fCuts);
      R__insp.InspectMember(fCuts, "fCuts.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCentralityMax", &fCentralityMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrecision", &fPrecision);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirectionCentralEvents", &fDirectionCentralEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInFileName", &fInFileName);
      R__insp.InspectMember(fInFileName, "fInFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is1DAnalisys", &is1DAnalisys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet1Int", &isDet1Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet2Int", &isDet2Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSliceStep", &fSliceStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nIntervals", &nIntervals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSimData", &fIsSimData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalization", &fNormalization);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CFdir", &CFdir);
      R__insp.InspectMember(CFdir, "CFdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInFile", &fInFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInTree", &fInTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1Id", &fDet1Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2Id", &fDet2Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1NormVec", (void*)&fDet1NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet1NormVec, "fDet1NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2NormVec", (void*)&fDet2NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet2NormVec, "fDet2NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunIdVec", (void*)&fRunIdVec);
      R__insp.InspectMember("vector<Int_t>", (void*)&fRunIdVec, "fRunIdVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEventsInRunVec", (void*)&nEventsInRunVec);
      R__insp.InspectMember("vector<Int_t>", (void*)&nEventsInRunVec, "nEventsInRunVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanB", (void*)&MeanB);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanB, "MeanB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlice", &fSlice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNormTree", &fNormTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCentrTree", &fCentrTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlicesFile", &fSlicesFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitFunction", &fFitFunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitFunction2", &fFitFunction2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det1max", &det1max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det2max", &det2max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorrProfile", &fCorrProfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det1", &det1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det2", &det2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", &fB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFileName", &fOutFileName);
      R__insp.InspectMember(fOutFileName, "fOutFileName.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralitySlicesFinder(void *p) {
      return  p ? new(p) ::CentralitySlicesFinder : new ::CentralitySlicesFinder;
   }
   static void *newArray_CentralitySlicesFinder(Long_t nElements, void *p) {
      return p ? new(p) ::CentralitySlicesFinder[nElements] : new ::CentralitySlicesFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralitySlicesFinder(void *p) {
      delete ((::CentralitySlicesFinder*)p);
   }
   static void deleteArray_CentralitySlicesFinder(void *p) {
      delete [] ((::CentralitySlicesFinder*)p);
   }
   static void destruct_CentralitySlicesFinder(void *p) {
      typedef ::CentralitySlicesFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralitySlicesFinder

//______________________________________________________________________________
void CentralityManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityManager::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityManager.
      TClass *R__cl = ::CentralityManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fContainerFileName", &fContainerFileName);
      R__insp.InspectMember(fContainerFileName, "fContainerFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlicesFinder", &fSlicesFinder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCentralityGetter", &fCentralityGetter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNA61DataEvent", &fNA61DataEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetNames", (void*)&fDetNames);
      R__insp.InspectMember("vector<TString>", (void*)&fDetNames, "fDetNames.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralityManager(void *p) {
      return  p ? new(p) ::CentralityManager : new ::CentralityManager;
   }
   static void *newArray_CentralityManager(Long_t nElements, void *p) {
      return p ? new(p) ::CentralityManager[nElements] : new ::CentralityManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityManager(void *p) {
      delete ((::CentralityManager*)p);
   }
   static void deleteArray_CentralityManager(void *p) {
      delete [] ((::CentralityManager*)p);
   }
   static void destruct_CentralityManager(void *p) {
      typedef ::CentralityManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralityManager

//______________________________________________________________________________
void CentralitySlice::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralitySlice.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralitySlice::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralitySlice::Class(),this);
   }
}

//______________________________________________________________________________
void CentralitySlice::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralitySlice.
      TClass *R__cl = ::CentralitySlice::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunId", &fRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1Max", &fDet1Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2Max", &fDet2Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSlices", &fNSlices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCentralityMax", &fCentralityMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirectionCentralEvents", &fDirectionCentralEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvec", (void*)&fAvec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fAvec, "fAvec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBvec", (void*)&fBvec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fBvec, "fBvec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXvec", (void*)&fXvec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fXvec, "fXvec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanX", (void*)&MeanX);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanX, "MeanX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanY", (void*)&MeanY);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanY, "MeanY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanXY", (void*)&MeanXY);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanXY, "MeanXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaX", (void*)&SigmaX);
      R__insp.InspectMember("vector<Float_t>", (void*)&SigmaX, "SigmaX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaY", (void*)&SigmaY);
      R__insp.InspectMember("vector<Float_t>", (void*)&SigmaY, "SigmaY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaXY", (void*)&SigmaXY);
      R__insp.InspectMember("vector<Float_t>", (void*)&SigmaXY, "SigmaXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanXY3", (void*)&MeanXY3);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanXY3, "MeanXY3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanB", (void*)&MeanB);
      R__insp.InspectMember("vector<Float_t>", (void*)&MeanB, "MeanB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaB", (void*)&SigmaB);
      R__insp.InspectMember("vector<Float_t>", (void*)&SigmaB, "SigmaB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dB", (void*)&dB);
      R__insp.InspectMember("vector<Float_t>", (void*)&dB, "dB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dSigmaB", (void*)&dSigmaB);
      R__insp.InspectMember("vector<Float_t>", (void*)&dSigmaB, "dSigmaB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1NormVec", (void*)&fDet1NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet1NormVec, "fDet1NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2NormVec", (void*)&fDet2NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet2NormVec, "fDet2NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunIdVec", (void*)&fRunIdVec);
      R__insp.InspectMember("vector<Int_t>", (void*)&fRunIdVec, "fRunIdVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitFunction", &fFitFunction);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralitySlice(void *p) {
      return  p ? new(p) ::CentralitySlice : new ::CentralitySlice;
   }
   static void *newArray_CentralitySlice(Long_t nElements, void *p) {
      return p ? new(p) ::CentralitySlice[nElements] : new ::CentralitySlice[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralitySlice(void *p) {
      delete ((::CentralitySlice*)p);
   }
   static void deleteArray_CentralitySlice(void *p) {
      delete [] ((::CentralitySlice*)p);
   }
   static void destruct_CentralitySlice(void *p) {
      typedef ::CentralitySlice current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralitySlice

//______________________________________________________________________________
void NA61DataEventNew::Streamer(TBuffer &R__b)
{
   // Stream an object of class NA61DataEventNew.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NA61DataEventNew::Class(),this);
   } else {
      R__b.WriteClassBuffer(NA61DataEventNew::Class(),this);
   }
}

//______________________________________________________________________________
void NA61DataEventNew::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NA61DataEventNew.
      TClass *R__cl = ::NA61DataEventNew::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Eta", &Beam_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFileName", &fOutFileName);
      R__insp.InspectMember(fOutFileName, "fOutFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInFileName", &fInFileName);
      R__insp.InspectMember(fInFileName, "fInFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutTree", &fOutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutFile", &fOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NA61DataEventNew(void *p) {
      return  p ? new(p) ::NA61DataEventNew : new ::NA61DataEventNew;
   }
   static void *newArray_NA61DataEventNew(Long_t nElements, void *p) {
      return p ? new(p) ::NA61DataEventNew[nElements] : new ::NA61DataEventNew[nElements];
   }
   // Wrapper around operator delete
   static void delete_NA61DataEventNew(void *p) {
      delete ((::NA61DataEventNew*)p);
   }
   static void deleteArray_NA61DataEventNew(void *p) {
      delete [] ((::NA61DataEventNew*)p);
   }
   static void destruct_NA61DataEventNew(void *p) {
      typedef ::NA61DataEventNew current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NA61DataEventNew

//______________________________________________________________________________
namespace ROOTDict {
   void NA61DataEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class NA61DataEvent.
      typedef ::ROOTShadow::Shadow::NA61DataEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::NA61DataEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &sobj->fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &sobj->fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event_Id", &sobj->Event_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Run_Id", &sobj->Run_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event_Timestamp", &sobj->Event_Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_pT[2000]", sobj->TPC_track_pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_eta[2000]", sobj->TPC_track_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_phi[2000]", sobj->TPC_track_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_Total[2000]", sobj->TPC_track_nClusters_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCV1[2000]", sobj->TPC_track_nClusters_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCV2[2000]", sobj->TPC_track_nClusters_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCVmain[2000]", sobj->TPC_track_nClusters_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCVgap[2000]", sobj->TPC_track_nClusters_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_Total[2000]", sobj->TPC_track_nClustersPotential_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCV1[2000]", sobj->TPC_track_nClustersPotential_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCV2[2000]", sobj->TPC_track_nClustersPotential_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCVmain[2000]", sobj->TPC_track_nClustersPotential_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCVgap[2000]", sobj->TPC_track_nClustersPotential_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersFit_Total[2000]", sobj->TPC_track_nClustersFit_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersFit_TPCV1[2000]", sobj->TPC_track_nClustersFit_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersFit_TPCV2[2000]", sobj->TPC_track_nClustersFit_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersFit_TPCVmain[2000]", sobj->TPC_track_nClustersFit_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersFit_TPCVgap[2000]", sobj->TPC_track_nClustersFit_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersdEdX_Total[2000]", sobj->TPC_track_nClustersdEdX_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersdEdX_TPCV1[2000]", sobj->TPC_track_nClustersdEdX_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersdEdX_TPCV2[2000]", sobj->TPC_track_nClustersdEdX_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersdEdX_TPCVmain[2000]", sobj->TPC_track_nClustersdEdX_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersdEdX_TPCVgap[2000]", sobj->TPC_track_nClustersdEdX_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_EnergyClusters_Total[2000]", sobj->TPC_track_EnergyClusters_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_EnergyClusters_TPCV1[2000]", sobj->TPC_track_EnergyClusters_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_EnergyClusters_TPCV2[2000]", sobj->TPC_track_EnergyClusters_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_EnergyClusters_TPCVmain[2000]", sobj->TPC_track_EnergyClusters_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_EnergyClusters_TPCVgap[2000]", sobj->TPC_track_EnergyClusters_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_DCAtoVertex_X[2000]", sobj->TPC_track_DCAtoVertex_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_DCAtoVertex_Y[2000]", sobj->TPC_track_DCAtoVertex_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_DCAtoVertex_Z[2000]", sobj->TPC_track_DCAtoVertex_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_chi2[2000]", sobj->TPC_track_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_ndf[2000]", sobj->TPC_track_ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_Multiplicity", &sobj->TPC_Multiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_Multiplicity_all", &sobj->TPC_Multiplicity_all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_Multiplicity_Clusters_VTPC1_VTPC2", &sobj->TPC_Multiplicity_Clusters_VTPC1_VTPC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_Multiplicity_Clusters_All", &sobj->TPC_Multiplicity_Clusters_All);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_cos1", &sobj->TPC_cos1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_sin1", &sobj->TPC_sin1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_cos2", &sobj->TPC_cos2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_sin2", &sobj->TPC_sin2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Number", &sobj->PSD_module_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_section_Number", &sobj->PSD_section_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_section_slice_Energy[10]", sobj->PSD_section_slice_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_X[45]", sobj->PSD_module_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Y[45]", sobj->PSD_module_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Z[45]", sobj->PSD_module_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Energy[45]", sobj->PSD_module_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Energy_default[45]", sobj->PSD_module_Energy_default);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_number_of_sections[45]", sobj->PSD_module_number_of_sections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_section_Energy[45][10]", sobj->PSD_section_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_section_Number_array[45][10]", sobj->PSD_section_Number_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_Energy", &sobj->PSD_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_1_Energy", &sobj->PSD_1_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_2_Energy", &sobj->PSD_2_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_3_Energy", &sobj->PSD_3_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex_X", &sobj->Vertex_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex_Y", &sobj->Vertex_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex_Z", &sobj->Vertex_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T1", &sobj->T1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T2", &sobj->T2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T3", &sobj->T3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T4", &sobj->T4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Status[2][3][3]", sobj->BPD_Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Position[2][3][3]", sobj->BPD_Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_PositionError[2][3][3]", sobj->BPD_PositionError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Z[2][3][3]", sobj->BPD_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_RMS[2][3][3]", sobj->BPD_RMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Maximum[2][3][3]", sobj->BPD_Maximum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Charge[2][3][3]", sobj->BPD_Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_SumOfAll[2][3][3]", sobj->BPD_SumOfAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggersADC[2][6]", sobj->triggersADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTriggers_Simple[2][6]", sobj->isTriggers_Simple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTriggers_Combined[2][4]", sobj->isTriggers_Combined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Momentum[2][3]", sobj->Beam_Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Fitted2DLineXZ[2][3]", sobj->Beam_Fitted2DLineXZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Fitted2DLineYZ[2][3]", sobj->Beam_Fitted2DLineYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Status[2]", sobj->Beam_Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WFA_TimeStructure[6][2000]", sobj->WFA_TimeStructure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WFA_NumberOfSignalHits[6]", sobj->WFA_NumberOfSignalHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexX", &sobj->FitVertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexY", &sobj->FitVertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexZ", &sobj->FitVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexQ", &sobj->FitVertexQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Event_Id", &sobj->b_Event_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Run_Id", &sobj->b_Run_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Event_Timestamp", &sobj->b_Event_Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_pT", &sobj->b_TPC_track_pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_eta", &sobj->b_TPC_track_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_phi", &sobj->b_TPC_track_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClusters_Total", &sobj->b_TPC_track_nClusters_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClusters_TPCV1", &sobj->b_TPC_track_nClusters_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClusters_TPCV2", &sobj->b_TPC_track_nClusters_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClusters_TPCVmain", &sobj->b_TPC_track_nClusters_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClusters_TPCVgap", &sobj->b_TPC_track_nClusters_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersPotential_Total", &sobj->b_TPC_track_nClustersPotential_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersPotential_TPCV1", &sobj->b_TPC_track_nClustersPotential_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersPotential_TPCV2", &sobj->b_TPC_track_nClustersPotential_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersPotential_TPCVmain", &sobj->b_TPC_track_nClustersPotential_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersPotential_TPCVgap", &sobj->b_TPC_track_nClustersPotential_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersFit_Total", &sobj->b_TPC_track_nClustersFit_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersFit_TPCV1", &sobj->b_TPC_track_nClustersFit_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersFit_TPCV2", &sobj->b_TPC_track_nClustersFit_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersFit_TPCVmain", &sobj->b_TPC_track_nClustersFit_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersFit_TPCVgap", &sobj->b_TPC_track_nClustersFit_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersdEdX_Total", &sobj->b_TPC_track_nClustersdEdX_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersdEdX_TPCV1", &sobj->b_TPC_track_nClustersdEdX_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersdEdX_TPCV2", &sobj->b_TPC_track_nClustersdEdX_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersdEdX_TPCVmain", &sobj->b_TPC_track_nClustersdEdX_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_nClustersdEdX_TPCVgap", &sobj->b_TPC_track_nClustersdEdX_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_EnergyClusters_Total", &sobj->b_TPC_track_EnergyClusters_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_EnergyClusters_TPCV1", &sobj->b_TPC_track_EnergyClusters_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_EnergyClusters_TPCV2", &sobj->b_TPC_track_EnergyClusters_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_EnergyClusters_TPCVmain", &sobj->b_TPC_track_EnergyClusters_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_EnergyClusters_TPCVgap", &sobj->b_TPC_track_EnergyClusters_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_DCAtoVertex_X", &sobj->b_TPC_track_DCAtoVertex_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_DCAtoVertex_Y", &sobj->b_TPC_track_DCAtoVertex_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_DCAtoVertex_Z", &sobj->b_TPC_track_DCAtoVertex_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_chi2", &sobj->b_TPC_track_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_track_ndf", &sobj->b_TPC_track_ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_Multiplicity", &sobj->b_TPC_Multiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_Multiplicity_all", &sobj->b_TPC_Multiplicity_all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_Multiplicity_Clusters_VTPC1_VTPC2", &sobj->b_TPC_Multiplicity_Clusters_VTPC1_VTPC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_Multiplicity_Clusters_All", &sobj->b_TPC_Multiplicity_Clusters_All);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_cos1", &sobj->b_TPC_cos1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_sin1", &sobj->b_TPC_sin1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_cos2", &sobj->b_TPC_cos2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TPC_sin2", &sobj->b_TPC_sin2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_Number", &sobj->b_PSD_module_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_section_Number", &sobj->b_PSD_section_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_section_slice_Energy", &sobj->b_PSD_section_slice_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_X", &sobj->b_PSD_module_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_Y", &sobj->b_PSD_module_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_Z", &sobj->b_PSD_module_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_Energy", &sobj->b_PSD_module_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_Energy_default", &sobj->b_PSD_module_Energy_default);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_module_number_of_sections", &sobj->b_PSD_module_number_of_sections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_section_Energy", &sobj->b_PSD_section_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_section_Number_array", &sobj->b_PSD_section_Number_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_Energy", &sobj->b_PSD_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_1_Energy", &sobj->b_PSD_1_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_2_Energy", &sobj->b_PSD_2_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_PSD_3_Energy", &sobj->b_PSD_3_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vertex_X", &sobj->b_Vertex_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vertex_Y", &sobj->b_Vertex_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Vertex_Z", &sobj->b_Vertex_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_T1", &sobj->b_T1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_T2", &sobj->b_T2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_T3", &sobj->b_T3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_T4", &sobj->b_T4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_Status", &sobj->b_BPD_Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_Position", &sobj->b_BPD_Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_PositionError", &sobj->b_BPD_PositionError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_Z", &sobj->b_BPD_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_RMS", &sobj->b_BPD_RMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_Maximum", &sobj->b_BPD_Maximum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_Charge", &sobj->b_BPD_Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_BPD_SumOfAll", &sobj->b_BPD_SumOfAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_triggersADC", &sobj->b_triggersADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_isTriggers_Simple", &sobj->b_isTriggers_Simple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_isTriggers_Combined", &sobj->b_isTriggers_Combined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Beam_Momentum", &sobj->b_Beam_Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Beam_Fitted2DLineXZ", &sobj->b_Beam_Fitted2DLineXZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Beam_Fitted2DLineYZ", &sobj->b_Beam_Fitted2DLineYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Beam_Status", &sobj->b_Beam_Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_WFA_TimeStructure", &sobj->b_WFA_TimeStructure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_WFA_NumberOfSignalHits", &sobj->b_WFA_NumberOfSignalHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_FitVertexX", &sobj->b_FitVertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_FitVertexY", &sobj->b_FitVertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_FitVertexZ", &sobj->b_FitVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_FitVertexQ", &sobj->b_FitVertexQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFile", &sobj->fOutFile);
      R__insp.InspectMember(sobj->fOutFile, "fOutFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPSD1", &sobj->isPSD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPSD2", &sobj->isPSD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPSD3", &sobj->isPSD3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTPC", &sobj->isTPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD1id", &sobj->PSD1id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD2id", &sobj->PSD2id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD3id", &sobj->PSD3id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCid", &sobj->TPCid);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NA61DataEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::NA61DataEvent : new ::NA61DataEvent;
   }
   static void *newArray_NA61DataEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::NA61DataEvent[nElements] : new ::NA61DataEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NA61DataEvent(void *p) {
      delete ((::NA61DataEvent*)p);
   }
   static void deleteArray_NA61DataEvent(void *p) {
      delete [] ((::NA61DataEvent*)p);
   }
   static void destruct_NA61DataEvent(void *p) {
      typedef ::NA61DataEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NA61DataEvent

//______________________________________________________________________________
void CentralityContainerNormalizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityContainerNormalizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityContainerNormalizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityContainerNormalizer::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityContainerNormalizer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityContainerNormalizer.
      TClass *R__cl = ::CentralityContainerNormalizer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1Name", &fDet1Name);
      R__insp.InspectMember(fDet1Name, "fDet1Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2Name", &fDet2Name);
      R__insp.InspectMember(fDet2Name, "fDet2Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunId", &fRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is1DAnalisys", &is1DAnalisys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInFileName", &fInFileName);
      R__insp.InspectMember(fInFileName, "fInFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet1Int", &isDet1Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDet2Int", &isDet2Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSimData", &fIsSimData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalization", &fNormalization);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CFdir", &CFdir);
      R__insp.InspectMember(CFdir, "CFdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet1NormVec", (void*)&fDet1NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet1NormVec, "fDet1NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet2NormVec", (void*)&fDet2NormVec);
      R__insp.InspectMember("vector<Float_t>", (void*)&fDet2NormVec, "fDet2NormVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunIdVec", (void*)&fRunIdVec);
      R__insp.InspectMember("vector<Int_t>", (void*)&fRunIdVec, "fRunIdVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEventsInRun2Vec", (void*)&nEventsInRun2Vec);
      R__insp.InspectMember("vector<Int_t>", (void*)&nEventsInRun2Vec, "nEventsInRun2Vec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEventsInRun1Vec", (void*)&nEventsInRun1Vec);
      R__insp.InspectMember("vector<Int_t>", (void*)&nEventsInRun1Vec, "nEventsInRun1Vec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInFile", &fInFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInTree", &fInTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNormTree", &fNormTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det1", &det1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det2", &det2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det1max", &det1max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det2max", &det2max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", &fB);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CentralityContainerNormalizer(void *p) {
      return  p ? new(p) ::CentralityContainerNormalizer : new ::CentralityContainerNormalizer;
   }
   static void *newArray_CentralityContainerNormalizer(Long_t nElements, void *p) {
      return p ? new(p) ::CentralityContainerNormalizer[nElements] : new ::CentralityContainerNormalizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityContainerNormalizer(void *p) {
      delete ((::CentralityContainerNormalizer*)p);
   }
   static void deleteArray_CentralityContainerNormalizer(void *p) {
      delete [] ((::CentralityContainerNormalizer*)p);
   }
   static void destruct_CentralityContainerNormalizer(void *p) {
      typedef ::CentralityContainerNormalizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CentralityContainerNormalizer

//______________________________________________________________________________
void AliGlauberMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliGlauberMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliGlauberMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliGlauberMC::Class(),this);
   }
}

//______________________________________________________________________________
void AliGlauberMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliGlauberMC.
      TClass *R__cl = ::AliGlauberMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fANucleus", &fANucleus);
      R__insp.InspectMember(fANucleus, "fANucleus.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBNucleus", &fBNucleus);
      R__insp.InspectMember(fBNucleus, "fBNucleus.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXSect", &fXSect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNucleonsA", &fNucleonsA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNucleonsB", &fNucleonsB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAN", &fAN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAN", &fQAN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBN", &fBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQBN", &fQBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fnt", &fnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanX2", &fMeanX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanY2", &fMeanY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXY", &fMeanXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanX2Parts", &fMeanX2Parts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanY2Parts", &fMeanY2Parts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXYParts", &fMeanXYParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXParts", &fMeanXParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYParts", &fMeanYParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOXParts", &fMeanOXParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOYParts", &fMeanOYParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXColl", &fMeanXColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYColl", &fMeanYColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOXColl", &fMeanOXColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOYColl", &fMeanOYColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanX2Coll", &fMeanX2Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanY2Coll", &fMeanY2Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXYColl", &fMeanXYColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXCom", &fMeanXCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYCom", &fMeanYCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOXCom", &fMeanOXCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOYCom", &fMeanOYCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanX2Com", &fMeanX2Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanY2Com", &fMeanY2Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXYCom", &fMeanXYCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXSystem", &fMeanXSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYSystem", &fMeanYSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXA", &fMeanXA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYA", &fMeanYA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanXB", &fMeanXB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanYB", &fMeanYB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOXA", &fMeanOXA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOYA", &fMeanOYA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOXB", &fMeanOXB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanOYB", &fMeanOYB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBMC", &fBMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", &fEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalEvents", &fTotalEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBMin", &fBMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBMax", &fBMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdNdEtaParam[10]", fdNdEtaParam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultType", &fMultType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNpartFound", &fMaxNpartFound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fONpart", &fONpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fONcoll", &fONcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fONcom", &fONcom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpart", &fNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcoll", &fNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcom", &fNcom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2", &fMeanr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3", &fMeanr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4", &fMeanr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5", &fMeanr5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos2Phi", &fMeanr2Cos2Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin2Phi", &fMeanr2Sin2Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos3Phi", &fMeanr2Cos3Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin3Phi", &fMeanr2Sin3Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos4Phi", &fMeanr2Cos4Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin4Phi", &fMeanr2Sin4Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos5Phi", &fMeanr2Cos5Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin5Phi", &fMeanr2Sin5Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Cos3Phi", &fMeanr3Cos3Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Sin3Phi", &fMeanr3Sin3Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Cos4Phi", &fMeanr4Cos4Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Sin4Phi", &fMeanr4Sin4Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Cos5Phi", &fMeanr5Cos5Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Sin5Phi", &fMeanr5Sin5Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Coll", &fMeanr2Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Coll", &fMeanr3Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Coll", &fMeanr4Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Coll", &fMeanr5Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos2PhiColl", &fMeanr2Cos2PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin2PhiColl", &fMeanr2Sin2PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos3PhiColl", &fMeanr2Cos3PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin3PhiColl", &fMeanr2Sin3PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos4PhiColl", &fMeanr2Cos4PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin4PhiColl", &fMeanr2Sin4PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos5PhiColl", &fMeanr2Cos5PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin5PhiColl", &fMeanr2Sin5PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Cos3PhiColl", &fMeanr3Cos3PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Sin3PhiColl", &fMeanr3Sin3PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Cos4PhiColl", &fMeanr4Cos4PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Sin4PhiColl", &fMeanr4Sin4PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Cos5PhiColl", &fMeanr5Cos5PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Sin5PhiColl", &fMeanr5Sin5PhiColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Com", &fMeanr2Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Com", &fMeanr3Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Com", &fMeanr4Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Com", &fMeanr5Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos2PhiCom", &fMeanr2Cos2PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin2PhiCom", &fMeanr2Sin2PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos3PhiCom", &fMeanr2Cos3PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin3PhiCom", &fMeanr2Sin3PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos4PhiCom", &fMeanr2Cos4PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin4PhiCom", &fMeanr2Sin4PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Cos5PhiCom", &fMeanr2Cos5PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr2Sin5PhiCom", &fMeanr2Sin5PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Cos3PhiCom", &fMeanr3Cos3PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr3Sin3PhiCom", &fMeanr3Sin3PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Cos4PhiCom", &fMeanr4Cos4PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr4Sin4PhiCom", &fMeanr4Sin4PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Cos5PhiCom", &fMeanr5Cos5PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanr5Sin5PhiCom", &fMeanr5Sin5PhiCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSx2Parts", &fSx2Parts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSy2Parts", &fSy2Parts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSxyParts", &fSxyParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSx2Coll", &fSx2Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSy2Coll", &fSy2Coll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSxyColl", &fSxyColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSx2Com", &fSx2Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSy2Com", &fSy2Com);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSxyCom", &fSxyCom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpp", &fNpp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoPartProd", &fDoPartProd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBNN", &fBNN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoFluc", &fDoFluc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOmega", &fOmega);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSig0", &fSig0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLambda", &fLambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigFluc", &fSigFluc);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliGlauberMC(void *p) {
      return  p ? new(p) ::AliGlauberMC : new ::AliGlauberMC;
   }
   static void *newArray_AliGlauberMC(Long_t nElements, void *p) {
      return p ? new(p) ::AliGlauberMC[nElements] : new ::AliGlauberMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliGlauberMC(void *p) {
      delete ((::AliGlauberMC*)p);
   }
   static void deleteArray_AliGlauberMC(void *p) {
      delete [] ((::AliGlauberMC*)p);
   }
   static void destruct_AliGlauberMC(void *p) {
      typedef ::AliGlauberMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliGlauberMC

//______________________________________________________________________________
void AliGlauberNucleon::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliGlauberNucleon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliGlauberNucleon::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliGlauberNucleon::Class(),this);
   }
}

//______________________________________________________________________________
void AliGlauberNucleon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliGlauberNucleon.
      TClass *R__cl = ::AliGlauberNucleon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInNucleusA", &fInNucleusA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNColl", &fNColl);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliGlauberNucleon(void *p) {
      return  p ? new(p) ::AliGlauberNucleon : new ::AliGlauberNucleon;
   }
   static void *newArray_AliGlauberNucleon(Long_t nElements, void *p) {
      return p ? new(p) ::AliGlauberNucleon[nElements] : new ::AliGlauberNucleon[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliGlauberNucleon(void *p) {
      delete ((::AliGlauberNucleon*)p);
   }
   static void deleteArray_AliGlauberNucleon(void *p) {
      delete [] ((::AliGlauberNucleon*)p);
   }
   static void destruct_AliGlauberNucleon(void *p) {
      typedef ::AliGlauberNucleon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliGlauberNucleon

//______________________________________________________________________________
void AliGlauberNucleus::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliGlauberNucleus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliGlauberNucleus::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliGlauberNucleus::Class(),this);
   }
}

//______________________________________________________________________________
void AliGlauberNucleus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliGlauberNucleus.
      TClass *R__cl = ::AliGlauberNucleus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinDist", &fMinDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF", &fF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrials", &fTrials);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFunction", &fFunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNucleons", &fNucleons);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliGlauberNucleus(void *p) {
      return  p ? new(p) ::AliGlauberNucleus : new ::AliGlauberNucleus;
   }
   static void *newArray_AliGlauberNucleus(Long_t nElements, void *p) {
      return p ? new(p) ::AliGlauberNucleus[nElements] : new ::AliGlauberNucleus[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliGlauberNucleus(void *p) {
      delete ((::AliGlauberNucleus*)p);
   }
   static void deleteArray_AliGlauberNucleus(void *p) {
      delete [] ((::AliGlauberNucleus*)p);
   }
   static void destruct_AliGlauberNucleus(void *p) {
      typedef ::AliGlauberNucleus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliGlauberNucleus

//______________________________________________________________________________
void GlauberFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class GlauberFitter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GlauberFitter::Class(),this);
   } else {
      R__b.WriteClassBuffer(GlauberFitter::Class(),this);
   }
}

//______________________________________________________________________________
void GlauberFitter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GlauberFitter.
      TClass *R__cl = ::GlauberFitter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpart", &hNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNcoll", &hNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hData", &hData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNBD", &hNBD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlaub", &hGlaub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBestFit", &hBestFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimTree", &fSimTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpart", &fNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcoll", &fNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpartMax", &fNpartMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcollMax", &fNcollMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultMax", &fMultMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinSize", &fBinSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitMultMin", &fFitMultMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormMultMin", &fNormMultMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMode", &fMode);
      R__insp.InspectMember(fMode, "fMode.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutDirName", &fOutDirName);
      R__insp.InspectMember(fOutDirName, "fOutDirName.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GlauberFitter(void *p) {
      return  p ? new(p) ::GlauberFitter : new ::GlauberFitter;
   }
   static void *newArray_GlauberFitter(Long_t nElements, void *p) {
      return p ? new(p) ::GlauberFitter[nElements] : new ::GlauberFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_GlauberFitter(void *p) {
      delete ((::GlauberFitter*)p);
   }
   static void deleteArray_GlauberFitter(void *p) {
      delete [] ((::GlauberFitter*)p);
   }
   static void destruct_GlauberFitter(void *p) {
      typedef ::GlauberFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GlauberFitter

//______________________________________________________________________________
void GlauberParGetter::Streamer(TBuffer &R__b)
{
   // Stream an object of class GlauberParGetter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GlauberParGetter::Class(),this);
   } else {
      R__b.WriteClassBuffer(GlauberParGetter::Class(),this);
   }
}

//______________________________________________________________________________
void GlauberParGetter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GlauberParGetter.
      TClass *R__cl = ::GlauberParGetter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNBD", &hNBD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlaub", &hGlaub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hB", &hB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpart", &hNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNcoll", &hNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEstd", &hEstd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimTree", &fSimTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpart", &fNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcoll", &fNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", &fB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEstd", &fEstd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF", &fF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMu", &fMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fK", &fK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutDirName", &fOutDirName);
      R__insp.InspectMember(fOutDirName, "fOutDirName.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GlauberParGetter(void *p) {
      return  p ? new(p) ::GlauberParGetter : new ::GlauberParGetter;
   }
   static void *newArray_GlauberParGetter(Long_t nElements, void *p) {
      return p ? new(p) ::GlauberParGetter[nElements] : new ::GlauberParGetter[nElements];
   }
   // Wrapper around operator delete
   static void delete_GlauberParGetter(void *p) {
      delete ((::GlauberParGetter*)p);
   }
   static void deleteArray_GlauberParGetter(void *p) {
      delete [] ((::GlauberParGetter*)p);
   }
   static void destruct_GlauberParGetter(void *p) {
      typedef ::GlauberParGetter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GlauberParGetter

//______________________________________________________________________________
void DataTreeBPD::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeBPD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeBPD::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeBPD::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeBPD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeBPD.
      TClass *R__cl = ::DataTreeBPD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position[3]", Position);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeBPD(void *p) {
      return  p ? new(p) ::DataTreeBPD : new ::DataTreeBPD;
   }
   static void *newArray_DataTreeBPD(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeBPD[nElements] : new ::DataTreeBPD[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeBPD(void *p) {
      delete ((::DataTreeBPD*)p);
   }
   static void deleteArray_DataTreeBPD(void *p) {
      delete [] ((::DataTreeBPD*)p);
   }
   static void destruct_DataTreeBPD(void *p) {
      typedef ::DataTreeBPD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeBPD

//______________________________________________________________________________
void DataTreeConverterNA61::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeConverterNA61.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeConverterNA61::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeConverterNA61::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeConverterNA61::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeConverterNA61.
      TClass *R__cl = ::DataTreeConverterNA61::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DTEvent", &DTEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurEvent", &fCurEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents", &nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nRealEvents", &nRealEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sInputFileName", &sInputFileName);
      R__insp.InspectMember(sInputFileName, "sInputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sOutputFileName", &sOutputFileName);
      R__insp.InspectMember(sOutputFileName, "sOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFile", &fTreeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeQA", &fTreeQA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Run_Id", &Run_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event_Id", &Event_Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event_Timestamp", &Event_Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RPAngle", &RPAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ImpactParameter", &ImpactParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T1", &T1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T2", &T2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T4", &T4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggersADC[2][6]", triggersADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BPD_Position[2][3][3]", BPD_Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexX", &FitVertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexY", &FitVertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexZ", &FitVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FitVertexQ", &FitVertexQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Energy[45]", PSD_module_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_section_Energy[45][10]", PSD_section_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_X[45]", PSD_module_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Y[45]", PSD_module_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_module_Z[45]", PSD_module_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_pT[2000]", TPC_track_pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_eta[2000]", TPC_track_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_phi[2000]", TPC_track_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_NofHits[2000]", TPC_track_NofHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_PidHypo[2000]", TPC_track_PidHypo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_Flag[2000]", TPC_track_Flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_ChiSq[2000]", TPC_track_ChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_NDF[2000]", TPC_track_NDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_DCAtoVertex_X[2000]", TPC_track_DCAtoVertex_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_DCAtoVertex_Y[2000]", TPC_track_DCAtoVertex_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_Total[2000]", TPC_track_nClusters_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCV1[2000]", TPC_track_nClusters_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCV2[2000]", TPC_track_nClusters_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCVmain[2000]", TPC_track_nClusters_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClusters_TPCVgap[2000]", TPC_track_nClusters_TPCVgap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_Total[2000]", TPC_track_nClustersPotential_Total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCV1[2000]", TPC_track_nClustersPotential_TPCV1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCV2[2000]", TPC_track_nClustersPotential_TPCV2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCVmain[2000]", TPC_track_nClustersPotential_TPCVmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPC_track_nClustersPotential_TPCVgap[2000]", TPC_track_nClustersPotential_TPCVgap);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeConverterNA61(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataTreeConverterNA61 : new ::DataTreeConverterNA61;
   }
   static void *newArray_DataTreeConverterNA61(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataTreeConverterNA61[nElements] : new ::DataTreeConverterNA61[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeConverterNA61(void *p) {
      delete ((::DataTreeConverterNA61*)p);
   }
   static void deleteArray_DataTreeConverterNA61(void *p) {
      delete [] ((::DataTreeConverterNA61*)p);
   }
   static void destruct_DataTreeConverterNA61(void *p) {
      typedef ::DataTreeConverterNA61 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeConverterNA61

//______________________________________________________________________________
void DataTreeEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeEvent::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeEvent.
      TClass *R__cl = ::DataTreeEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProcessFlag", &ProcessFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunId", &RunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventId", &EventId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventTimestamp", &EventTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VertexPosition[3]", VertexPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VertexQuality", &VertexQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCVertexPosition[3]", MCVertexPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RPAngle", &RPAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ImpactParameter", &ImpactParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCPSDEnergy", &MCPSDEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTracks", &nTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrTracks", &arrTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFiredPSDModules", &nFiredPSDModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFiredPSDSections", &nFiredPSDSections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSDEnergy", &PSDEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPSDModules", &nPSDModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrPSDModules", &arrPSDModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTOFHits", &nTOFHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrTOFHits", &arrTOFHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nV0CandidatesTOFpid", &nV0CandidatesTOFpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nV0SpecificCandidatesTOFpid[3]", nV0SpecificCandidatesTOFpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrV0CandidatesTOFpid", &arrV0CandidatesTOFpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nV0CandidatesMCpid", &nV0CandidatesMCpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nV0SpecificCandidatesMCpid[3]", nV0SpecificCandidatesMCpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrV0CandidatesMCpid", &arrV0CandidatesMCpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMCTracks", &nMCTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrMCTracks", &arrMCTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTriggers", &nTriggers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrTriggers", &arrTriggers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBPDs", &nBPDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrBPDs", &arrBPDs);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeEvent(void *p) {
      return  p ? new(p) ::DataTreeEvent : new ::DataTreeEvent;
   }
   static void *newArray_DataTreeEvent(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeEvent[nElements] : new ::DataTreeEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeEvent(void *p) {
      delete ((::DataTreeEvent*)p);
   }
   static void deleteArray_DataTreeEvent(void *p) {
      delete [] ((::DataTreeEvent*)p);
   }
   static void destruct_DataTreeEvent(void *p) {
      typedef ::DataTreeEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeEvent

//______________________________________________________________________________
void DataTreeMCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeMCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeMCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeMCTrack::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeMCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeMCTrack.
      TClass *R__cl = ::DataTreeMCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ifPrimary", &ifPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT", &pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PdgId", &PdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MotherId", &MotherId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFPosition[3]", TOFPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOF_pT", &TOF_pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOF_phi", &TOF_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOF_eta", &TOF_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSDPosition[3]", PSDPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_pT", &PSD_pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_phi", &PSD_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSD_eta", &PSD_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSDEnergy", &PSDEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSDSectionId", &PSDSectionId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFSegmentId", &TOFSegmentId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeMCTrack(void *p) {
      return  p ? new(p) ::DataTreeMCTrack : new ::DataTreeMCTrack;
   }
   static void *newArray_DataTreeMCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeMCTrack[nElements] : new ::DataTreeMCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeMCTrack(void *p) {
      delete ((::DataTreeMCTrack*)p);
   }
   static void deleteArray_DataTreeMCTrack(void *p) {
      delete [] ((::DataTreeMCTrack*)p);
   }
   static void destruct_DataTreeMCTrack(void *p) {
      typedef ::DataTreeMCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeMCTrack

//______________________________________________________________________________
void DataTreePSDModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreePSDModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreePSDModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreePSDModule::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreePSDModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreePSDModule.
      TClass *R__cl = ::DataTreePSDModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProcessFlag", &ProcessFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSections", &nSections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SectionNumberCut", &SectionNumberCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position[3]", Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFiredSections", &nFiredSections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrSections", &arrSections);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreePSDModule(void *p) {
      return  p ? new(p) ::DataTreePSDModule : new ::DataTreePSDModule;
   }
   static void *newArray_DataTreePSDModule(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreePSDModule[nElements] : new ::DataTreePSDModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreePSDModule(void *p) {
      delete ((::DataTreePSDModule*)p);
   }
   static void deleteArray_DataTreePSDModule(void *p) {
      delete [] ((::DataTreePSDModule*)p);
   }
   static void destruct_DataTreePSDModule(void *p) {
      typedef ::DataTreePSDModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreePSDModule

//______________________________________________________________________________
void DataTreePSDSection::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreePSDSection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreePSDSection::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreePSDSection::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreePSDSection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreePSDSection.
      TClass *R__cl = ::DataTreePSDSection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreePSDSection(void *p) {
      return  p ? new(p) ::DataTreePSDSection : new ::DataTreePSDSection;
   }
   static void *newArray_DataTreePSDSection(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreePSDSection[nElements] : new ::DataTreePSDSection[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreePSDSection(void *p) {
      delete ((::DataTreePSDSection*)p);
   }
   static void deleteArray_DataTreePSDSection(void *p) {
      delete [] ((::DataTreePSDSection*)p);
   }
   static void destruct_DataTreePSDSection(void *p) {
      typedef ::DataTreePSDSection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreePSDSection

//______________________________________________________________________________
void DataTreeSTSTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeSTSTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeSTSTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeSTSTrack::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeSTSTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeSTSTrack.
      TClass *R__cl = ::DataTreeSTSTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT", &pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofHits", &NofHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Flag", &Flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChiSq", &ChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDF", &NDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCA[3]", DCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCTrack_id", &MCTrack_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFHit_id", &TOFHit_id);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_DataTreeSTSTrack(void *p) {
      delete ((::DataTreeSTSTrack*)p);
   }
   static void deleteArray_DataTreeSTSTrack(void *p) {
      delete [] ((::DataTreeSTSTrack*)p);
   }
   static void destruct_DataTreeSTSTrack(void *p) {
      typedef ::DataTreeSTSTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeSTSTrack

//______________________________________________________________________________
void DataTreeTOFHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeTOFHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeTOFHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeTOFHit::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeTOFHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeTOFHit.
      TClass *R__cl = ::DataTreeTOFHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position[3]", Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass2", &Mass2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beta", &Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P", &P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeTOFHit(void *p) {
      return  p ? new(p) ::DataTreeTOFHit : new ::DataTreeTOFHit;
   }
   static void *newArray_DataTreeTOFHit(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeTOFHit[nElements] : new ::DataTreeTOFHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeTOFHit(void *p) {
      delete ((::DataTreeTOFHit*)p);
   }
   static void deleteArray_DataTreeTOFHit(void *p) {
      delete [] ((::DataTreeTOFHit*)p);
   }
   static void destruct_DataTreeTOFHit(void *p) {
      typedef ::DataTreeTOFHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeTOFHit

//______________________________________________________________________________
void DataTreeTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeTrack::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeTrack.
      TClass *R__cl = ::DataTreeTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT[4]", pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi[4]", phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta[4]", eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px[4]", px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py[4]", py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz[4]", pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[4]", p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofHits[4][5]", NofHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NofHitsPotential[4][5]", NofHitsPotential);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Flag[4]", Flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChiSq[4]", ChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VtxChiSq[4]", VtxChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDF[4]", NDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DCA[4][3]", DCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Stations[4][8]", Stations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStations[4]", nStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSTSHitsPossible[4]", nSTSHitsPossible);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LengthInSTS[4]", LengthInSTS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge[4]", Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PSDModuleId", &PSDModuleId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFSegmentId", &TOFSegmentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MCTrackId", &MCTrackId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeTrack(void *p) {
      return  p ? new(p) ::DataTreeTrack : new ::DataTreeTrack;
   }
   static void *newArray_DataTreeTrack(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeTrack[nElements] : new ::DataTreeTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeTrack(void *p) {
      delete ((::DataTreeTrack*)p);
   }
   static void deleteArray_DataTreeTrack(void *p) {
      delete [] ((::DataTreeTrack*)p);
   }
   static void destruct_DataTreeTrack(void *p) {
      typedef ::DataTreeTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeTrack

//______________________________________________________________________________
void DataTreeTrigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeTrigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeTrigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeTrigger::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeTrigger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeTrigger.
      TClass *R__cl = ::DataTreeTrigger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Signal", &Signal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Label", &Label);
      R__insp.InspectMember(Label, "Label.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeTrigger(void *p) {
      return  p ? new(p) ::DataTreeTrigger : new ::DataTreeTrigger;
   }
   static void *newArray_DataTreeTrigger(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeTrigger[nElements] : new ::DataTreeTrigger[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeTrigger(void *p) {
      delete ((::DataTreeTrigger*)p);
   }
   static void deleteArray_DataTreeTrigger(void *p) {
      delete [] ((::DataTreeTrigger*)p);
   }
   static void destruct_DataTreeTrigger(void *p) {
      typedef ::DataTreeTrigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeTrigger

//______________________________________________________________________________
void DataTreeV0Candidate::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataTreeV0Candidate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataTreeV0Candidate::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataTreeV0Candidate::Class(),this);
   }
}

//______________________________________________________________________________
void DataTreeV0Candidate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataTreeV0Candidate.
      TClass *R__cl = ::DataTreeV0Candidate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT", &pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PdgId", &PdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChiSq", &ChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackId", &TrackId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDaughters", &nDaughters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*arrDaughters", &arrDaughters);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataTreeV0Candidate(void *p) {
      return  p ? new(p) ::DataTreeV0Candidate : new ::DataTreeV0Candidate;
   }
   static void *newArray_DataTreeV0Candidate(Long_t nElements, void *p) {
      return p ? new(p) ::DataTreeV0Candidate[nElements] : new ::DataTreeV0Candidate[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTreeV0Candidate(void *p) {
      delete ((::DataTreeV0Candidate*)p);
   }
   static void deleteArray_DataTreeV0Candidate(void *p) {
      delete [] ((::DataTreeV0Candidate*)p);
   }
   static void destruct_DataTreeV0Candidate(void *p) {
      typedef ::DataTreeV0Candidate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataTreeV0Candidate

//______________________________________________________________________________
void TreeInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeInterface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeInterface::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeInterface::Class(),this);
   }
}

//______________________________________________________________________________
void TreeInterface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeInterface.
      TClass *R__cl = ::TreeInterface::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_Eta", &Beam_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFileName", &fOutFileName);
      R__insp.InspectMember(fOutFileName, "fOutFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInFileName", &fInFileName);
      R__insp.InspectMember(fInFileName, "fInFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInFile", &fInFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInTree", &fInTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutTree", &fOutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutFile", &fOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsdGeomConfig", &fPsdGeomConfig);
      R__insp.InspectMember(fPsdGeomConfig, "fPsdGeomConfig.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEntries", &nEntries);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeInterface(void *p) {
      return  p ? new(p) ::TreeInterface : new ::TreeInterface;
   }
   static void *newArray_TreeInterface(Long_t nElements, void *p) {
      return p ? new(p) ::TreeInterface[nElements] : new ::TreeInterface[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeInterface(void *p) {
      delete ((::TreeInterface*)p);
   }
   static void deleteArray_TreeInterface(void *p) {
      delete [] ((::TreeInterface*)p);
   }
   static void destruct_TreeInterface(void *p) {
      typedef ::TreeInterface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeInterface

namespace ROOTDict {
   void vectorlECentralityDetectorEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECentralityDetectorEventgR_Dictionary();
   static void *new_vectorlECentralityDetectorEventgR(void *p = 0);
   static void *newArray_vectorlECentralityDetectorEventgR(Long_t size, void *p);
   static void delete_vectorlECentralityDetectorEventgR(void *p);
   static void deleteArray_vectorlECentralityDetectorEventgR(void *p);
   static void destruct_vectorlECentralityDetectorEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<CentralityDetectorEvent>*)
   {
      vector<CentralityDetectorEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CentralityDetectorEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CentralityDetectorEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<CentralityDetectorEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlECentralityDetectorEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CentralityDetectorEvent>) );
      instance.SetNew(&new_vectorlECentralityDetectorEventgR);
      instance.SetNewArray(&newArray_vectorlECentralityDetectorEventgR);
      instance.SetDelete(&delete_vectorlECentralityDetectorEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlECentralityDetectorEventgR);
      instance.SetDestructor(&destruct_vectorlECentralityDetectorEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<CentralityDetectorEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CentralityDetectorEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECentralityDetectorEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<CentralityDetectorEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlECentralityDetectorEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CentralityDetectorEvent> : new vector<CentralityDetectorEvent>;
   }
   static void *newArray_vectorlECentralityDetectorEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CentralityDetectorEvent>[nElements] : new vector<CentralityDetectorEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECentralityDetectorEventgR(void *p) {
      delete ((vector<CentralityDetectorEvent>*)p);
   }
   static void deleteArray_vectorlECentralityDetectorEventgR(void *p) {
      delete [] ((vector<CentralityDetectorEvent>*)p);
   }
   static void destruct_vectorlECentralityDetectorEventgR(void *p) {
      typedef vector<CentralityDetectorEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<CentralityDetectorEvent>

namespace ROOTDict {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TString>

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "prec_stl/vector", 49,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* G__Centrality.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Centrality();

extern "C" void G__set_cpp_environmentG__Centrality() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/CentralityDetectorEvent.h");
  G__add_compiledheader("include/CentralityEventContainer.h");
  G__add_compiledheader("include/CentralitySlicesFinder.h");
  G__add_compiledheader("include/CentralityGetter.h");
  G__add_compiledheader("include/NA61DataEvent.h");
  G__add_compiledheader("include/NA61DataEventNew.h");
  G__add_compiledheader("include/CentralityManager.h");
  G__add_compiledheader("include/CentralitySlice.h");
  G__add_compiledheader("include/TreeInterface.h");
  G__add_compiledheader("include/CentralityContainerNormalizer.h");
  G__add_compiledheader("Glauber/GlauberFitter.h");
  G__add_compiledheader("Glauber/GlauberParGetter.h");
  G__add_compiledheader("Glauber/AliGlauberMC.h");
  G__add_compiledheader("Glauber/AliGlauberNucleon.h");
  G__add_compiledheader("Glauber/AliGlauberNucleus.h");
  G__add_compiledheader("InputTree/DataTreeBPD.h");
  G__add_compiledheader("InputTree/DataTreeConstants.h");
  G__add_compiledheader("InputTree/DataTreeConverterNA61.h");
  G__add_compiledheader("InputTree/DataTreeEvent.h");
  G__add_compiledheader("InputTree/DataTreeMCTrack.h");
  G__add_compiledheader("InputTree/DataTreePSDModule.h");
  G__add_compiledheader("InputTree/DataTreePSDSection.h");
  G__add_compiledheader("InputTree/DataTreeSTSTrack.h");
  G__add_compiledheader("InputTree/DataTreeTOFHit.h");
  G__add_compiledheader("InputTree/DataTreeTrack.h");
  G__add_compiledheader("InputTree/DataTreeTrigger.h");
  G__add_compiledheader("InputTree/DataTreeV0Candidate.h");
  G__cpp_reset_tagtableG__Centrality();
}
#include <new>
extern "C" int G__cpp_dllrevG__Centrality() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CentralityDetectorEvent */
static int G__G__Centrality_127_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityDetectorEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityDetectorEvent[n];
     } else {
       p = new((void*) gvp) CentralityDetectorEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityDetectorEvent;
     } else {
       p = new((void*) gvp) CentralityDetectorEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityDetectorEvent*) G__getstructoffset())->SetDetId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityDetectorEvent*) G__getstructoffset())->SetEntries(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityDetectorEvent*) G__getstructoffset())->AddEntry((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralityDetectorEvent*) G__getstructoffset())->GetWeightVector();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityDetectorEvent*) G__getstructoffset())->GetDetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityDetectorEvent*) G__getstructoffset())->GetNumberOfChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityDetectorEvent*) G__getstructoffset())->GetTotalSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityDetectorEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityDetectorEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityDetectorEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityDetectorEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityDetectorEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityDetectorEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityDetectorEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityDetectorEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_127_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityDetectorEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_127_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralityDetectorEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralityDetectorEvent(*(CentralityDetectorEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityDetectorEvent G__TCentralityDetectorEvent;
static int G__G__Centrality_127_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityDetectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityDetectorEvent*) (soff+(sizeof(CentralityDetectorEvent)*i)))->~G__TCentralityDetectorEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityDetectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityDetectorEvent*) (soff))->~G__TCentralityDetectorEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_127_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityDetectorEvent* dest = (CentralityDetectorEvent*) G__getstructoffset();
   *dest = *(CentralityDetectorEvent*) libp->para[0].ref;
   const CentralityDetectorEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralityEventContainer */
static int G__G__Centrality_132_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityEventContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityEventContainer[n];
     } else {
       p = new((void*) gvp) CentralityEventContainer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityEventContainer;
     } else {
       p = new((void*) gvp) CentralityEventContainer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->SetRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->SetB((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->SetEventId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->AddDetector(*((CentralityDetectorEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->AddDetectorEntry((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->AddDetectorEvent((Int_t) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityEventContainer*) G__getstructoffset())->GetRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityEventContainer*) G__getstructoffset())->GetNumberOfDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CentralityDetectorEvent* pobj;
         CentralityDetectorEvent xobj = ((CentralityEventContainer*) G__getstructoffset())->GetDetectorData((Int_t) G__int(libp->para[0]));
         pobj = new CentralityDetectorEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityEventContainer*) G__getstructoffset())->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityEventContainer*) G__getstructoffset())->GetEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityEventContainer*) G__getstructoffset())->GetDetectorWeight((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityEventContainer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityEventContainer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityEventContainer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityEventContainer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityEventContainer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityEventContainer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityEventContainer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityEventContainer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_132_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityEventContainer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_132_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralityEventContainer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralityEventContainer(*(CentralityEventContainer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityEventContainer G__TCentralityEventContainer;
static int G__G__Centrality_132_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityEventContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityEventContainer*) (soff+(sizeof(CentralityEventContainer)*i)))->~G__TCentralityEventContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityEventContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityEventContainer*) (soff))->~G__TCentralityEventContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_132_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityEventContainer* dest = (CentralityEventContainer*) G__getstructoffset();
   *dest = *(CentralityEventContainer*) libp->para[0].ref;
   const CentralityEventContainer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralitySlice */
static int G__G__Centrality_335_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralitySlice* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralitySlice[n];
     } else {
       p = new((void*) gvp) CentralitySlice[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralitySlice;
     } else {
       p = new((void*) gvp) CentralitySlice;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->ClearData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->AddSlice((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CentralitySlice*) G__getstructoffset())->SetDetMax((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CentralitySlice*) G__getstructoffset())->SetDetMax((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->AddXPar((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->AddYPar((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->AddXYPar((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->AddXY3((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((CentralitySlice*) G__getstructoffset())->AddB((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((CentralitySlice*) G__getstructoffset())->AddB((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((CentralitySlice*) G__getstructoffset())->AddB((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetNSlices((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetCentralityMax((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetFitFunction((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetSlicesStep((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetDirectionCentralEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetDet1NormVec(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetDet2NormVec(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->SetRunIdVec(*((vector<Int_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralitySlice*) G__getstructoffset())->GetRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetAi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetBi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetXi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetMeanXi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetMeanYi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetMeanXYi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetSigmaXi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetSigmaYi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetSigmaXYi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetDet1Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetDet2Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((CentralitySlice*) G__getstructoffset())->GetNSlices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetCentralityMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlice*) G__getstructoffset())->GetSlicesStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralitySlice*) G__getstructoffset())->GetDirectionCentralEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralitySlice*) G__getstructoffset())->GetFitFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetA();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetB();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetX();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetMeanX();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetMeanY();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetMeanXY();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetSigmaX();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetSigmaY();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetSigmaXY();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetMeanB();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetSigmaB();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetdB();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetdSigmaB();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetMeanXY3();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetDet1NormVec();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetDet2NormVec();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((CentralitySlice*) G__getstructoffset())->GetRunIdVec();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralitySlice::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlice::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralitySlice::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralitySlice::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlice*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlice::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralitySlice::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlice::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_335_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralitySlice::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_335_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralitySlice* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralitySlice(*(CentralitySlice*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralitySlice G__TCentralitySlice;
static int G__G__Centrality_335_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralitySlice*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralitySlice*) (soff+(sizeof(CentralitySlice)*i)))->~G__TCentralitySlice();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralitySlice*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralitySlice*) (soff))->~G__TCentralitySlice();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_335_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralitySlice* dest = (CentralitySlice*) G__getstructoffset();
   *dest = *(CentralitySlice*) libp->para[0].ref;
   const CentralitySlice& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralitySlicesFinder */
static int G__G__Centrality_340_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralitySlicesFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralitySlicesFinder[n];
     } else {
       p = new((void*) gvp) CentralitySlicesFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralitySlicesFinder;
     } else {
       p = new((void*) gvp) CentralitySlicesFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CentralitySlicesFinder*) G__getstructoffset())->LoadInputData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CentralitySlicesFinder*) G__getstructoffset())->LoadInputData((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->RunSliceFinder();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->FindCentralitySlices();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->Fit2DCorrelation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->FitCorrection((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->FindSlices();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->FindMeanSignalsInSlice();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->WriteOutputData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->QA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->find_norm((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetDet1Name(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetDet2Name(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetCuts(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetCentralityMax((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetPrecision((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetDirectionCentralEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetSliceStep((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetNormalization((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetInFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->Do1DAnalisys((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->Det1IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->Det2IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetNumberOfSlices((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetDir(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralitySlicesFinder*) G__getstructoffset())->IsSimData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralitySlicesFinder*) G__getstructoffset())->IsSimData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->SetOutFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((CentralitySlicesFinder*) G__getstructoffset())->GetDet1Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((CentralitySlicesFinder*) G__getstructoffset())->GetDet2Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralitySlicesFinder*) G__getstructoffset())->GetSliceStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CentralitySlicesFinder*) G__getstructoffset())->polN((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralitySlicesFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlicesFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralitySlicesFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralitySlicesFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralitySlicesFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlicesFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralitySlicesFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralitySlicesFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_340_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralitySlicesFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralitySlicesFinder G__TCentralitySlicesFinder;
static int G__G__Centrality_340_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralitySlicesFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralitySlicesFinder*) (soff+(sizeof(CentralitySlicesFinder)*i)))->~G__TCentralitySlicesFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralitySlicesFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralitySlicesFinder*) (soff))->~G__TCentralitySlicesFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GlauberParGetter */
static int G__G__Centrality_358_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlauberParGetter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlauberParGetter[n];
     } else {
       p = new((void*) gvp) GlauberParGetter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlauberParGetter;
     } else {
       p = new((void*) gvp) GlauberParGetter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberParGetter*) G__getstructoffset())->TestFunc((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((GlauberParGetter*) G__getstructoffset())->SetSimTree(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((GlauberParGetter*) G__getstructoffset())->SetSimTree(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberParGetter*) G__getstructoffset())->GetBHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberParGetter*) G__getstructoffset())->GetBHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberParGetter*) G__getstructoffset())->GetNpartHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberParGetter*) G__getstructoffset())->GetNpartHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberParGetter*) G__getstructoffset())->GetNcollHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberParGetter*) G__getstructoffset())->GetNcollHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberParGetter*) G__getstructoffset())->GetEstdHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberParGetter*) G__getstructoffset())->GetEstdHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberParGetter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberParGetter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((GlauberParGetter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((GlauberParGetter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GlauberParGetter*) G__getstructoffset())->DrawHistos();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GlauberParGetter*) G__getstructoffset())->NBD((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberParGetter*) G__getstructoffset())->SetNBDhist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberParGetter*) G__getstructoffset())->SetFitParams((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberParGetter*) G__getstructoffset())->SetOutDirName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GlauberParGetter*) G__getstructoffset())->GetGlauberFitHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GlauberParGetter*) G__getstructoffset())->GetNBDHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GlauberParGetter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberParGetter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GlauberParGetter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GlauberParGetter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberParGetter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberParGetter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlauberParGetter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberParGetter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_358_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlauberParGetter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_358_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GlauberParGetter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GlauberParGetter(*(GlauberParGetter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GlauberParGetter G__TGlauberParGetter;
static int G__G__Centrality_358_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GlauberParGetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GlauberParGetter*) (soff+(sizeof(GlauberParGetter)*i)))->~G__TGlauberParGetter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GlauberParGetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GlauberParGetter*) (soff))->~G__TGlauberParGetter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_358_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlauberParGetter* dest = (GlauberParGetter*) G__getstructoffset();
   *dest = *(GlauberParGetter*) libp->para[0].ref;
   const GlauberParGetter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralityGetter */
static int G__G__Centrality_359_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityGetter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityGetter[n];
     } else {
       p = new((void*) gvp) CentralityGetter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityGetter;
     } else {
       p = new((void*) gvp) CentralityGetter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->LoadCentalityDataFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityGetter*) G__getstructoffset())->GetCentrality((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityGetter*) G__getstructoffset())->GetCentrality((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->Det1IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->Det2IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->SetNSlices((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CentralityGetter*) G__getstructoffset())->GetNSlices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->SetRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->GetGlauberB((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), *((TString*) G__int(libp->para[3]))
, *((TString*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityGetter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityGetter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityGetter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityGetter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CentralityGetter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityGetter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityGetter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityGetter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityGetter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityGetter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityGetter G__TCentralityGetter;
static int G__G__Centrality_359_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityGetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityGetter*) (soff+(sizeof(CentralityGetter)*i)))->~G__TCentralityGetter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityGetter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityGetter*) (soff))->~G__TCentralityGetter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NA61DataEvent */
static int G__G__Centrality_371_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NA61DataEvent*) G__getstructoffset())->isGoodTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NA61DataEvent*) G__getstructoffset())->isRefMultTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NA61DataEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NA61DataEvent[n];
     } else {
       p = new((void*) gvp) NA61DataEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NA61DataEvent;
     } else {
       p = new((void*) gvp) NA61DataEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NA61DataEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new NA61DataEvent((TTree*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) NA61DataEvent((TTree*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEvent*) G__getstructoffset())->SetData(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((NA61DataEvent*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((NA61DataEvent*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((NA61DataEvent*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEvent*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEvent*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NA61DataEvent*) G__getstructoffset())->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_371_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((NA61DataEvent*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((NA61DataEvent*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_371_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NA61DataEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NA61DataEvent(*(NA61DataEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NA61DataEvent G__TNA61DataEvent;
static int G__G__Centrality_371_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NA61DataEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NA61DataEvent*) (soff+(sizeof(NA61DataEvent)*i)))->~G__TNA61DataEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NA61DataEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NA61DataEvent*) (soff))->~G__TNA61DataEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_371_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NA61DataEvent* dest = (NA61DataEvent*) G__getstructoffset();
   *dest = *(NA61DataEvent*) libp->para[0].ref;
   const NA61DataEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeTrack */
static int G__G__Centrality_373_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeTrack((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeTrack((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTrack[n];
       } else {
         p = new((void*) gvp) DataTreeTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTrack;
       } else {
         p = new((void*) gvp) DataTreeTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetUndefinedValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrack::GetnZPositions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrack::GetnMaxStations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrack::GetnSubDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetPt((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetPhi((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetEta((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetPx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetPy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetPz((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetP((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNofHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNofHits((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNofHitsPotential((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNofHitsPotential((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetFlag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetChiSq((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetVtxChiSq((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNDF((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetDCAComponent((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DataTreeTrack*) G__getstructoffset())->GetStation((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetNStations((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetSTSHitsPossible((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetLengthInSTS((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrack*) G__getstructoffset())->GetCharge((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetPSDModuleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetTOFSegmentId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrack*) G__getstructoffset())->GetMCTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPt((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPhi((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetEta((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPx((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPy((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPz((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetP((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((DataTreeTrack*) G__getstructoffset())->SetNofHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((DataTreeTrack*) G__getstructoffset())->SetNofHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((DataTreeTrack*) G__getstructoffset())->SetNofHitsPotential((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((DataTreeTrack*) G__getstructoffset())->SetNofHitsPotential((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetChiSq((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetVtxChiSq((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetNDF((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetDCA((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetDCAComponent((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetStation((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetNStations((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetSTSHitsPossible((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetLengthInSTS((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetPSDModuleId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetTOFSegmentId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->SetMCTrackId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_373_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_373_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeTrack(*(DataTreeTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeTrack G__TDataTreeTrack;
static int G__G__Centrality_373_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeTrack*) (soff+(sizeof(DataTreeTrack)*i)))->~G__TDataTreeTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeTrack*) (soff))->~G__TDataTreeTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_373_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTrack* dest = (DataTreeTrack*) G__getstructoffset();
   *dest = *(DataTreeTrack*) libp->para[0].ref;
   const DataTreeTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreePSDSection */
static int G__G__Centrality_374_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreePSDSection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreePSDSection((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreePSDSection((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreePSDSection[n];
       } else {
         p = new((void*) gvp) DataTreePSDSection[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreePSDSection;
       } else {
         p = new((void*) gvp) DataTreePSDSection;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDSection*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreePSDSection*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreePSDSection*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDSection*) G__getstructoffset())->SetEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDSection*) G__getstructoffset())->AddEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreePSDSection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDSection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreePSDSection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreePSDSection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDSection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDSection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreePSDSection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDSection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_374_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreePSDSection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_374_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreePSDSection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreePSDSection(*(DataTreePSDSection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreePSDSection G__TDataTreePSDSection;
static int G__G__Centrality_374_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreePSDSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreePSDSection*) (soff+(sizeof(DataTreePSDSection)*i)))->~G__TDataTreePSDSection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreePSDSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreePSDSection*) (soff))->~G__TDataTreePSDSection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_374_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreePSDSection* dest = (DataTreePSDSection*) G__getstructoffset();
   *dest = *(DataTreePSDSection*) libp->para[0].ref;
   const DataTreePSDSection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreePSDModule */
static int G__G__Centrality_375_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreePSDModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreePSDModule((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreePSDModule((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreePSDModule[n];
       } else {
         p = new((void*) gvp) DataTreePSDModule[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreePSDModule;
       } else {
         p = new((void*) gvp) DataTreePSDModule;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreePSDModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataTreePSDModule((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) DataTreePSDModule((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreePSDModule*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreePSDModule*) G__getstructoffset())->GetSectionNumberCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreePSDModule*) G__getstructoffset())->GetPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreePSDModule*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreePSDModule*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreePSDModule*) G__getstructoffset())->GetNFiredSections());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->SetSectionNumberCut((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->SetPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreePSDModule*) G__getstructoffset())->GetNSections());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreePSDModule*) G__getstructoffset())->GetSection((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreePSDModule*) G__getstructoffset())->GetLastSection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->AddSection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreePSDModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreePSDModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreePSDModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreePSDModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreePSDModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreePSDModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_375_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreePSDModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_375_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreePSDModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreePSDModule(*(DataTreePSDModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreePSDModule G__TDataTreePSDModule;
static int G__G__Centrality_375_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreePSDModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreePSDModule*) (soff+(sizeof(DataTreePSDModule)*i)))->~G__TDataTreePSDModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreePSDModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreePSDModule*) (soff))->~G__TDataTreePSDModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_375_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreePSDModule* dest = (DataTreePSDModule*) G__getstructoffset();
   *dest = *(DataTreePSDModule*) libp->para[0].ref;
   const DataTreePSDModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeTOFHit */
static int G__G__Centrality_376_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTOFHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeTOFHit((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeTOFHit((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTOFHit[n];
       } else {
         p = new((void*) gvp) DataTreeTOFHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTOFHit;
       } else {
         p = new((void*) gvp) DataTreeTOFHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTOFHit*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetMass2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTOFHit*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetMass2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetBeta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetP((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeTOFHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTOFHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeTOFHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeTOFHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTOFHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTOFHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTOFHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTOFHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_376_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTOFHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_376_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeTOFHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeTOFHit(*(DataTreeTOFHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeTOFHit G__TDataTreeTOFHit;
static int G__G__Centrality_376_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeTOFHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeTOFHit*) (soff+(sizeof(DataTreeTOFHit)*i)))->~G__TDataTreeTOFHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeTOFHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeTOFHit*) (soff))->~G__TDataTreeTOFHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_376_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTOFHit* dest = (DataTreeTOFHit*) G__getstructoffset();
   *dest = *(DataTreeTOFHit*) libp->para[0].ref;
   const DataTreeTOFHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeV0Candidate */
static int G__G__Centrality_377_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeV0Candidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeV0Candidate((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeV0Candidate((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeV0Candidate[n];
       } else {
         p = new((void*) gvp) DataTreeV0Candidate[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeV0Candidate;
       } else {
         p = new((void*) gvp) DataTreeV0Candidate;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetPdgId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeV0Candidate*) G__getstructoffset())->GetChiSq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPx((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetP((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetPdgId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetChiSq((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->SetTrackId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetNDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetDaughter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeV0Candidate*) G__getstructoffset())->GetLastDaughter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->AddDaughter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeV0Candidate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeV0Candidate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeV0Candidate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeV0Candidate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeV0Candidate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeV0Candidate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeV0Candidate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeV0Candidate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_377_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeV0Candidate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_377_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeV0Candidate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeV0Candidate(*(DataTreeV0Candidate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeV0Candidate G__TDataTreeV0Candidate;
static int G__G__Centrality_377_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeV0Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeV0Candidate*) (soff+(sizeof(DataTreeV0Candidate)*i)))->~G__TDataTreeV0Candidate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeV0Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeV0Candidate*) (soff))->~G__TDataTreeV0Candidate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_377_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeV0Candidate* dest = (DataTreeV0Candidate*) G__getstructoffset();
   *dest = *(DataTreeV0Candidate*) libp->para[0].ref;
   const DataTreeV0Candidate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeMCTrack */
static int G__G__Centrality_378_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeMCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeMCTrack((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeMCTrack((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeMCTrack[n];
       } else {
         p = new((void*) gvp) DataTreeMCTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeMCTrack;
       } else {
         p = new((void*) gvp) DataTreeMCTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeMCTrack*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DataTreeMCTrack*) G__getstructoffset())->GetIfPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPdgId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeMCTrack*) G__getstructoffset())->GetMotherId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetTOFPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetTOFPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetTOFPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetTOFEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeMCTrack*) G__getstructoffset())->GetPSDSectionId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeMCTrack*) G__getstructoffset())->GetTOFSegmentId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetIfPrimary((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPx((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetP((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPdgId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetCharge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetMotherId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetPSDSectionId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->SetTOFSegmentId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeMCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeMCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeMCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeMCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeMCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeMCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeMCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeMCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_378_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeMCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_378_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeMCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeMCTrack(*(DataTreeMCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeMCTrack G__TDataTreeMCTrack;
static int G__G__Centrality_378_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeMCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeMCTrack*) (soff+(sizeof(DataTreeMCTrack)*i)))->~G__TDataTreeMCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeMCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeMCTrack*) (soff))->~G__TDataTreeMCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_378_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeMCTrack* dest = (DataTreeMCTrack*) G__getstructoffset();
   *dest = *(DataTreeMCTrack*) libp->para[0].ref;
   const DataTreeMCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeTrigger */
static int G__G__Centrality_379_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTrigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeTrigger((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeTrigger((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTrigger[n];
       } else {
         p = new((void*) gvp) DataTreeTrigger[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeTrigger;
       } else {
         p = new((void*) gvp) DataTreeTrigger;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTrigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataTreeTrigger((int) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) DataTreeTrigger((int) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeTrigger*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeTrigger*) G__getstructoffset())->GetSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((DataTreeTrigger*) G__getstructoffset())->GetLabel();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrigger*) G__getstructoffset())->SetSignal((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrigger*) G__getstructoffset())->SetLabel(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeTrigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeTrigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeTrigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeTrigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeTrigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_379_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeTrigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_379_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeTrigger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeTrigger(*(DataTreeTrigger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeTrigger G__TDataTreeTrigger;
static int G__G__Centrality_379_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeTrigger*) (soff+(sizeof(DataTreeTrigger)*i)))->~G__TDataTreeTrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeTrigger*) (soff))->~G__TDataTreeTrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_379_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeTrigger* dest = (DataTreeTrigger*) G__getstructoffset();
   *dest = *(DataTreeTrigger*) libp->para[0].ref;
   const DataTreeTrigger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeBPD */
static int G__G__Centrality_380_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeBPD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeBPD((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DataTreeBPD((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeBPD[n];
       } else {
         p = new((void*) gvp) DataTreeBPD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new DataTreeBPD;
       } else {
         p = new((void*) gvp) DataTreeBPD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeBPD*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeBPD*) G__getstructoffset())->GetPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeBPD*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeBPD*) G__getstructoffset())->SetPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeBPD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeBPD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeBPD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeBPD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeBPD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeBPD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeBPD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeBPD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_380_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeBPD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_380_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeBPD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeBPD(*(DataTreeBPD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeBPD G__TDataTreeBPD;
static int G__G__Centrality_380_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeBPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeBPD*) (soff+(sizeof(DataTreeBPD)*i)))->~G__TDataTreeBPD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeBPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeBPD*) (soff))->~G__TDataTreeBPD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_380_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeBPD* dest = (DataTreeBPD*) G__getstructoffset();
   *dest = *(DataTreeBPD*) libp->para[0].ref;
   const DataTreeBPD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeEvent */
static int G__G__Centrality_381_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeEvent[n];
     } else {
       p = new((void*) gvp) DataTreeEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeEvent;
     } else {
       p = new((void*) gvp) DataTreeEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetEventTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetRPAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetImpactParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetVertexPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetVertexQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNFiredPSDModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNFiredPSDSections());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetPSDEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetMCPSDEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeEvent*) G__getstructoffset())->GetMCVertexPositionComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0Types());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0Pdg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetRunId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetEventId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetEventTimestamp((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetRPAngle((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetImpactParameter((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetVertexPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetVertexPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetVertexQuality((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetMCVertexPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetMCVertexPositionComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetNV0SpecificCandidatesTOFpid((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetNV0CandidatesTOFpid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetNV0SpecificCandidatesMCpid((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->SetNV0CandidatesMCpid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->ClearTrack((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNPSDModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetPSDModule((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastPSDModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddPSDModule();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddPSDModule((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNTOFHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetTOFHit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastTOFHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->AddTOFHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0SpecificCandidatesTOFpid((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0CandidatesTOFpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetV0CandidateTOFpid((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastV0CandidateTOFpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->AddV0CandidateTOFpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0SpecificCandidatesMCpid((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNV0CandidatesMCpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetV0CandidateMCpid((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastV0CandidateMCpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->AddV0CandidateMCpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNMCTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetMCTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastMCTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddMCTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNTriggers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetTrigger((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddTrigger();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddTrigger(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeEvent*) G__getstructoffset())->GetNBPDs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetBPD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataTreeEvent*) G__getstructoffset())->GetLastBPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->AddBPD();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_381_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_381_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeEvent(*(DataTreeEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeEvent G__TDataTreeEvent;
static int G__G__Centrality_381_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeEvent*) (soff+(sizeof(DataTreeEvent)*i)))->~G__TDataTreeEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeEvent*) (soff))->~G__TDataTreeEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_381_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeEvent* dest = (DataTreeEvent*) G__getstructoffset();
   *dest = *(DataTreeEvent*) libp->para[0].ref;
   const DataTreeEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NA61DataEventNew */
static int G__G__Centrality_382_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NA61DataEventNew* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NA61DataEventNew[n];
     } else {
       p = new((void*) gvp) NA61DataEventNew[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NA61DataEventNew;
     } else {
       p = new((void*) gvp) NA61DataEventNew;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((NA61DataEventNew*) G__getstructoffset())->SetPsdVector((Int_t) G__int(libp->para[0]));
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEventNew*) G__getstructoffset())->WriteCentralityContainer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEventNew*) G__getstructoffset())->SetOutFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEventNew*) G__getstructoffset())->SetInFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NA61DataEventNew::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NA61DataEventNew::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NA61DataEventNew::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NA61DataEventNew::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NA61DataEventNew*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NA61DataEventNew::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NA61DataEventNew::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NA61DataEventNew::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_382_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NA61DataEventNew::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_382_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NA61DataEventNew* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NA61DataEventNew(*(NA61DataEventNew*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NA61DataEventNew G__TNA61DataEventNew;
static int G__G__Centrality_382_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NA61DataEventNew*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NA61DataEventNew*) (soff+(sizeof(NA61DataEventNew)*i)))->~G__TNA61DataEventNew();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NA61DataEventNew*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NA61DataEventNew*) (soff))->~G__TNA61DataEventNew();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_382_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NA61DataEventNew* dest = (NA61DataEventNew*) G__getstructoffset();
   *dest = *(NA61DataEventNew*) libp->para[0].ref;
   const NA61DataEventNew& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralityManager */
static int G__G__Centrality_383_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityManager[n];
     } else {
       p = new((void*) gvp) CentralityManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityManager;
     } else {
       p = new((void*) gvp) CentralityManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetContainerFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->CopyNa61ExpDataToContainer(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CentralityManager*) G__getstructoffset())->LoadDataFromContainer((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CentralityManager*) G__getstructoffset())->LoadDataFromContainer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->RunSliceFinder();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetGetterRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetNumberOfSlices((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetSliceStep((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralityManager*) G__getstructoffset())->Det1IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralityManager*) G__getstructoffset())->Det1IsInt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralityManager*) G__getstructoffset())->Det2IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralityManager*) G__getstructoffset())->Det2IsInt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralityManager*) G__getstructoffset())->IsSimData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralityManager*) G__getstructoffset())->IsSimData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetNormalization((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetCuts(*((TCut*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->AddDetector(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CentralityManager*) G__getstructoffset())->SetDetectorsForCentralityAnalisys(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((CentralityManager*) G__getstructoffset())->SetDetectorsForCentralityAnalisys(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetCentralityMax((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetDirectionCentralEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralityManager*) G__getstructoffset())->Do1DAnalisys((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralityManager*) G__getstructoffset())->Do1DAnalisys();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->WriteCentralityFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetOutFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->LoadCentalityDataFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityManager*) G__getstructoffset())->GetCentrality((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityManager*) G__getstructoffset())->GetCentrality((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->SetDirectory(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->QA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityManager*) G__getstructoffset())->GetSlicesFinder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityManager*) G__getstructoffset())->GetCentralityGetter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_383_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_383_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralityManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralityManager(*(CentralityManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityManager G__TCentralityManager;
static int G__G__Centrality_383_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityManager*) (soff+(sizeof(CentralityManager)*i)))->~G__TCentralityManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityManager*) (soff))->~G__TCentralityManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_383_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityManager* dest = (CentralityManager*) G__getstructoffset();
   *dest = *(CentralityManager*) libp->para[0].ref;
   const CentralityManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeInterface */
static int G__G__Centrality_388_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeInterface[n];
     } else {
       p = new((void*) gvp) TreeInterface[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeInterface;
     } else {
       p = new((void*) gvp) TreeInterface;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->WriteCentralityContainer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->SetOutFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->SetInFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->SetNEntries((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->SetInTChain((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_388_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_388_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeInterface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeInterface(*(TreeInterface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeInterface G__TTreeInterface;
static int G__G__Centrality_388_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeInterface*) (soff+(sizeof(TreeInterface)*i)))->~G__TTreeInterface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeInterface*) (soff))->~G__TTreeInterface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_388_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeInterface* dest = (TreeInterface*) G__getstructoffset();
   *dest = *(TreeInterface*) libp->para[0].ref;
   const TreeInterface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralityContainerNormalizer */
static int G__G__Centrality_389_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityContainerNormalizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityContainerNormalizer[n];
     } else {
       p = new((void*) gvp) CentralityContainerNormalizer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityContainerNormalizer;
     } else {
       p = new((void*) gvp) CentralityContainerNormalizer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((CentralityContainerNormalizer*) G__getstructoffset())->LoadInputData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((CentralityContainerNormalizer*) G__getstructoffset())->LoadInputData((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->GetNormalization((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->GetNormalization((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->RunByRunCorrection((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->GetMaximum((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->SetDet1Name(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->SetDet2Name(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->SetNormalization((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->SetInFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->Do1DAnalisys((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->Det1IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->Det2IsInt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CentralityContainerNormalizer*) G__getstructoffset())->IsSimData((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CentralityContainerNormalizer*) G__getstructoffset())->IsSimData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->SetDir(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet1Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet2Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet1Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet2Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityContainerNormalizer*) G__getstructoffset())->GetNormTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet1NormVec();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetDet2NormVec();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetRunIdVec();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetEventsInRun2Vec();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((CentralityContainerNormalizer*) G__getstructoffset())->GetEventsInRun1Vec();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityContainerNormalizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityContainerNormalizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityContainerNormalizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityContainerNormalizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityContainerNormalizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityContainerNormalizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityContainerNormalizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityContainerNormalizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_389_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityContainerNormalizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityContainerNormalizer G__TCentralityContainerNormalizer;
static int G__G__Centrality_389_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityContainerNormalizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityContainerNormalizer*) (soff+(sizeof(CentralityContainerNormalizer)*i)))->~G__TCentralityContainerNormalizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityContainerNormalizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityContainerNormalizer*) (soff))->~G__TCentralityContainerNormalizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GlauberFitter */
static int G__G__Centrality_390_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlauberFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlauberFitter[n];
     } else {
       p = new((void*) gvp) GlauberFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlauberFitter;
     } else {
       p = new((void*) gvp) GlauberFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->TestFunc((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((GlauberFitter*) G__getstructoffset())->SetSimHistos(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((GlauberFitter*) G__getstructoffset())->SetSimHistos(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((GlauberFitter*) G__getstructoffset())->SetGlauberFitHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((GlauberFitter*) G__getstructoffset())->SetGlauberFitHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberFitter*) G__getstructoffset())->SetGlauberFitHisto((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GlauberFitter*) G__getstructoffset())->NormalizeGlauberFit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GlauberFitter*) G__getstructoffset())->NormalizeGlauberFit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GlauberFitter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GlauberFitter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((GlauberFitter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((GlauberFitter*) G__getstructoffset())->DrawHistos((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GlauberFitter*) G__getstructoffset())->DrawHistos();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->FitGlauber((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((GlauberFitter*) G__getstructoffset())->FindMuGoldenSection(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((GlauberFitter*) G__getstructoffset())->FindMuGoldenSection(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((GlauberFitter*) G__getstructoffset())->FindMuGoldenSection((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GlauberFitter*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GlauberFitter*) G__getstructoffset())->NBD((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetNBDhist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetInputHisto((TH1F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetNpartMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetNcollMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetMultMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetFitMultMin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetNormMultMin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetBinSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetOutDirName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GlauberFitter*) G__getstructoffset())->GetGlauberFitHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GlauberFitter*) G__getstructoffset())->GetDataHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GlauberFitter*) G__getstructoffset())->GetNBDHisto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->SetMode(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GlauberFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GlauberFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GlauberFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlauberFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlauberFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlauberFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_390_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlauberFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_390_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GlauberFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GlauberFitter(*(GlauberFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GlauberFitter G__TGlauberFitter;
static int G__G__Centrality_390_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GlauberFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GlauberFitter*) (soff+(sizeof(GlauberFitter)*i)))->~G__TGlauberFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GlauberFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GlauberFitter*) (soff))->~G__TGlauberFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_390_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlauberFitter* dest = (GlauberFitter*) G__getstructoffset();
   *dest = *(GlauberFitter*) libp->para[0].ref;
   const GlauberFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliGlauberNucleus */
static int G__G__Centrality_391_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TF1*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TF1*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus((Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus((Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleus((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AliGlauberNucleus((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliGlauberNucleus[n];
       } else {
         p = new((void*) gvp) AliGlauberNucleus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliGlauberNucleus;
       } else {
         p = new((void*) gvp) AliGlauberNucleus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliGlauberNucleus(*(AliGlauberNucleus*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AliGlauberNucleus(*(AliGlauberNucleus*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliGlauberNucleus& obj = ((AliGlauberNucleus*) G__getstructoffset())->operator=(*(AliGlauberNucleus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->Draw((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberNucleus*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleus*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleus*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleus*) G__getstructoffset())->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AliGlauberNucleus*) G__getstructoffset())->GetNucleons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberNucleus*) G__getstructoffset())->GetTrials());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->SetN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->SetR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->SetA((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->SetW((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->SetMinDist((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((AliGlauberNucleus*) G__getstructoffset())->ThrowNucleons((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((AliGlauberNucleus*) G__getstructoffset())->ThrowNucleons();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliGlauberNucleus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliGlauberNucleus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliGlauberNucleus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberNucleus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_391_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberNucleus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliGlauberNucleus G__TAliGlauberNucleus;
static int G__G__Centrality_391_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliGlauberNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliGlauberNucleus*) (soff+(sizeof(AliGlauberNucleus)*i)))->~G__TAliGlauberNucleus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliGlauberNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliGlauberNucleus*) (soff))->~G__TAliGlauberNucleus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliGlauberMC */
static int G__G__Centrality_393_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberMC(
(Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) AliGlauberMC(
(Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberMC((Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AliGlauberMC((Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberMC((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AliGlauberMC((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliGlauberMC[n];
       } else {
         p = new((void*) gvp) AliGlauberMC[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliGlauberMC;
       } else {
         p = new((void*) gvp) AliGlauberMC;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliGlauberMC(*(AliGlauberMC*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AliGlauberMC(*(AliGlauberMC*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliGlauberMC& obj = ((AliGlauberMC*) G__getstructoffset())->operator=(*(AliGlauberMC*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((AliGlauberMC*) G__getstructoffset())->NextEvent((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((AliGlauberMC*) G__getstructoffset())->NextEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AliGlauberMC*) G__getstructoffset())->CalcEvent((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEtaSimple((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEtaGBW((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEtaNBD((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEtaNBDSV((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetdNdEtaTwoNBD((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetStoa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricityColl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricityCom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricityPart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon2Part());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon3Part());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon4Part());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon5Part());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon2Coll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon3Coll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon4Coll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon5Coll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon2Com());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon3Com());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon4Com());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEpsilon5Com());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetPsi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetPsi3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetPsi4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetPsi5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricityPartColl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetEccentricityPartCom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetBMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetBMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->GetNcoll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->GetNpart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->GetNpartFound());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AliGlauberMC*) G__getstructoffset())->GetNtuple());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AliGlauberMC*) G__getstructoffset())->GetNucleons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetTotXSect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberMC*) G__getstructoffset())->GetTotXSectErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliGlauberNucleus& obj = ((AliGlauberMC*) G__getstructoffset())->GetNucA();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliGlauberNucleus& obj = ((AliGlauberMC*) G__getstructoffset())->GetNucB();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AliGlauberMC::NegativeBinomialDistribution((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->NegativeBinomialRandom((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->NegativeBinomialRandomSV((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberMC*) G__getstructoffset())->DoubleNegativeBinomialRandom((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((AliGlauberMC*) G__getstructoffset())->GetdNdEtaParam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->SetdNdEtaType((AliGlauberMC::EdNdEtaType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->SetBmin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->SetBmax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->SetMinDistance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->SetDoPartProduction((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->Setr((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->Seta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((AliGlauberMC*) G__getstructoffset())->SetDoFluc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((AliGlauberMC*) G__getstructoffset())->SetDoFluc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliGlauberMC::PrintVersion();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberMC::Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      AliGlauberMC::RunAndSaveNtuple(
(Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (const char*) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      AliGlauberMC::RunAndSaveNtuple(
(Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      AliGlauberMC::RunAndSaveNtuple((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->RunAndSaveNucleons(
(Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliGlauberMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliGlauberMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliGlauberMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_393_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliGlauberMC G__TAliGlauberMC;
static int G__G__Centrality_393_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliGlauberMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliGlauberMC*) (soff+(sizeof(AliGlauberMC)*i)))->~G__TAliGlauberMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliGlauberMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliGlauberMC*) (soff))->~G__TAliGlauberMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliGlauberNucleon */
static int G__G__Centrality_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberNucleon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleon[n];
     } else {
       p = new((void*) gvp) AliGlauberNucleon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliGlauberNucleon;
     } else {
       p = new((void*) gvp) AliGlauberNucleon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->Collide();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AliGlauberNucleon*) G__getstructoffset())->GetNColl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleon*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleon*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AliGlauberNucleon*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AliGlauberNucleon*) G__getstructoffset())->IsInNucleusA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AliGlauberNucleon*) G__getstructoffset())->IsInNucleusB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AliGlauberNucleon*) G__getstructoffset())->IsSpectator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AliGlauberNucleon*) G__getstructoffset())->IsWounded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->SetInNucleusA();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->SetInNucleusB();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->SetXYZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliGlauberNucleon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliGlauberNucleon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliGlauberNucleon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliGlauberNucleon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberNucleon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliGlauberNucleon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_395_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliGlauberNucleon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_395_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliGlauberNucleon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliGlauberNucleon(*(AliGlauberNucleon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliGlauberNucleon G__TAliGlauberNucleon;
static int G__G__Centrality_395_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliGlauberNucleon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliGlauberNucleon*) (soff+(sizeof(AliGlauberNucleon)*i)))->~G__TAliGlauberNucleon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliGlauberNucleon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliGlauberNucleon*) (soff))->~G__TAliGlauberNucleon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_395_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliGlauberNucleon* dest = (AliGlauberNucleon*) G__getstructoffset();
   *dest = *(AliGlauberNucleon*) libp->para[0].ref;
   const AliGlauberNucleon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeConverterNA61 */
static int G__G__Centrality_396_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeConverterNA61* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeConverterNA61[n];
     } else {
       p = new((void*) gvp) DataTreeConverterNA61[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTreeConverterNA61;
     } else {
       p = new((void*) gvp) DataTreeConverterNA61;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->SetInputFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->SetOutputFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->SetNEvents((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Body();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Chain_Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->OutputTree_Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->DataTreeEvent_Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Exec((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Clear_Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Read_Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeConverterNA61::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeConverterNA61::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeConverterNA61::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeConverterNA61::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DataTreeConverterNA61*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeConverterNA61*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeConverterNA61::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeConverterNA61::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeConverterNA61::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_396_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeConverterNA61::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_396_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeConverterNA61* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeConverterNA61(*(DataTreeConverterNA61*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeConverterNA61 G__TDataTreeConverterNA61;
static int G__G__Centrality_396_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeConverterNA61*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeConverterNA61*) (soff+(sizeof(DataTreeConverterNA61)*i)))->~G__TDataTreeConverterNA61();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeConverterNA61*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeConverterNA61*) (soff))->~G__TDataTreeConverterNA61();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_396_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeConverterNA61* dest = (DataTreeConverterNA61*) G__getstructoffset();
   *dest = *(DataTreeConverterNA61*) libp->para[0].ref;
   const DataTreeConverterNA61& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTreeSTSTrack */
static int G__G__Centrality_397_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeSTSTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataTreeSTSTrack((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) DataTreeSTSTrack((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeSTSTrack*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeSTSTrack*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeSTSTrack*) G__getstructoffset())->GetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetNofHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeSTSTrack*) G__getstructoffset())->GetChiSq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetNDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((DataTreeSTSTrack*) G__getstructoffset())->GetDCAComponent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetMCTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataTreeSTSTrack*) G__getstructoffset())->GetTOFHitId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetEta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetNofHits((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetFlag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetChiSq((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetNDF((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetDCA((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetDCAComponent((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetMCTrackId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->SetTOFHitId((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataTreeSTSTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeSTSTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataTreeSTSTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataTreeSTSTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTreeSTSTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeSTSTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeSTSTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataTreeSTSTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Centrality_397_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataTreeSTSTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Centrality_397_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTreeSTSTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTreeSTSTrack(*(DataTreeSTSTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTreeSTSTrack G__TDataTreeSTSTrack;
static int G__G__Centrality_397_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTreeSTSTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTreeSTSTrack*) (soff+(sizeof(DataTreeSTSTrack)*i)))->~G__TDataTreeSTSTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTreeSTSTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTreeSTSTrack*) (soff))->~G__TDataTreeSTSTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Centrality_397_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTreeSTSTrack* dest = (DataTreeSTSTrack*) G__getstructoffset();
   *dest = *(DataTreeSTSTrack*) libp->para[0].ref;
   const DataTreeSTSTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CentralityDetectorEvent */

/* CentralityEventContainer */

/* CentralitySlice */

/* CentralitySlicesFinder */

/* GlauberParGetter */

/* CentralityGetter */

/* NA61DataEvent */

/* DataTreeTrack */

/* DataTreePSDSection */

/* DataTreePSDModule */

/* DataTreeTOFHit */

/* DataTreeV0Candidate */

/* DataTreeMCTrack */

/* DataTreeTrigger */

/* DataTreeBPD */

/* DataTreeEvent */

/* NA61DataEventNew */

/* CentralityManager */

/* TreeInterface */

/* CentralityContainerNormalizer */

/* GlauberFitter */

/* AliGlauberNucleus */

/* AliGlauberMC */

/* AliGlauberNucleon */

/* DataTreeConverterNA61 */

/* DataTreeSTSTrack */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Centrality {
 public:
  G__Sizep2memfuncG__Centrality(): p(&G__Sizep2memfuncG__Centrality::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Centrality::*p)();
};

size_t G__get_sizep2memfuncG__Centrality()
{
  G__Sizep2memfuncG__Centrality a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Centrality() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent))) {
     CentralityDetectorEvent *G__Lderived;
     G__Lderived=(CentralityDetectorEvent*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer))) {
     CentralityEventContainer *G__Lderived;
     G__Lderived=(CentralityEventContainer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice))) {
     CentralitySlice *G__Lderived;
     G__Lderived=(CentralitySlice*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder))) {
     CentralitySlicesFinder *G__Lderived;
     G__Lderived=(CentralitySlicesFinder*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter))) {
     GlauberParGetter *G__Lderived;
     G__Lderived=(GlauberParGetter*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack))) {
     DataTreeTrack *G__Lderived;
     G__Lderived=(DataTreeTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection))) {
     DataTreePSDSection *G__Lderived;
     G__Lderived=(DataTreePSDSection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule))) {
     DataTreePSDModule *G__Lderived;
     G__Lderived=(DataTreePSDModule*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit))) {
     DataTreeTOFHit *G__Lderived;
     G__Lderived=(DataTreeTOFHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate))) {
     DataTreeV0Candidate *G__Lderived;
     G__Lderived=(DataTreeV0Candidate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack))) {
     DataTreeMCTrack *G__Lderived;
     G__Lderived=(DataTreeMCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger))) {
     DataTreeTrigger *G__Lderived;
     G__Lderived=(DataTreeTrigger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD))) {
     DataTreeBPD *G__Lderived;
     G__Lderived=(DataTreeBPD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent))) {
     DataTreeEvent *G__Lderived;
     G__Lderived=(DataTreeEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew))) {
     NA61DataEventNew *G__Lderived;
     G__Lderived=(NA61DataEventNew*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager))) {
     CentralityManager *G__Lderived;
     G__Lderived=(CentralityManager*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface))) {
     TreeInterface *G__Lderived;
     G__Lderived=(TreeInterface*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer))) {
     CentralityContainerNormalizer *G__Lderived;
     G__Lderived=(CentralityContainerNormalizer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter))) {
     GlauberFitter *G__Lderived;
     G__Lderived=(GlauberFitter*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus))) {
     AliGlauberNucleus *G__Lderived;
     G__Lderived=(AliGlauberNucleus*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC))) {
     AliGlauberMC *G__Lderived;
     G__Lderived=(AliGlauberMC*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon))) {
     AliGlauberNucleon *G__Lderived;
     G__Lderived=(AliGlauberNucleon*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon),G__get_linked_tagnum(&G__G__CentralityLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack))) {
     DataTreeSTSTrack *G__Lderived;
     G__Lderived=(DataTreeSTSTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack),G__get_linked_tagnum(&G__G__CentralityLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Centrality() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CentralityDetectorEvent>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__CentralityLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__CentralityLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__CentralityLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CentralityLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CentralityDetectorEvent */
static void G__setup_memvarCentralityDetectorEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent));
   { CentralityDetectorEvent *p; p=(CentralityDetectorEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDetId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralityEventContainer */
static void G__setup_memvarCentralityEventContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer));
   { CentralityEventContainer *p; p=(CentralityEventContainer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR),G__defined_typename("vector<CentralityDetectorEvent>"),-1,4,"fDetectorEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralitySlice */
static void G__setup_memvarCentralitySlice(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice));
   { CentralitySlice *p; p=(CentralitySlice*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet1Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet2Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNSlices=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCentralityMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDirectionCentralEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fAvec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fBvec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fXvec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"SigmaX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"SigmaY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"SigmaXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanXY3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"SigmaB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"dB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"dSigmaB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet1NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet2NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fRunIdVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TF1),-1,-1,4,"fFitFunction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralitySlicesFinder */
static void G__setup_memvarCentralitySlicesFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder));
   { CentralitySlicesFinder *p; p=(CentralitySlicesFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fDet1Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fDet2Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TCut),-1,-1,4,"fCuts=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCentralityMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPrecision=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDirectionCentralEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fInFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is1DAnalisys=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet1Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet2Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSliceStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nIntervals=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSimData=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNormalization=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"CFdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fInFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fInTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet1Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet2Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet1NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet2NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fRunIdVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"nEventsInRunVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"MeanB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice),-1,-1,4,"fSlice=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fNormTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fCentrTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fSlicesFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TF1),-1,-1,4,"fFitFunction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TF1),-1,-1,4,"fFitFunction2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det1max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det2max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TGraphErrors),-1,-1,4,"fCorrProfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TCanvas),-1,-1,4,"fCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fOutFileName=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"n_par=4LL",0,"TODO make params");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nFinalPar=6LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GlauberParGetter */
static void G__setup_memvarGlauberParGetter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter));
   { GlauberParGetter *p; p=(GlauberParGetter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNBD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hGlaub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNpart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNcoll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hEstd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fSimTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNpart=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNcoll=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEstd=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fOutDirName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralityGetter */
static void G__setup_memvarCentralityGetter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter));
   { CentralityGetter *p; p=(CentralityGetter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNSlices=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet1Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet2Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice),-1,-1,4,"fSlice=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fCentrTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fCentrFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet1Norm=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDet2Norm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NA61DataEvent */
static void G__setup_memvarNA61DataEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent));
   { NA61DataEvent *p; p=(NA61DataEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->Event_Id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Event_Id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Run_Id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Run_Id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Event_Timestamp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Event_Timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_pT)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_pT[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_eta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_eta[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_phi[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClusters_Total)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClusters_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClusters_TPCV1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClusters_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClusters_TPCV2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClusters_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClusters_TPCVmain)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClusters_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClusters_TPCVgap)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClusters_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersPotential_Total)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersPotential_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersPotential_TPCV1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersPotential_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersPotential_TPCV2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersPotential_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersPotential_TPCVmain)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersPotential_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersPotential_TPCVgap)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersPotential_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersFit_Total)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersFit_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersFit_TPCV1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersFit_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersFit_TPCV2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersFit_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersFit_TPCVmain)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersFit_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersFit_TPCVgap)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersFit_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersdEdX_Total)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersdEdX_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersdEdX_TPCV1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersdEdX_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersdEdX_TPCV2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersdEdX_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersdEdX_TPCVmain)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersdEdX_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_nClustersdEdX_TPCVgap)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_nClustersdEdX_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_EnergyClusters_Total)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_EnergyClusters_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_EnergyClusters_TPCV1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_EnergyClusters_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_EnergyClusters_TPCV2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_EnergyClusters_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_EnergyClusters_TPCVmain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_EnergyClusters_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_EnergyClusters_TPCVgap)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_EnergyClusters_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_DCAtoVertex_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_DCAtoVertex_X[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_DCAtoVertex_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_DCAtoVertex_Y[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_DCAtoVertex_Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_DCAtoVertex_Z[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_chi2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_track_chi2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_track_ndf)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_track_ndf[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_Multiplicity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_Multiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_Multiplicity_all)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_Multiplicity_all=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_Multiplicity_Clusters_VTPC1_VTPC2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_Multiplicity_Clusters_VTPC1_VTPC2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_Multiplicity_Clusters_All)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPC_Multiplicity_Clusters_All=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_cos1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_cos1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_sin1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_sin1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_cos2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_cos2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC_sin2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TPC_sin2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_Number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD_module_Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_section_Number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD_section_Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_section_slice_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_section_slice_Energy[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_module_X[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_module_Y[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_module_Z[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_module_Energy[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_Energy_default)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_module_Energy_default[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_module_number_of_sections)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD_module_number_of_sections[45]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_section_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_section_Energy[45][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_section_Number_array)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD_section_Number_array[45][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_1_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_1_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_2_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_2_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD_3_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PSD_3_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertex_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Vertex_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertex_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Vertex_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertex_Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Vertex_Z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T1)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"T1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T2)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"T2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T3)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"T3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T4)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"T4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BPD_Status[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_Position)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_Position[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_PositionError)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_PositionError[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_Z[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_RMS)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_RMS[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_Maximum)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_Maximum[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_Charge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_Charge[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BPD_SumOfAll)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BPD_SumOfAll[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggersADC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"triggersADC[2][6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTriggers_Simple)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isTriggers_Simple[2][6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTriggers_Combined)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isTriggers_Combined[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_Momentum)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_Momentum[2][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_Fitted2DLineXZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_Fitted2DLineXZ[2][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_Fitted2DLineYZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_Fitted2DLineYZ[2][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Beam_Status[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->WFA_TimeStructure)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"WFA_TimeStructure[6][2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->WFA_NumberOfSignalHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"WFA_NumberOfSignalHits[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FitVertexX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"FitVertexX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FitVertexY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"FitVertexY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FitVertexZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"FitVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FitVertexQ)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FitVertexQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_Event_Id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Event_Id=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Run_Id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Run_Id=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Event_Timestamp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Event_Timestamp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_pT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_pT=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_eta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_eta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_phi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClusters_Total)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClusters_Total=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClusters_TPCV1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClusters_TPCV1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClusters_TPCV2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClusters_TPCV2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClusters_TPCVmain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClusters_TPCVmain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClusters_TPCVgap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClusters_TPCVgap=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersPotential_Total)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersPotential_Total=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersPotential_TPCV1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersPotential_TPCV1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersPotential_TPCV2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersPotential_TPCV2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersPotential_TPCVmain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersPotential_TPCVmain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersPotential_TPCVgap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersPotential_TPCVgap=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersFit_Total)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersFit_Total=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersFit_TPCV1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersFit_TPCV1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersFit_TPCV2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersFit_TPCV2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersFit_TPCVmain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersFit_TPCVmain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersFit_TPCVgap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersFit_TPCVgap=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersdEdX_Total)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersdEdX_Total=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersdEdX_TPCV1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersdEdX_TPCV1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersdEdX_TPCV2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersdEdX_TPCV2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersdEdX_TPCVmain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersdEdX_TPCVmain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_nClustersdEdX_TPCVgap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_nClustersdEdX_TPCVgap=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_EnergyClusters_Total)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_EnergyClusters_Total=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_EnergyClusters_TPCV1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_EnergyClusters_TPCV1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_EnergyClusters_TPCV2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_EnergyClusters_TPCV2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_EnergyClusters_TPCVmain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_EnergyClusters_TPCVmain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_EnergyClusters_TPCVgap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_EnergyClusters_TPCVgap=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_DCAtoVertex_X)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_DCAtoVertex_X=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_DCAtoVertex_Y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_DCAtoVertex_Y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_DCAtoVertex_Z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_DCAtoVertex_Z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_chi2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_chi2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_track_ndf)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_track_ndf=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_Multiplicity)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_Multiplicity=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_Multiplicity_all)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_Multiplicity_all=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_Multiplicity_Clusters_VTPC1_VTPC2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_Multiplicity_Clusters_VTPC1_VTPC2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_Multiplicity_Clusters_All)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_Multiplicity_Clusters_All=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_cos1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_cos1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_sin1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_sin1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_cos2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_cos2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_TPC_sin2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_TPC_sin2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_Number)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_Number=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_section_Number)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_section_Number=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_section_slice_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_section_slice_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_X)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_X=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_Y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_Y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_Z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_Z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_Energy_default)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_Energy_default=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_module_number_of_sections)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_module_number_of_sections=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_section_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_section_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_section_Number_array)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_section_Number_array=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_1_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_1_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_2_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_2_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_PSD_3_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_PSD_3_Energy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vertex_X)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Vertex_X=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vertex_Y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Vertex_Y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Vertex_Z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Vertex_Z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_T1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_T1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_T2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_T2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_T3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_T3=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_T4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_T4=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_Status)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_Status=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_Position)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_Position=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_PositionError)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_PositionError=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_Z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_Z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_RMS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_RMS=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_Maximum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_Maximum=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_Charge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_Charge=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_BPD_SumOfAll)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_BPD_SumOfAll=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_triggersADC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_triggersADC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_isTriggers_Simple)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_isTriggers_Simple=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_isTriggers_Combined)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_isTriggers_Combined=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Beam_Momentum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Beam_Momentum=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Beam_Fitted2DLineXZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Beam_Fitted2DLineXZ=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Beam_Fitted2DLineYZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Beam_Fitted2DLineYZ=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_Beam_Status)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_Beam_Status=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_WFA_TimeStructure)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_WFA_TimeStructure=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_WFA_NumberOfSignalHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_WFA_NumberOfSignalHits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_FitVertexX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_FitVertexX=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_FitVertexY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_FitVertexY=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_FitVertexZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_FitVertexZ=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_FitVertexQ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TBranch),-1,-1,1,"b_FitVertexQ=",0,"!");
   G__memvar_setup((void*)((long)(&p->fOutFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,1,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPSD1)-(long)(p)),103,0,0,-1,-1,-1,1,"isPSD1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPSD2)-(long)(p)),103,0,0,-1,-1,-1,1,"isPSD2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPSD3)-(long)(p)),103,0,0,-1,-1,-1,1,"isPSD3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTPC)-(long)(p)),103,0,0,-1,-1,-1,1,"isTPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD1id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD1id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD2id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD2id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PSD3id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PSD3id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPCid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TPCid=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeTrack */
static void G__setup_memvarDataTreeTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack));
   { DataTreeTrack *p; p=(DataTreeTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("nZPositions=%lldLL",(long long)DataTreeTrack::nZPositions).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("nMaxStations=%lldLL",(long long)DataTreeTrack::nMaxStations).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("nSubDetectors=%lldLL",(long long)DataTreeTrack::nSubDetectors).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eta[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"px[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"py[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pz[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"p[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NofHits[4][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NofHitsPotential[4][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Flag[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ChiSq[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"VtxChiSq[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NDF[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"DCA[4][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"Stations[4][8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nStations[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nSTSHitsPossible[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LengthInSTS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Charge[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"PSDModuleId=",0,"id of the corresponding PSD module");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TOFSegmentId=",0,"id of the corresponding TOF segment");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"MCTrackId=",0,"id of the best matched MC track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreePSDSection */
static void G__setup_memvarDataTreePSDSection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection));
   { DataTreePSDSection *p; p=(DataTreePSDSection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreePSDModule */
static void G__setup_memvarDataTreePSDModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule));
   { DataTreePSDModule *p; p=(DataTreePSDModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"ProcessFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nSections=",0,"number of section in the module");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"SectionNumberCut=",0,"max depth in sections to calculate energy");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Position[3]=",0,"Position of the module in lab frame");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Energy=",0,"energy deposit in the module");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFiredSections=",0,"number of sections where the energy was deposited");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrSections=",0,"sections in the module");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeTOFHit */
static void G__setup_memvarDataTreeTOFHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit));
   { DataTreeTOFHit *p; p=(DataTreeTOFHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Position[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Mass2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"P=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeV0Candidate */
static void G__setup_memvarDataTreeV0Candidate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate));
   { DataTreeV0Candidate *p; p=(DataTreeV0Candidate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"p=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT=",0,"pT");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,"phi");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eta=",0,"eta");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"PdgId=",0,"pdg");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Mass=",0,"mass");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ChiSq=",0,"Chi squared");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TrackId=",0,"id of the corresponding track");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nDaughters=",0,"Number of daughter tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrDaughters=",0,"Daughter tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeMCTrack */
static void G__setup_memvarDataTreeMCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack));
   { DataTreeMCTrack *p; p=(DataTreeMCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"ifPrimary=",0,"flag if it is a primary particle  ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"p=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT=",0,"pT for track in the first hit point");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,"phi for track in the first hit point");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eta=",0,"eta for track in the first hit point");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PdgId=",0,"pdg code");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Mass=",0,"mass");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Charge=",0,"charge");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"MotherId=",0,"mother id (-1 == primary)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TOFPosition[3]=",0,"Position at TOF");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TOF_pT=",0,"pT at TOF");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TOF_phi=",0,"phi at TOF");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TOF_eta=",0,"eta at TOF");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSDPosition[3]=",0,"Position at PSD");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSD_pT=",0,"pT for track extrapolated to PSD");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSD_phi=",0,"phi for track extrapolated to PSD");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSD_eta=",0,"eta for track extrapolated to PSD");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSDEnergy=",0,"sum over PsdPoints for a given MC track");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"PSDSectionId=",0,"id of the corresponding PSD section");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TOFSegmentId=",0,"id of the corresponding TOF segment");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeTrigger */
static void G__setup_memvarDataTreeTrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger));
   { DataTreeTrigger *p; p=(DataTreeTrigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Signal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeBPD */
static void G__setup_memvarDataTreeBPD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD));
   { DataTreeBPD *p; p=(DataTreeBPD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Position[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeEvent */
static void G__setup_memvarDataTreeEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent));
   { DataTreeEvent *p; p=(DataTreeEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"ProcessFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"RunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EventId=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"EventTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"VertexPosition[3]=",0,"Position of the vertex");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"VertexQuality=",0,"Quality of vertex fit");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"MCVertexPosition[3]=",0,"Position of the vertex in MC");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"RPAngle=",0,"Reaction plane angle");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ImpactParameter=",0,"Impact parameter");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"MCPSDEnergy=",0,"sum of PSDEnergies for MC tracks");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTracks=",0,"Number of tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrTracks=",0,"tracks");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFiredPSDModules=",0,"number of modules in PSD having some energy deposit");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFiredPSDSections=",0,"number of sections in PSD having some energy deposit");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"PSDEnergy=",0,"total PSD energy");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nPSDModules=",0,"number of PSD modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrPSDModules=",0,"PSD modules");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTOFHits=",0,"number of segments in TOF");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrTOFHits=",0,"TOF segments");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nV0CandidatesTOFpid=",0,"number of V0 candidates");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nV0SpecificCandidatesTOFpid[3]=",0,"number of V0 candidates of specific type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrV0CandidatesTOFpid=",0,"V0 candidates");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nV0CandidatesMCpid=",0,"number of V0 candidates with MC PiD");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nV0SpecificCandidatesMCpid[3]=",0,"number of V0 candidates wit MC PiD and of specific type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrV0CandidatesMCpid=",0,"V0 candidates with MC PiD");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMCTracks=",0,"Multiplicity of MC tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrMCTracks=",0,"MC tracks");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTriggers=",0,"Number of nTriggers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrTriggers=",0,"Triggers");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nBPDs=",0,"Number of BPDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClonesArray),-1,-1,4,"arrBPDs=",0,"BPDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NA61DataEventNew */
static void G__setup_memvarNA61DataEventNew(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew));
   { NA61DataEventNew *p; p=(NA61DataEventNew*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Beam_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fOutFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fInFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent),-1,-1,4,"fEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fOutTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralityManager */
static void G__setup_memvarCentralityManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager));
   { CentralityManager *p; p=(CentralityManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fContainerFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder),-1,-1,4,"fSlicesFinder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter),-1,-1,4,"fCentralityGetter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent),-1,-1,4,"fNA61DataEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"fDetNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeInterface */
static void G__setup_memvarTreeInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface));
   { TreeInterface *p; p=(TreeInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Beam_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fOutFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fInFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fInFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fInTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fOutTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fPsdGeomConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralityContainerNormalizer */
static void G__setup_memvarCentralityContainerNormalizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer));
   { CentralityContainerNormalizer *p; p=(CentralityContainerNormalizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fDet1Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fDet2Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is1DAnalisys=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fInFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet1Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isDet2Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSimData=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNormalization=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"CFdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet1NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fDet2NormVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fRunIdVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"nEventsInRun2Vec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"nEventsInRun1Vec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fInFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fInTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fNormTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det1max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"det2max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GlauberFitter */
static void G__setup_memvarGlauberFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter));
   { GlauberFitter *p; p=(GlauberFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNpart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNcoll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hNBD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hGlaub=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TH1F),-1,-1,4,"hBestFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fSimTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNpart=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fNcoll=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpartMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcollMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBinSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFitMultMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNormMultMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"fOutDirName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliGlauberNucleus */
static void G__setup_memvarAliGlauberNucleus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus));
   { AliGlauberNucleus *p; p=(AliGlauberNucleus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fN=",0,"Number of nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR=",0,"Parameters of function");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA=",0,"Parameters of function");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fW=",0,"Parameters of function");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinDist=",0,"Minimum separation distance");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fF=",0,"Type of radial distribution");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrials=",0,"Store trials needed to complete nucleus");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TF1),-1,-1,4,"fFunction=",0,"Probability density function rho(r)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TObjArray),-1,-1,4,"fNucleons=",0,"Array of nucleons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliGlauberMC */
static void G__setup_memvarAliGlauberMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC));
   { AliGlauberMC *p; p=(AliGlauberMC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kSimple=%lldLL",(long long)AliGlauberMC::kSimple).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kNBD=%lldLL",(long long)AliGlauberMC::kNBD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kNBDSV=%lldLL",(long long)AliGlauberMC::kNBDSV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kTwoNBD=%lldLL",(long long)AliGlauberMC::kTwoNBD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kGBW=%lldLL",(long long)AliGlauberMC::kGBW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-2,1,G__FastAllocString(2048).Format("kNone=%lldLL",(long long)AliGlauberMC::kNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus),-1,-1,4,"fANucleus=",0,"Nucleus A");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus),-1,-1,4,"fBNucleus=",0,"Nucleus B");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXSect=",0,"Nucleon-nucleon cross section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TObjArray),-1,-1,4,"fNucleonsA=",0,"Array of nucleons in nucleus A");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TObjArray),-1,-1,4,"fNucleonsB=",0,"Array of nucleons in nucleus B");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAN=",0,"Number of nucleons in nucleus A");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQAN=",0,"Number of nucleons in nucleus A");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBN=",0,"Number of nucleons in nucleus B");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQBN=",0,"Number of nucleons in nucleus B");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TNtuple),-1,-1,4,"fnt=",0,"Ntuple for results (created, but not deleted)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanX2=",0,"<x^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanY2=",0,"<y^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXY=",0,"<xy> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanX2Parts=",0,"<x^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanY2Parts=",0,"<y^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXYParts=",0,"<xy> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXParts=",0,"<x> of wounded nucleons ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYParts=",0,"<y> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOXParts=",0,"<x> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOYParts=",0,"<y> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXColl=",0,"<x> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYColl=",0,"<y> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOXColl=",0,"<x> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOYColl=",0,"<y> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanX2Coll=",0,"<x^2> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanY2Coll=",0,"<y^2> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXYColl=",0,"<xy> of binary collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXCom=",0,"<x> of combine");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYCom=",0,"<y> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOXCom=",0,"<x> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOYCom=",0,"<y> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanX2Com=",0,"<x^2> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanY2Com=",0,"<y^2> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXYCom=",0,"<xy> of ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXSystem=",0,"<x> of all nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYSystem=",0,"<x> of all nucleons  ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXA=",0,"<x> of nucleons in nucleus A");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYA=",0,"<x> of nucleons in nucleus A");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanXB=",0,"<x> of nucleons in nucleus B");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanYB=",0,"<x> of nucleons in nucleus B ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOXA=",0,"<x> of nucleons in nucleus A");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOYA=",0,"<x> of nucleons in nucleus A");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOXB=",0,"<x> of nucleons in nucleus B");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanOYB=",0,"<x> of nucleons in nucleus B ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBMC=",0,"Impact parameter (b)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvents=",0,"Number of events with at least one collision");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotalEvents=",0,"All events within selected impact parameter range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBMin=",0,"Minimum impact parameter to be generated");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBMax=",0,"Maximum impact parameter to be generated");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdNdEtaParam[10]=",0,"Parameters for multiplicity calculation: meaning depends on method selection ");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType),-1,-1,4,"fMultType=",0,"mutliplicity method selection  ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxNpartFound=",0,"Largest value of Npart obtained");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fONpart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fONcoll=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fONcom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpart=",0,"Number of wounded (participating) nucleons in current event   ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcoll=",0,"Number of binary collisions in current event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNcom=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2=",0,"----------<r^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3=",0,"----------<r^3> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4=",0,"----------<r^4> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5=",0,"----------<r^5> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos2Phi=",0,"------<r^2*cos2phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin2Phi=",0,"------<r^2*sin2phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos3Phi=",0,"------<r^2*cos3phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin3Phi=",0,"------<r^2*sin3phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos4Phi=",0,"------<r^2*cos4phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin4Phi=",0,"------<r^2*sin4phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos5Phi=",0,"------<r^2*cos5phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin5Phi=",0,"------<r^2*sin5phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Cos3Phi=",0,"------<r^3*cos3phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Sin3Phi=",0,"------<r^3*sin3phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Cos4Phi=",0,"------<r^4*cos4phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Sin4Phi=",0,"------<r^4*sin4phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Cos5Phi=",0,"------<r^5*cos5phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Sin5Phi=",0,"------<r^5*sin5phi> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Coll=",0,"----------<r^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Coll=",0,"----------<r^3> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Coll=",0,"----------<r^4> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Coll=",0,"----------<r^5> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos2PhiColl=",0,"------<r^2*cos2phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin2PhiColl=",0,"------<r^2*sin2phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos3PhiColl=",0,"------<r^2*cos3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin3PhiColl=",0,"------<r^2*sin3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos4PhiColl=",0,"------<r^2*cos4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin4PhiColl=",0,"------<r^2*sin4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos5PhiColl=",0,"------<r^2*cos5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin5PhiColl=",0,"------<r^2*sin5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Cos3PhiColl=",0,"------<r^3*cos3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Sin3PhiColl=",0,"------<r^3*sin3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Cos4PhiColl=",0,"------<r^4*cos4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Sin4PhiColl=",0,"------<r^4*sin4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Cos5PhiColl=",0,"------<r^5*cos5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Sin5PhiColl=",0,"------<r^5*sin5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Com=",0,"----------<r^2> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Com=",0,"----------<r^3> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Com=",0,"----------<r^4> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Com=",0,"----------<r^5> of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos2PhiCom=",0,"------<r^2*cos2phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin2PhiCom=",0,"------<r^2*sin2phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos3PhiCom=",0,"------<r^2*cos3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin3PhiCom=",0,"------<r^2*sin3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos4PhiCom=",0,"------<r^2*cos4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin4PhiCom=",0,"------<r^2*sin4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Cos5PhiCom=",0,"------<r^2*cos5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr2Sin5PhiCom=",0,"------<r^2*sin5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Cos3PhiCom=",0,"------<r^3*cos3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr3Sin3PhiCom=",0,"------<r^3*sin3phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Cos4PhiCom=",0,"------<r^4*cos4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr4Sin4PhiCom=",0,"------<r^4*sin4phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Cos5PhiCom=",0,"------<r^5*cos5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanr5Sin5PhiCom=",0,"------<r^5*sin5phi> ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSx2Parts=",0,"Variance of x of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSy2Parts=",0,"Variance of y of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSxyParts=",0,"Covariance of x and y of wounded nucleons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSx2Coll=",0,"Variance of x of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSy2Coll=",0,"Variance of y of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSxyColl=",0,"Covariance of x and y of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSx2Com=",0,"Variance of x of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSy2Com=",0,"Variance of y of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSxyCom=",0,"Covariance of x and y of binaruy collisions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,"hard particle production fraction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNpp=",0,"Multiplicity normalization");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoPartProd=",0,"=1 then particle production on");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBNN=",0,"average NN impact parameter");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoFluc=",0,"=kTRUE then fluc sigma (only useful for pPb)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOmega=",0,"fluctuation parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSig0=",0,"regularization parameter ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLambda=",0,"lambda parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TF1),-1,-1,4,"fSigFluc=",0,"!parameterization for fluctuating sigNN");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliGlauberNucleon */
static void G__setup_memvarAliGlauberNucleon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon));
   { AliGlauberNucleon *p; p=(AliGlauberNucleon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fX=",0,"Position of nucleon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fY=",0,"Position of nucleon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fZ=",0,"Position of nucleon");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInNucleusA=",0,"=1 from nucleus A, =0 from nucleus B");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNColl=",0,"Number of binary collisions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeConverterNA61 */
static void G__setup_memvarDataTreeConverterNA61(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61));
   { DataTreeConverterNA61 *p; p=(DataTreeConverterNA61*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent),-1,-1,4,"DTEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fCurEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nRealEvents=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nInfinity=10000000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nUndefinedValue=-999LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nRawReco=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nTriggers_Simple=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nTriggers=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nBPD=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nBPDcomponents=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nPSD_Modules=45LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nPSD_Sections=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nTPC_Tracks=2000LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"sInputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TString),-1,-1,4,"sOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TFile),-1,-1,4,"fTreeFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TTree),-1,-1,4,"fTreeQA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Run_Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Event_Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Event_Timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"RPAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ImpactParameter=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"T1=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"T2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"T4=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"triggersADC[2][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"BPD_Position[2][3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"FitVertexX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"FitVertexY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"FitVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"FitVertexQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PSD_module_Energy[45]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PSD_section_Energy[45][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PSD_module_X[45]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PSD_module_Y[45]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"PSD_module_Z[45]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TPC_track_pT[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TPC_track_eta[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TPC_track_phi[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_NofHits[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_PidHypo[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_Flag[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TPC_track_ChiSq[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_NDF[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TPC_track_DCAtoVertex_X[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TPC_track_DCAtoVertex_Y[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClusters_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClusters_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClusters_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClusters_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClusters_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClustersPotential_Total[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClustersPotential_TPCV1[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClustersPotential_TPCV2[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClustersPotential_TPCVmain[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TPC_track_nClustersPotential_TPCVgap[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTreeSTSTrack */
static void G__setup_memvarDataTreeSTSTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack));
   { DataTreeSTSTrack *p; p=(DataTreeSTSTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NofHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Flag=",0,"(?definition)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ChiSq=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NDF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"DCA[3]=",0,"(calculate)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"MCTrack_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TOFHit_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CentralityLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Centrality() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCentralityDetectorEvent(void) {
   /* CentralityDetectorEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent));
   G__memfunc_setup("CentralityDetectorEvent",2395,G__G__Centrality_127_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetId",758,G__G__Centrality_127_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - DetId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntries",1030,G__G__Centrality_127_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEntry",795,G__G__Centrality_127_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeightVector",1531,G__G__Centrality_127_0_5, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetId",746,G__G__Centrality_127_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfChannels",1898,G__G__Centrality_127_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalSignal",1410,G__G__Centrality_127_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_127_0_9, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityDetectorEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_127_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityDetectorEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_127_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityDetectorEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_127_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityDetectorEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_127_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_127_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityDetectorEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_127_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityDetectorEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_127_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityDetectorEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_127_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityDetectorEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralityDetectorEvent", 2395, G__G__Centrality_127_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent), -1, 0, 1, 1, 1, 0, "u 'CentralityDetectorEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralityDetectorEvent", 2521, G__G__Centrality_127_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_127_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent), -1, 1, 1, 1, 1, 0, "u 'CentralityDetectorEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralityEventContainer(void) {
   /* CentralityEventContainer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer));
   G__memfunc_setup("CentralityEventContainer",2500,G__G__Centrality_132_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunId",782,G__G__Centrality_132_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetB",366,G__G__Centrality_132_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventId",987,G__G__Centrality_132_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - EventId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetector",1091,G__G__Centrality_132_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CentralityDetectorEvent' - 0 - Det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetectorEntry",1621,G__G__Centrality_132_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i f - 'Float_t' 0 - Entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetectorEvent",1605,G__G__Centrality_132_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunId",770,G__G__Centrality_132_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDetectors",2027,G__G__Centrality_132_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorData",1492,G__G__Centrality_132_0_10, 117, G__get_linked_tagnum(&G__G__CentralityLN_CentralityDetectorEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__G__Centrality_132_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventId",975,G__G__Centrality_132_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorWeight",1730,G__G__Centrality_132_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_132_0_14, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityEventContainer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_132_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityEventContainer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_132_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityEventContainer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_132_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityEventContainer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_132_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_132_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityEventContainer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_132_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityEventContainer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_132_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityEventContainer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_132_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityEventContainer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralityEventContainer", 2500, G__G__Centrality_132_0_26, (int) ('i'), 
G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer), -1, 0, 1, 1, 1, 0, "u 'CentralityEventContainer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralityEventContainer", 2626, G__G__Centrality_132_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_132_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_CentralityEventContainer), -1, 1, 1, 1, 1, 0, "u 'CentralityEventContainer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralitySlice(void) {
   /* CentralitySlice */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice));
   G__memfunc_setup("CentralitySlice",1551,G__G__Centrality_335_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,G__G__Centrality_335_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunId",782,G__G__Centrality_335_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSlice",761,G__G__Centrality_335_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - A f - 'Float_t' 0 - B "
"f - 'Float_t' 0 - X", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetMax",879,G__G__Centrality_335_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - det1 f - 'Float_t' 0 '-1' det2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXPar",644,G__G__Centrality_335_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddYPar",645,G__G__Centrality_335_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXYPar",733,G__G__Centrality_335_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXY3",493,G__G__Centrality_335_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddB",331,G__G__Centrality_335_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - sigma "
"f - 'Float_t' 0 '0' dmean f - 'Float_t' 0 '0' dsigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNSlices",989,G__G__Centrality_335_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - NSlices", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCentralityMax",1649,G__G__Centrality_335_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CentralityMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitFunction",1429,G__G__Centrality_335_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - FitFunction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlicesStep",1323,G__G__Centrality_335_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectionCentralEvents",2571,G__G__Centrality_335_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet1NormVec",1332,G__G__Centrality_335_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet2NormVec",1333,G__G__Centrality_335_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunIdVec",1068,G__G__Centrality_335_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunId",770,G__G__Centrality_335_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAi",458,G__G__Centrality_335_0_20, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBi",459,G__G__Centrality_335_0_21, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXi",481,G__G__Centrality_335_0_22, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanXi",866,G__G__Centrality_335_0_23, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanYi",867,G__G__Centrality_335_0_24, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanXYi",955,G__G__Centrality_335_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaXi",978,G__G__Centrality_335_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaYi",979,G__G__Centrality_335_0_27, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaXYi",1067,G__G__Centrality_335_0_28, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1Max",916,G__G__Centrality_335_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2Max",917,G__G__Centrality_335_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSlices",977,G__G__Centrality_335_0_31, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentralityMax",1637,G__G__Centrality_335_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlicesStep",1311,G__G__Centrality_335_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirectionCentralEvents",2559,G__G__Centrality_335_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitFunction",1417,G__G__Centrality_335_0_35, 85, G__get_linked_tagnum(&G__G__CentralityLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__G__Centrality_335_0_36, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__G__Centrality_335_0_37, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__Centrality_335_0_38, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanX",761,G__G__Centrality_335_0_39, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanY",762,G__G__Centrality_335_0_40, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanXY",850,G__G__Centrality_335_0_41, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaX",873,G__G__Centrality_335_0_42, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaY",874,G__G__Centrality_335_0_43, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaXY",962,G__G__Centrality_335_0_44, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanB",739,G__G__Centrality_335_0_45, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaB",851,G__G__Centrality_335_0_46, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdB",454,G__G__Centrality_335_0_47, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdSigmaB",951,G__G__Centrality_335_0_48, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanXY3",901,G__G__Centrality_335_0_49, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1NormVec",1320,G__G__Centrality_335_0_50, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2NormVec",1321,G__G__Centrality_335_0_51, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunIdVec",1056,G__G__Centrality_335_0_52, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_335_0_53, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralitySlice::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_335_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlice::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_335_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralitySlice::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_335_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralitySlice::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_335_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_335_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlice::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_335_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralitySlice::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_335_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlice::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_335_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralitySlice::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralitySlice", 1551, G__G__Centrality_335_0_65, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice), -1, 0, 1, 1, 1, 0, "u 'CentralitySlice' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralitySlice", 1677, G__G__Centrality_335_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_335_0_67, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlice), -1, 1, 1, 1, 1, 0, "u 'CentralitySlice' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralitySlicesFinder(void) {
   /* CentralitySlicesFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder));
   G__memfunc_setup("CentralitySlicesFinder",2266,G__G__Centrality_340_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadInputData",1290,G__G__Centrality_340_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 '-1' Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunSliceFinder",1405,G__G__Centrality_340_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCentralitySlices",2051,G__G__Centrality_340_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit2DCorrelation",1563,G__G__Centrality_340_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitCorrection",1339,G__G__Centrality_340_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n_points", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSlices",996,G__G__Centrality_340_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMeanSignalsInSlice",2170,G__G__Centrality_340_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteOutputData",1558,G__G__Centrality_340_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QA",146,G__G__Centrality_340_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_norm",956,G__G__Centrality_340_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 - par d - 'Double_t' 0 - x "
"D - 'Double_t' 0 - kb i - - 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet1Name",1019,G__G__Centrality_340_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet2Name",1020,G__G__Centrality_340_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCuts",715,G__G__Centrality_340_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TCut' - 0 - Cuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCentralityMax",1649,G__G__Centrality_340_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CentralityMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrecision",1240,G__G__Centrality_340_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Precision", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectionCentralEvents",2571,G__G__Centrality_340_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSliceStep",1208,G__G__Centrality_340_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - SliceStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormalization",1683,G__G__Centrality_340_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInFileName",1252,G__G__Centrality_340_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - FileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do1DAnalisys",1132,G__G__Centrality_340_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det1IsInt",821,G__G__Centrality_340_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2IsInt",822,G__G__Centrality_340_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfSlices",1709,G__G__Centrality_340_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,G__G__Centrality_340_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSimData",863,G__G__Centrality_340_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutFileName",1381,G__G__Centrality_340_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1Name",1007,G__G__Centrality_340_0_28, 117, G__get_linked_tagnum(&G__G__CentralityLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2Name",1008,G__G__Centrality_340_0_29, 117, G__get_linked_tagnum(&G__G__CentralityLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSliceStep",1196,G__G__Centrality_340_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("polN",409,G__G__Centrality_340_0_31, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - par d - 'Double_t' 0 - x "
"i - - 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CentralitySlicesFinder",2266,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder), -1, 0, 1, 1, 4, 0, "u 'CentralitySlicesFinder' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder), -1, 1, 1, 1, 4, 0, "u 'CentralitySlicesFinder' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_340_0_34, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralitySlicesFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_340_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlicesFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_340_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralitySlicesFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_340_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralitySlicesFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_340_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_340_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlicesFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_340_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralitySlicesFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_340_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralitySlicesFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_340_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralitySlicesFinder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CentralitySlicesFinder", 2392, G__G__Centrality_340_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGlauberParGetter(void) {
   /* GlauberParGetter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter));
   G__memfunc_setup("GlauberParGetter",1616,G__G__Centrality_358_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestFunc",812,G__G__Centrality_358_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - nf f - 'Float_t' 0 - f0 "
"f - 'Float_t' 0 - f1 i - 'Int_t' 0 - nsigma "
"i - 'Int_t' 0 - nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimTree",997,G__G__Centrality_358_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename u 'TString' - 0 '\"nt_Pb_Pb\"' treename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBHisto",873,G__G__Centrality_358_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - MultMin f - 'Float_t' 0 - MultMax "
"U 'TH1F' - 0 - hB i - 'Int_t' 0 '10000' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpartHisto",1324,G__G__Centrality_358_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - MultMin f - 'Float_t' 0 - MultMax "
"U 'TH1F' - 0 - hNpart i - 'Int_t' 0 '10000' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNcollHisto",1311,G__G__Centrality_358_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - MultMin f - 'Float_t' 0 - MultMax "
"U 'TH1F' - 0 - hNcoll i - 'Int_t' 0 '10000' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstdHisto",1207,G__G__Centrality_358_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - MultMin f - 'Float_t' 0 - MultMax "
"U 'TH1F' - 0 - hEstd i - 'Int_t' 0 '10000' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawHistos",1032,G__G__Centrality_358_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 'true' isSim g - 'Bool_t' 0 'true' isData "
"g - 'Bool_t' 0 'false' isGlauber g - 'Bool_t' 0 'false' isNBD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NBD",212,G__G__Centrality_358_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - n d - 'Double_t' 0 - mu "
"d - 'Double_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNBDhist",952,G__G__Centrality_358_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitParams",1203,G__G__Centrality_358_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - f f - 'Float_t' 0 - mu "
"f - 'Float_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutDirName",1284,G__G__Centrality_358_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlauberFitHisto",1804,G__G__Centrality_358_0_13, 85, G__get_linked_tagnum(&G__G__CentralityLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBDHisto",1019,G__G__Centrality_358_0_14, 85, G__get_linked_tagnum(&G__G__CentralityLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_358_0_15, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GlauberParGetter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_358_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberParGetter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_358_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GlauberParGetter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_358_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GlauberParGetter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_358_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_358_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberParGetter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_358_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlauberParGetter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_358_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberParGetter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_358_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlauberParGetter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GlauberParGetter", 1616, G__G__Centrality_358_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter), -1, 0, 1, 1, 1, 0, "u 'GlauberParGetter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GlauberParGetter", 1742, G__G__Centrality_358_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_358_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_GlauberParGetter), -1, 1, 1, 1, 1, 0, "u 'GlauberParGetter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralityGetter(void) {
   /* CentralityGetter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter));
   G__memfunc_setup("CentralityGetter",1674,G__G__Centrality_359_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadCentalityDataFile",2087,G__G__Centrality_359_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentrality",1343,G__G__Centrality_359_0_3, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - det1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentrality",1343,G__G__Centrality_359_0_4, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - det1 d - 'Double_t' 0 - det2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det1IsInt",821,G__G__Centrality_359_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2IsInt",822,G__G__Centrality_359_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNSlices",989,G__G__Centrality_359_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - NSlices", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSlices",977,G__G__Centrality_359_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunId",782,G__G__Centrality_359_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlauberB",1060,G__G__Centrality_359_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - f f - 'Float_t' 0 - mu "
"f - 'Float_t' 0 - k u 'TString' - 0 - GlaubFile "
"u 'TString' - 0 - GlaubTreeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CentralityGetter",1674,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter), -1, 0, 1, 1, 4, 0, "u 'CentralityGetter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter), -1, 1, 1, 1, 4, 0, "u 'CentralityGetter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_359_0_13, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityGetter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_359_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityGetter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_359_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityGetter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_359_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityGetter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Centrality_359_0_17, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Centrality_359_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Centrality_359_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_359_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_359_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityGetter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_359_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityGetter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_359_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityGetter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_359_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityGetter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CentralityGetter", 1800, G__G__Centrality_359_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNA61DataEvent(void) {
   /* NA61DataEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent));
   G__memfunc_setup("isGoodTrack",1114,G__G__Centrality_371_0_1, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iTrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isRefMultTrack",1424,G__G__Centrality_371_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iTrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NA61DataEvent",1138,G__G__Centrality_371_0_3, 105, G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NA61DataEvent",1138,G__G__Centrality_371_0_4, 105, G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__G__Centrality_371_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - dir i - 'Int_t' 0 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__G__Centrality_371_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__G__Centrality_371_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__G__Centrality_371_0_8, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__Centrality_371_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__G__Centrality_371_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,G__G__Centrality_371_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__G__Centrality_371_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("NA61DataEvent", 1138, G__G__Centrality_371_0_13, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent), -1, 0, 1, 1, 1, 0, "u 'NA61DataEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NA61DataEvent", 1264, G__G__Centrality_371_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_371_0_15, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEvent), -1, 1, 1, 1, 1, 0, "u 'NA61DataEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeTrack(void) {
   /* DataTreeTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack));
   G__memfunc_setup("DataTreeTrack",1279,G__G__Centrality_373_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_373_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUndefinedValues",1838,G__G__Centrality_373_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnZPositions",1456,G__G__Centrality_373_0_4, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrack::GetnZPositions) ), 0);
   G__memfunc_setup("GetnMaxStations",1545,G__G__Centrality_373_0_5, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrack::GetnMaxStations) ), 0);
   G__memfunc_setup("GetnSubDetectors",1637,G__G__Centrality_373_0_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrack::GetnSubDetectors) ), 0);
   G__memfunc_setup("GetPt",484,G__G__Centrality_373_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__Centrality_373_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEta",570,G__G__Centrality_373_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__G__Centrality_373_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__G__Centrality_373_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__G__Centrality_373_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__G__Centrality_373_0_13, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofHits",987,G__G__Centrality_373_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 '0' subidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofHitsPotential",1931,G__G__Centrality_373_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 '0' subidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlag",666,G__G__Centrality_373_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSq",760,G__G__Centrality_373_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxChiSq",1082,G__G__Centrality_373_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDF",504,G__G__Centrality_373_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDCAComponent",1435,G__G__Centrality_373_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - jdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStation",1026,G__G__Centrality_373_0_21, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - jdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStations",1219,G__G__Centrality_373_0_22, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSTSHitsPossible",1779,G__G__Centrality_373_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLengthInSTS",1331,G__G__Centrality_373_0_24, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__G__Centrality_373_0_25, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDModuleId",1306,G__G__Centrality_373_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFSegmentId",1417,G__G__Centrality_373_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCTrackId",1106,G__G__Centrality_373_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__G__Centrality_373_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Centrality_373_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__G__Centrality_373_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__G__Centrality_373_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__G__Centrality_373_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__G__Centrality_373_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__G__Centrality_373_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNofHits",999,G__G__Centrality_373_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fNofHits "
"i - - 0 '0' subidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNofHitsPotential",1943,G__G__Centrality_373_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fNofHitsPotential "
"i - - 0 '0' subidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlag",678,G__G__Centrality_373_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fFlag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSq",772,G__G__Centrality_373_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fChiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxChiSq",1094,G__G__Centrality_373_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNDF",516,G__G__Centrality_373_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fNDF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDCA",500,G__G__Centrality_373_0_42, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fX "
"d - - 0 - fY d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDCAComponent",1447,G__G__Centrality_373_0_43, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idx i - - 0 - jdx "
"d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStation",1038,G__G__Centrality_373_0_44, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idx i - - 0 - jdx "
"g - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNStations",1231,G__G__Centrality_373_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSTSHitsPossible",1791,G__G__Centrality_373_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLengthInSTS",1343,G__G__Centrality_373_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__G__Centrality_373_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDModuleId",1318,G__G__Centrality_373_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFSegmentId",1429,G__G__Centrality_373_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCTrackId",1118,G__G__Centrality_373_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_373_0_53, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_373_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_373_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_373_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_373_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_373_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_373_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_373_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_373_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeTrack", 1279, G__G__Centrality_373_0_65, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack), -1, 0, 1, 1, 1, 0, "u 'DataTreeTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeTrack", 1405, G__G__Centrality_373_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_373_0_67, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack), -1, 1, 1, 1, 1, 0, "u 'DataTreeTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreePSDSection(void) {
   /* DataTreePSDSection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection));
   G__memfunc_setup("DataTreePSDSection",1734,G__G__Centrality_374_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__G__Centrality_374_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_374_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__Centrality_374_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__Centrality_374_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEnergy",883,G__G__Centrality_374_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_374_0_8, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreePSDSection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_374_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDSection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_374_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreePSDSection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_374_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreePSDSection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_374_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_374_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDSection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_374_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreePSDSection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_374_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDSection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_374_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreePSDSection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreePSDSection", 1734, G__G__Centrality_374_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection), -1, 0, 1, 1, 1, 0, "u 'DataTreePSDSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreePSDSection", 1860, G__G__Centrality_374_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_374_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection), -1, 1, 1, 1, 1, 0, "u 'DataTreePSDSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreePSDModule(void) {
   /* DataTreePSDModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule));
   G__memfunc_setup("DataTreePSDModule",1623,G__G__Centrality_375_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataTreePSDModule",1623,G__G__Centrality_375_0_2, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - inSections", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__G__Centrality_375_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__G__Centrality_375_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_375_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSectionNumberCut",1930,G__G__Centrality_375_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionComponent",2088,G__G__Centrality_375_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__Centrality_375_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__Centrality_375_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFiredSections",1696,G__G__Centrality_375_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSectionNumberCut",1942,G__G__Centrality_375_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__G__Centrality_375_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionComponent",2100,G__G__Centrality_375_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSections",1206,G__G__Centrality_375_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSection",1013,G__G__Centrality_375_0_15, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSection",1417,G__G__Centrality_375_0_16, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDSection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSection",990,G__G__Centrality_375_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_375_0_19, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreePSDModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_375_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_375_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreePSDModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_375_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreePSDModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_375_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_375_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_375_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreePSDModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_375_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreePSDModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_375_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreePSDModule::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreePSDModule", 1623, G__G__Centrality_375_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 0, 1, 1, 1, 0, "u 'DataTreePSDModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreePSDModule", 1749, G__G__Centrality_375_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_375_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 1, 1, 1, 1, 0, "u 'DataTreePSDModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeTOFHit(void) {
   /* DataTreeTOFHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit));
   G__memfunc_setup("DataTreeTOFHit",1304,G__G__Centrality_376_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__G__Centrality_376_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_376_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionComponent",2088,G__G__Centrality_376_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__Centrality_376_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__G__Centrality_376_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__Centrality_376_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__G__Centrality_376_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass2",742,G__G__Centrality_376_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__G__Centrality_376_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__G__Centrality_376_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__G__Centrality_376_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__G__Centrality_376_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionComponent",2100,G__G__Centrality_376_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__G__Centrality_376_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__G__Centrality_376_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass2",754,G__G__Centrality_376_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLength",910,G__G__Centrality_376_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeta",680,G__G__Centrality_376_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__G__Centrality_376_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__G__Centrality_376_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_376_0_23, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeTOFHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_376_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTOFHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_376_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeTOFHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_376_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeTOFHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_376_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_376_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTOFHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_376_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTOFHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_376_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTOFHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_376_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTOFHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeTOFHit", 1304, G__G__Centrality_376_0_35, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 0, 1, 1, 1, 0, "u 'DataTreeTOFHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeTOFHit", 1430, G__G__Centrality_376_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_376_0_37, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 1, 1, 1, 1, 0, "u 'DataTreeTOFHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeV0Candidate(void) {
   /* DataTreeV0Candidate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate));
   G__memfunc_setup("DataTreeV0Candidate",1805,G__G__Centrality_377_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_377_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__G__Centrality_377_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__G__Centrality_377_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__G__Centrality_377_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__G__Centrality_377_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPt",484,G__G__Centrality_377_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__Centrality_377_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEta",570,G__G__Centrality_377_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdgId",744,G__G__Centrality_377_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__G__Centrality_377_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSq",760,G__G__Centrality_377_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackId",962,G__G__Centrality_377_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__G__Centrality_377_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__G__Centrality_377_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__G__Centrality_377_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__G__Centrality_377_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__G__Centrality_377_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Centrality_377_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__G__Centrality_377_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdgId",756,G__G__Centrality_377_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__G__Centrality_377_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSq",772,G__G__Centrality_377_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fChiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackId",974,G__G__Centrality_377_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDaughters",1301,G__G__Centrality_377_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughter",1108,G__G__Centrality_377_0_26, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastDaughter",1512,G__G__Centrality_377_0_27, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__G__Centrality_377_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_377_0_30, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeV0Candidate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_377_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeV0Candidate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_377_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeV0Candidate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_377_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeV0Candidate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_377_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_377_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeV0Candidate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_377_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeV0Candidate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_377_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeV0Candidate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_377_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeV0Candidate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeV0Candidate", 1805, G__G__Centrality_377_0_42, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 1, 1, 1, 0, "u 'DataTreeV0Candidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeV0Candidate", 1931, G__G__Centrality_377_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_377_0_44, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 1, 1, 1, 1, 0, "u 'DataTreeV0Candidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeMCTrack(void) {
   /* DataTreeMCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack));
   G__memfunc_setup("DataTreeMCTrack",1423,G__G__Centrality_378_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_378_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIfPrimary",1203,G__G__Centrality_378_0_3, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__G__Centrality_378_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__G__Centrality_378_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__G__Centrality_378_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__G__Centrality_378_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPt",484,G__G__Centrality_378_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__Centrality_378_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEta",570,G__G__Centrality_378_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdgId",744,G__G__Centrality_378_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__G__Centrality_378_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__G__Centrality_378_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMotherId",1084,G__G__Centrality_378_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFPositionComponent",2321,G__G__Centrality_378_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFPt",717,G__G__Centrality_378_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFPhi",810,G__G__Centrality_378_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFEta",803,G__G__Centrality_378_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDPositionComponent",2319,G__G__Centrality_378_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDPt",715,G__G__Centrality_378_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDPhi",808,G__G__Centrality_378_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDEta",801,G__G__Centrality_378_0_22, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDEnergy",1137,G__G__Centrality_378_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDSectionId",1417,G__G__Centrality_378_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFSegmentId",1417,G__G__Centrality_378_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIfPrimary",1215,G__G__Centrality_378_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__G__Centrality_378_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Centrality_378_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__G__Centrality_378_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__G__Centrality_378_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__G__Centrality_378_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__G__Centrality_378_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__G__Centrality_378_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdgId",756,G__G__Centrality_378_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__G__Centrality_378_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__G__Centrality_378_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMotherId",1096,G__G__Centrality_378_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFPosition",1386,G__G__Centrality_378_0_38, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFPositionComponent",2333,G__G__Centrality_378_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFPt",729,G__G__Centrality_378_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fTOFPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFPhi",822,G__G__Centrality_378_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fTOFPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFEta",815,G__G__Centrality_378_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fTOFEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDPosition",1384,G__G__Centrality_378_0_43, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDPositionComponent",2331,G__G__Centrality_378_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDPt",727,G__G__Centrality_378_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPSDPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDPhi",820,G__G__Centrality_378_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPSDPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDEta",813,G__G__Centrality_378_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPSDEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDEnergy",1149,G__G__Centrality_378_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSDSectionId",1429,G__G__Centrality_378_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFSegmentId",1429,G__G__Centrality_378_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_378_0_52, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeMCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_378_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeMCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_378_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeMCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_378_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeMCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_378_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_378_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeMCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_378_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeMCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_378_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeMCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_378_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeMCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeMCTrack", 1423, G__G__Centrality_378_0_64, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack), -1, 0, 1, 1, 1, 0, "u 'DataTreeMCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeMCTrack", 1549, G__G__Centrality_378_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_378_0_66, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack), -1, 1, 1, 1, 1, 0, "u 'DataTreeMCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeTrigger(void) {
   /* DataTreeTrigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger));
   G__memfunc_setup("DataTreeTrigger",1502,G__G__Centrality_379_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataTreeTrigger",1502,G__G__Centrality_379_0_2, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx u 'TString' - 0 - label", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_379_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignal",894,G__G__Centrality_379_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLabel",768,G__G__Centrality_379_0_5, 117, G__get_linked_tagnum(&G__G__CentralityLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignal",906,G__G__Centrality_379_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLabel",780,G__G__Centrality_379_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fLabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_379_0_9, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeTrigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_379_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_379_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeTrigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_379_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeTrigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_379_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_379_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_379_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_379_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeTrigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_379_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeTrigger::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeTrigger", 1502, G__G__Centrality_379_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 0, 1, 1, 1, 0, "u 'DataTreeTrigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeTrigger", 1628, G__G__Centrality_379_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_379_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 1, 1, 1, 1, 0, "u 'DataTreeTrigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeBPD(void) {
   /* DataTreeBPD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD));
   G__memfunc_setup("DataTreeBPD",992,G__G__Centrality_380_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD), -1, 0, 1, 1, 1, 0, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_380_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionComponent",2088,G__G__Centrality_380_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__G__Centrality_380_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionComponent",2100,G__G__Centrality_380_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_380_0_7, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeBPD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_380_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeBPD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_380_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeBPD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_380_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeBPD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_380_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_380_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeBPD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_380_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeBPD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_380_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeBPD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_380_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeBPD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeBPD", 992, G__G__Centrality_380_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD), -1, 0, 1, 1, 1, 0, "u 'DataTreeBPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeBPD", 1118, G__G__Centrality_380_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_380_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD), -1, 1, 1, 1, 1, 0, "u 'DataTreeBPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeEvent(void) {
   /* DataTreeEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent));
   G__memfunc_setup("DataTreeEvent",1292,G__G__Centrality_381_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__G__Centrality_381_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__G__Centrality_381_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunId",770,G__G__Centrality_381_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventId",975,G__G__Centrality_381_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTimestamp",1750,G__G__Centrality_381_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPAngle",937,G__G__Centrality_381_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImpactParameter",1823,G__G__Centrality_381_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexPositionComponent",2726,G__G__Centrality_381_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexQuality",1671,G__G__Centrality_381_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFiredPSDModules",1816,G__G__Centrality_381_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFiredPSDSections",1927,G__G__Centrality_381_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDEnergy",1137,G__G__Centrality_381_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCPSDEnergy",1281,G__G__Centrality_381_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCVertexPositionComponent",2870,G__G__Centrality_381_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0Types",1033,G__G__Centrality_381_0_16, 105, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0Pdg",783,G__G__Centrality_381_0_17, 105, -1, -1, 0, 1, 1, 1, 1, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunId",782,G__G__Centrality_381_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventId",987,G__G__Centrality_381_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTimestamp",1762,G__G__Centrality_381_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRPAngle",949,G__G__Centrality_381_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetImpactParameter",1835,G__G__Centrality_381_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexPosition",1791,G__G__Centrality_381_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexPositionComponent",2738,G__G__Centrality_381_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexQuality",1683,G__G__Centrality_381_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCVertexPosition",1935,G__G__Centrality_381_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCVertexPositionComponent",2882,G__G__Centrality_381_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNV0SpecificCandidatesTOFpid",2876,G__G__Centrality_381_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNV0CandidatesTOFpid",2070,G__G__Centrality_381_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNV0SpecificCandidatesMCpid",2787,G__G__Centrality_381_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNV0CandidatesMCpid",1981,G__G__Centrality_381_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTracks",982,G__G__Centrality_381_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__G__Centrality_381_0_33, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastTrack",1193,G__G__Centrality_381_0_34, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__G__Centrality_381_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTrack",988,G__G__Centrality_381_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPSDModules",1326,G__G__Centrality_381_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSDModule",1133,G__G__Centrality_381_0_38, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPSDModule",1537,G__G__Centrality_381_0_39, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreePSDModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPSDModule",1110,G__G__Centrality_381_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPSDModule",1110,G__G__Centrality_381_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - inSections", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTOFHits",1007,G__G__Centrality_381_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFHit",814,G__G__Centrality_381_0_43, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastTOFHit",1218,G__G__Centrality_381_0_44, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTOFHit",791,G__G__Centrality_381_0_45, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTOFHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0SpecificCandidatesTOFpid",2864,G__G__Centrality_381_0_46, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0CandidatesTOFpid",2058,G__G__Centrality_381_0_47, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV0CandidateTOFpid",1865,G__G__Centrality_381_0_48, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastV0CandidateTOFpid",2269,G__G__Centrality_381_0_49, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddV0CandidateTOFpid",1842,G__G__Centrality_381_0_50, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0SpecificCandidatesMCpid",2775,G__G__Centrality_381_0_51, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNV0CandidatesMCpid",1969,G__G__Centrality_381_0_52, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV0CandidateMCpid",1776,G__G__Centrality_381_0_53, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastV0CandidateMCpid",2180,G__G__Centrality_381_0_54, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddV0CandidateMCpid",1753,G__G__Centrality_381_0_55, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeV0Candidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMCTracks",1126,G__G__Centrality_381_0_56, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCTrack",933,G__G__Centrality_381_0_57, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastMCTrack",1337,G__G__Centrality_381_0_58, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeMCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMCTrack",910,G__G__Centrality_381_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTriggers",1205,G__G__Centrality_381_0_60, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__G__Centrality_381_0_61, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastTrigger",1416,G__G__Centrality_381_0_62, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeTrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrigger",989,G__G__Centrality_381_0_63, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrigger",989,G__G__Centrality_381_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - label", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBPDs",695,G__G__Centrality_381_0_65, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBPD",502,G__G__Centrality_381_0_66, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastBPD",906,G__G__Centrality_381_0_67, 85, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeBPD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBPD",479,G__G__Centrality_381_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_381_0_69, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_381_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_381_0_71, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_381_0_72, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_381_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_381_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_381_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_381_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_381_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeEvent", 1292, G__G__Centrality_381_0_81, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent), -1, 0, 1, 1, 1, 0, "u 'DataTreeEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeEvent", 1418, G__G__Centrality_381_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_381_0_83, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeEvent), -1, 1, 1, 1, 1, 0, "u 'DataTreeEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNA61DataEventNew(void) {
   /* NA61DataEventNew */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew));
   G__memfunc_setup("NA61DataEventNew",1436,G__G__Centrality_382_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPsdVector",1222,G__G__Centrality_382_0_2, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - subgroup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteCentralityContainer",2509,G__G__Centrality_382_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutFileName",1381,G__G__Centrality_382_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - OutFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInFileName",1252,G__G__Centrality_382_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - InFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_382_0_6, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NA61DataEventNew::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_382_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NA61DataEventNew::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_382_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NA61DataEventNew::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_382_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NA61DataEventNew::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_382_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_382_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NA61DataEventNew::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_382_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NA61DataEventNew::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_382_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NA61DataEventNew::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_382_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NA61DataEventNew::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NA61DataEventNew", 1436, G__G__Centrality_382_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew), -1, 0, 1, 1, 1, 0, "u 'NA61DataEventNew' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NA61DataEventNew", 1562, G__G__Centrality_382_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_382_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_NA61DataEventNew), -1, 1, 1, 1, 1, 0, "u 'NA61DataEventNew' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralityManager(void) {
   /* CentralityManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager));
   G__memfunc_setup("CentralityManager",1754,G__G__Centrality_383_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetContainerFileName",2000,G__G__Centrality_383_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ContainerFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyNa61ExpDataToContainer",2494,G__G__Centrality_383_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDataFromContainer",2097,G__G__Centrality_383_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 '-1' Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunSliceFinder",1405,G__G__Centrality_383_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGetterRunId",1401,G__G__Centrality_383_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfSlices",1709,G__G__Centrality_383_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSliceStep",1208,G__G__Centrality_383_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det1IsInt",821,G__G__Centrality_383_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2IsInt",822,G__G__Centrality_383_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSimData",863,G__G__Centrality_383_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormalization",1683,G__G__Centrality_383_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCuts",715,G__G__Centrality_383_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TCut' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetector",1091,G__G__Centrality_383_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - DetName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorsForCentralityAnalisys",3427,G__G__Centrality_383_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - Det1Name u 'TString' - 0 '\"\"' Det2Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCentralityMax",1649,G__G__Centrality_383_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectionCentralEvents",2571,G__G__Centrality_383_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do1DAnalisys",1132,G__G__Centrality_383_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteCentralityFile",1962,G__G__Centrality_383_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutFileName",1381,G__G__Centrality_383_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadCentalityDataFile",2087,G__G__Centrality_383_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentrality",1343,G__G__Centrality_383_0_22, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - det1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentrality",1343,G__G__Centrality_383_0_23, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - det1 d - 'Double_t' 0 - det2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectory",1249,G__G__Centrality_383_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QA",146,G__G__Centrality_383_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlicesFinder",1499,G__G__Centrality_383_0_26, 85, G__get_linked_tagnum(&G__G__CentralityLN_CentralitySlicesFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentralityGetter",1962,G__G__Centrality_383_0_27, 85, G__get_linked_tagnum(&G__G__CentralityLN_CentralityGetter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_383_0_28, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_383_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_383_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_383_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_383_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_383_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_383_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_383_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_383_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralityManager", 1754, G__G__Centrality_383_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager), -1, 0, 1, 1, 1, 0, "u 'CentralityManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralityManager", 1880, G__G__Centrality_383_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_383_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_CentralityManager), -1, 1, 1, 1, 1, 0, "u 'CentralityManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeInterface(void) {
   /* TreeInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface));
   G__memfunc_setup("TreeInterface",1313,G__G__Centrality_388_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteCentralityContainer",2509,G__G__Centrality_388_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutFileName",1381,G__G__Centrality_388_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - OutFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInFileName",1252,G__G__Centrality_388_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - InFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNEntries",1108,G__G__Centrality_388_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInTChain",1050,G__G__Centrality_388_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - chain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_388_0_7, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_388_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_388_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_388_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_388_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_388_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_388_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_388_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_388_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeInterface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeInterface", 1313, G__G__Centrality_388_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface), -1, 0, 1, 1, 1, 0, "u 'TreeInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeInterface", 1439, G__G__Centrality_388_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_388_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_TreeInterface), -1, 1, 1, 1, 1, 0, "u 'TreeInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralityContainerNormalizer(void) {
   /* CentralityContainerNormalizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer));
   G__memfunc_setup("CentralityContainerNormalizer",3045,G__G__Centrality_389_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadInputData",1290,G__G__Centrality_389_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 '-1' Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNormalization",1671,G__G__Centrality_389_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 - Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNormalization",1671,G__G__Centrality_389_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Det1Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunByRunCorrection",1853,G__G__Centrality_389_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 - Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximum",1022,G__G__Centrality_389_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Det1Id i - 'Int_t' 0 - Det2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet1Name",1019,G__G__Centrality_389_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDet2Name",1020,G__G__Centrality_389_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormalization",1683,G__G__Centrality_389_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInFileName",1252,G__G__Centrality_389_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - FileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do1DAnalisys",1132,G__G__Centrality_389_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det1IsInt",821,G__G__Centrality_389_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2IsInt",822,G__G__Centrality_389_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSimData",863,G__G__Centrality_389_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,G__G__Centrality_389_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1Name",1007,G__G__Centrality_389_0_16, 117, G__get_linked_tagnum(&G__G__CentralityLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2Name",1008,G__G__Centrality_389_0_17, 117, G__get_linked_tagnum(&G__G__CentralityLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1Max",916,G__G__Centrality_389_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2Max",917,G__G__Centrality_389_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNormTree",1100,G__G__Centrality_389_0_20, 85, G__get_linked_tagnum(&G__G__CentralityLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet1NormVec",1320,G__G__Centrality_389_0_21, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet2NormVec",1321,G__G__Centrality_389_0_22, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunIdVec",1056,G__G__Centrality_389_0_23, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventsInRun2Vec",1745,G__G__Centrality_389_0_24, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventsInRun1Vec",1744,G__G__Centrality_389_0_25, 117, G__get_linked_tagnum(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CentralityContainerNormalizer",3045,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer), -1, 0, 1, 1, 4, 0, "u 'CentralityContainerNormalizer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__CentralityLN_CentralityContainerNormalizer), -1, 1, 1, 1, 4, 0, "u 'CentralityContainerNormalizer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_389_0_28, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityContainerNormalizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_389_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityContainerNormalizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_389_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityContainerNormalizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_389_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityContainerNormalizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_389_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_389_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityContainerNormalizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_389_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityContainerNormalizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_389_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityContainerNormalizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_389_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityContainerNormalizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CentralityContainerNormalizer", 3171, G__G__Centrality_389_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGlauberFitter(void) {
   /* GlauberFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter));
   G__memfunc_setup("GlauberFitter",1328,G__G__Centrality_390_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestFunc",812,G__G__Centrality_390_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - nf f - 'Float_t' 0 - f0 "
"f - 'Float_t' 0 - f1 i - 'Int_t' 0 - nsigma "
"i - 'Int_t' 0 - nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimHistos",1231,G__G__Centrality_390_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename i - 'Int_t' 0 '-1' nEntries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlauberFitHisto",1816,G__G__Centrality_390_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - f f - 'Float_t' 0 - mu "
"f - 'Float_t' 0 - k i - 'Int_t' 0 '10000' n "
"g - 'Bool_t' 0 'true' Norm2Data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizeGlauberFit",1942,G__G__Centrality_390_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '30' StartBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawHistos",1032,G__G__Centrality_390_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 'true' isSim g - 'Bool_t' 0 'true' isData "
"g - 'Bool_t' 0 'false' isGlauber g - 'Bool_t' 0 'false' isNBD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitGlauber",997,G__G__Centrality_390_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nf f - 'Float_t' 0 - f0 "
"f - 'Float_t' 0 - f1 i - 'Int_t' 0 - nsigma "
"f - 'Float_t' 0 - SigmaStep i - 'Int_t' 0 - nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMuGoldenSection",1905,G__G__Centrality_390_0_8, 121, -1, -1, 0, 8, 1, 1, 0, 
"F - 'Float_t' 0 - mu F - 'Float_t' 0 - chi2 "
"f - 'Float_t' 0 - mu_min f - 'Float_t' 0 - mu_max "
"f - 'Float_t' 0 - f f - 'Float_t' 0 - k "
"i - 'Int_t' 0 '10000' nEvents i - 'Int_t' 0 '5' nIter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__G__Centrality_390_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NBD",212,G__G__Centrality_390_0_10, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - n d - 'Double_t' 0 - mu "
"d - 'Double_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNBDhist",952,G__G__Centrality_390_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHisto",1347,G__G__Centrality_390_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpartMax",1111,G__G__Centrality_390_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNcollMax",1098,G__G__Centrality_390_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultMax",1012,G__G__Centrality_390_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitMultMin",1301,G__G__Centrality_390_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormMultMin",1422,G__G__Centrality_390_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinSize",992,G__G__Centrality_390_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutDirName",1284,G__G__Centrality_390_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlauberFitHisto",1804,G__G__Centrality_390_0_20, 85, G__get_linked_tagnum(&G__G__CentralityLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataHisto",1185,G__G__Centrality_390_0_21, 85, G__get_linked_tagnum(&G__G__CentralityLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBDHisto",1019,G__G__Centrality_390_0_22, 85, G__get_linked_tagnum(&G__G__CentralityLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMode",689,G__G__Centrality_390_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_390_0_24, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GlauberFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_390_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_390_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GlauberFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_390_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GlauberFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_390_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_390_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_390_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlauberFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_390_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlauberFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_390_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlauberFitter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GlauberFitter", 1328, G__G__Centrality_390_0_36, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter), -1, 0, 1, 1, 1, 0, "u 'GlauberFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GlauberFitter", 1454, G__G__Centrality_390_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_390_0_38, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_GlauberFitter), -1, 1, 1, 1, 1, 0, "u 'GlauberFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliGlauberNucleus(void) {
   /* AliGlauberNucleus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus));
   G__memfunc_setup("Lookup",634,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AliGlauberNucleus",1719,G__G__Centrality_391_0_2, 105, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus), -1, 0, 6, 1, 1, 0, 
"C - 'Option_t' 10 '\"Au\"' iname i - 'Int_t' 0 '0' iN "
"d - 'Double_t' 0 '0' iR d - 'Double_t' 0 '0' ia "
"d - 'Double_t' 0 '0' iw U 'TF1' - 0 '0' ifunc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AliGlauberNucleus",1719,G__G__Centrality_391_0_3, 105, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus), -1, 0, 1, 1, 1, 0, "u 'AliGlauberNucleus' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Centrality_391_0_4, 117, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus), -1, 1, 1, 1, 1, 0, "u 'AliGlauberNucleus' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__G__Centrality_391_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xs i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__G__Centrality_391_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR",370,G__G__Centrality_391_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__G__Centrality_391_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetW",375,G__G__Centrality_391_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucleons",1127,G__G__Centrality_391_0_10, 85, G__get_linked_tagnum(&G__G__CentralityLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrials",911,G__G__Centrality_391_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN",378,G__G__Centrality_391_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetR",382,G__G__Centrality_391_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetA",365,G__G__Centrality_391_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ia", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetW",387,G__G__Centrality_391_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - iw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinDist",996,G__G__Centrality_391_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThrowNucleons",1371,G__G__Centrality_391_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.' xshift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_391_0_18, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliGlauberNucleus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_391_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_391_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliGlauberNucleus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_391_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliGlauberNucleus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_391_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_391_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_391_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberNucleus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_391_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_391_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberNucleus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AliGlauberNucleus", 1845, G__G__Centrality_391_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliGlauberMC(void) {
   /* AliGlauberMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC));
   G__memfunc_setup("AliGlauberMC",1128,G__G__Centrality_393_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC), -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 '\"Pb\"' NA C - 'Option_t' 10 '\"Pb\"' NB "
"d - 'Double_t' 0 '64' xsect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AliGlauberMC",1128,G__G__Centrality_393_0_2, 105, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC), -1, 0, 1, 1, 1, 0, "u 'AliGlauberMC' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Centrality_393_0_3, 117, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberMC), -1, 1, 1, 1, 1, 0, "u 'AliGlauberMC' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__G__Centrality_393_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextEvent",929,G__G__Centrality_393_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1' bgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcEvent",885,G__G__Centrality_393_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - bgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEta",848,G__G__Centrality_393_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaSimple",1466,G__G__Centrality_393_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaGBW",1072,G__G__Centrality_393_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaNBD",1060,G__G__Centrality_393_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaNBDSV",1229,G__G__Centrality_393_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaTwoNBD",1374,G__G__Centrality_393_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricity",1542,G__G__Centrality_393_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStoa",695,G__G__Centrality_393_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricityColl",1936,G__G__Centrality_393_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricityCom",1829,G__G__Centrality_393_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricityPart",1949,G__G__Centrality_393_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon2Part",1475,G__G__Centrality_393_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon3Part",1476,G__G__Centrality_393_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon4Part",1477,G__G__Centrality_393_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon5Part",1478,G__G__Centrality_393_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon2Coll",1462,G__G__Centrality_393_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon3Coll",1463,G__G__Centrality_393_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon4Coll",1464,G__G__Centrality_393_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon5Coll",1465,G__G__Centrality_393_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon2Com",1355,G__G__Centrality_393_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon3Com",1356,G__G__Centrality_393_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon4Com",1357,G__G__Centrality_393_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsilon5Com",1358,G__G__Centrality_393_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsi2",638,G__G__Centrality_393_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsi3",639,G__G__Centrality_393_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsi4",640,G__G__Centrality_393_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPsi5",641,G__G__Centrality_393_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricityPartColl",2343,G__G__Centrality_393_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEccentricityPartCom",2236,G__G__Centrality_393_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__G__Centrality_393_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBMin",646,G__G__Centrality_393_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBMax",648,G__G__Centrality_393_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNcoll",792,G__G__Centrality_393_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpart",805,G__G__Centrality_393_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpartFound",1313,G__G__Centrality_393_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtuple",920,G__G__Centrality_393_0_43, 85, G__get_linked_tagnum(&G__G__CentralityLN_TNtuple), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucleons",1127,G__G__Centrality_393_0_44, 85, G__get_linked_tagnum(&G__G__CentralityLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotXSect",1086,G__G__Centrality_393_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotXSectErr",1383,G__G__Centrality_393_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__Centrality_393_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucA",647,G__G__Centrality_393_0_48, 117, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucB",648,G__G__Centrality_393_0_49, 117, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleus), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NegativeBinomialDistribution",2910,G__G__Centrality_393_0_50, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - k "
"d - 'Double_t' 0 - nmean", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, Int_t, Double_t))(&AliGlauberMC::NegativeBinomialDistribution) ), 0);
   G__memfunc_setup("NegativeBinomialRandom",2239,G__G__Centrality_393_0_51, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - k d - 'Double_t' 0 - nmean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NegativeBinomialRandomSV",2408,G__G__Centrality_393_0_52, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - nbar d - 'Double_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoubleNegativeBinomialRandom",2842,G__G__Centrality_393_0_53, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - k1 d - 'Double_t' 0 - nmean1 "
"i - 'Int_t' 0 - k2 d - 'Double_t' 0 - nmean2 "
"d - 'Double_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdNdEtaParam",1345,G__G__Centrality_393_0_54, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetdNdEtaType",1278,G__G__Centrality_393_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i 'AliGlauberMC::EdNdEtaType' - 0 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBmin",690,G__G__Centrality_393_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - bmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBmax",692,G__G__Centrality_393_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - bmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinDistance",1403,G__G__Centrality_393_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoPartProduction",1949,G__G__Centrality_393_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setr",414,G__G__Centrality_393_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Seta",397,G__G__Centrality_393_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoFluc",873,G__G__Centrality_393_0_62, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - omega d - 'Double_t' 0 - sig0 "
"d - 'Double_t' 0 - lam g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintVersion",1267,G__G__Centrality_393_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliGlauberMC::PrintVersion) ), 0);
   G__memfunc_setup("Version",742,G__G__Centrality_393_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberMC::Version) ), 0);
   G__memfunc_setup("RunAndSaveNtuple",1615,G__G__Centrality_393_0_65, 121, -1, -1, 0, 8, 3, 1, 0, 
"i - 'Int_t' 0 - n C - 'Option_t' 10 '\"Pb\"' sysA "
"C - 'Option_t' 10 '\"Pb\"' sysB d - 'Double_t' 0 '64' signn "
"d - 'Double_t' 0 '0.4' mind d - 'Double_t' 0 '6.62' r "
"d - 'Double_t' 0 '0.546' a C - - 10 '\"glau_pbpb_ntuple.root\"' fname", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, Option_t*, Option_t*, Double_t, Double_t, Double_t, Double_t, const char*))(&AliGlauberMC::RunAndSaveNtuple) ), 0);
   G__memfunc_setup("RunAndSaveNucleons",1822,G__G__Centrality_393_0_66, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - n C - 'Option_t' 10 - sysA "
"C - 'Option_t' 10 - sysB d - 'Double_t' 0 - signn "
"d - 'Double_t' 0 - mind g - 'Bool_t' 0 - verbose "
"C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcResults",1125,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - bgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_393_0_68, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliGlauberMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_393_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_393_0_70, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliGlauberMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_393_0_71, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliGlauberMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_393_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_393_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_393_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_393_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_393_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberMC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AliGlauberMC", 1254, G__G__Centrality_393_0_80, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliGlauberNucleon(void) {
   /* AliGlauberNucleon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon));
   G__memfunc_setup("AliGlauberNucleon",1708,G__G__Centrality_395_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Collide",700,G__G__Centrality_395_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNColl",760,G__G__Centrality_395_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__Centrality_395_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__G__Centrality_395_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__Centrality_395_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInNucleusA",1171,G__G__Centrality_395_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInNucleusB",1172,G__G__Centrality_395_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSpectator",1137,G__G__Centrality_395_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWounded",914,G__G__Centrality_395_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__Centrality_395_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInNucleusA",1283,G__G__Centrality_395_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInNucleusB",1284,G__G__Centrality_395_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__G__Centrality_395_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_395_0_15, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliGlauberNucleon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_395_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_395_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliGlauberNucleon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_395_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliGlauberNucleon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_395_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_395_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_395_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberNucleon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_395_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliGlauberNucleon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_395_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliGlauberNucleon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AliGlauberNucleon", 1708, G__G__Centrality_395_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon), -1, 0, 1, 1, 1, 0, "u 'AliGlauberNucleon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AliGlauberNucleon", 1834, G__G__Centrality_395_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_395_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_AliGlauberNucleon), -1, 1, 1, 1, 1, 0, "u 'AliGlauberNucleon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeConverterNA61(void) {
   /* DataTreeConverterNA61 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61));
   G__memfunc_setup("DataTreeConverterNA61",1976,G__G__Centrality_396_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputFile",1212,G__G__Centrality_396_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFile",1341,G__G__Centrality_396_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNEvents",1007,G__G__Centrality_396_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Body",398,G__G__Centrality_396_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__Centrality_396_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Chain_Init",982,G__G__Centrality_396_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputTree_Init",1556,G__G__Centrality_396_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataTreeEvent_Init",1791,G__G__Centrality_396_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,G__G__Centrality_396_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear_Event",1096,G__G__Centrality_396_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read_Event",989,G__G__Centrality_396_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finish",609,G__G__Centrality_396_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Centrality_396_0_14, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeConverterNA61::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_396_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeConverterNA61::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_396_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeConverterNA61::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_396_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeConverterNA61::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Centrality_396_0_18, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowMembers",1132,G__G__Centrality_396_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Streamer",835,G__G__Centrality_396_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_396_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_396_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeConverterNA61::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_396_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeConverterNA61::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_396_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeConverterNA61::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_396_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeConverterNA61::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeConverterNA61", 1976, G__G__Centrality_396_0_26, (int) ('i'), 
G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61), -1, 0, 1, 1, 1, 0, "u 'DataTreeConverterNA61' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeConverterNA61", 2102, G__G__Centrality_396_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_396_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeConverterNA61), -1, 1, 1, 1, 1, 0, "u 'DataTreeConverterNA61' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTreeSTSTrack(void) {
   /* DataTreeSTSTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack));
   G__memfunc_setup("DataTreeSTSTrack",1529,G__G__Centrality_397_0_1, 105, G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Centrality_397_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPt",484,G__G__Centrality_397_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__Centrality_397_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEta",570,G__G__Centrality_397_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofHits",987,G__G__Centrality_397_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlag",666,G__G__Centrality_397_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSq",760,G__G__Centrality_397_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDF",504,G__G__Centrality_397_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDCAComponent",1435,G__G__Centrality_397_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCTrackId",1106,G__G__Centrality_397_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFHitId",987,G__G__Centrality_397_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPt",496,G__G__Centrality_397_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Centrality_397_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEta",582,G__G__Centrality_397_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fEta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNofHits",999,G__G__Centrality_397_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fNofHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlag",678,G__G__Centrality_397_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fFlag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSq",772,G__G__Centrality_397_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fChiSq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNDF",516,G__G__Centrality_397_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fNDF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDCA",500,G__G__Centrality_397_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - fX d - - 0 - fY "
"d - - 0 - fZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDCAComponent",1447,G__G__Centrality_397_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx d - - 0 - fValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCTrackId",1118,G__G__Centrality_397_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFHitId",999,G__G__Centrality_397_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Centrality_397_0_25, 85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataTreeSTSTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Centrality_397_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeSTSTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Centrality_397_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataTreeSTSTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Centrality_397_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataTreeSTSTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CentralityLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Centrality_397_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Centrality_397_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeSTSTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Centrality_397_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeSTSTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Centrality_397_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataTreeSTSTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Centrality_397_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataTreeSTSTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataTreeSTSTrack", 1529, G__G__Centrality_397_0_37, (int) ('i'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack), -1, 0, 1, 1, 1, 0, "u 'DataTreeSTSTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTreeSTSTrack", 1655, G__G__Centrality_397_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Centrality_397_0_39, (int) ('u'), G__get_linked_tagnum(&G__G__CentralityLN_DataTreeSTSTrack), -1, 1, 1, 1, 1, 0, "u 'DataTreeSTSTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Centrality() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Centrality() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Centrality() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__CentralityLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralityDetectorEvent = { "CentralityDetectorEvent" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float,allocator<float> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralityEventContainer = { "CentralityEventContainer" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR = { "vector<CentralityDetectorEvent,allocator<CentralityDetectorEvent> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CentralityDetectorEvent,allocator<CentralityDetectorEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TCut = { "TCut" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__CentralityLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralitySlice = { "CentralitySlice" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralitySlicesFinder = { "CentralitySlicesFinder" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_GlauberParGetter = { "GlauberParGetter" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralityGetter = { "CentralityGetter" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_NA61DataEvent = { "NA61DataEvent" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeTrack = { "DataTreeTrack" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreePSDSection = { "DataTreePSDSection" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreePSDModule = { "DataTreePSDModule" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeTOFHit = { "DataTreeTOFHit" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeV0Candidate = { "DataTreeV0Candidate" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeMCTrack = { "DataTreeMCTrack" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeTrigger = { "DataTreeTrigger" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeBPD = { "DataTreeBPD" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeEvent = { "DataTreeEvent" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_NA61DataEventNew = { "NA61DataEventNew" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralityManager = { "CentralityManager" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TreeInterface = { "TreeInterface" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_CentralityContainerNormalizer = { "CentralityContainerNormalizer" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_GlauberFitter = { "GlauberFitter" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_AliGlauberNucleus = { "AliGlauberNucleus" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_AliGlauberMC = { "AliGlauberMC" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType = { "AliGlauberMC::EdNdEtaType" , 101 , -1 };
G__linked_taginfo G__G__CentralityLN_AliGlauberNucleon = { "AliGlauberNucleon" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeConverterNA61 = { "DataTreeConverterNA61" , 99 , -1 };
G__linked_taginfo G__G__CentralityLN_DataTreeSTSTrack = { "DataTreeSTSTrack" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Centrality() {
  G__G__CentralityLN_TClass.tagnum = -1 ;
  G__G__CentralityLN_TBuffer.tagnum = -1 ;
  G__G__CentralityLN_TMemberInspector.tagnum = -1 ;
  G__G__CentralityLN_TObject.tagnum = -1 ;
  G__G__CentralityLN_TNamed.tagnum = -1 ;
  G__G__CentralityLN_TString.tagnum = -1 ;
  G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_TObjArray.tagnum = -1 ;
  G__G__CentralityLN_TClonesArray.tagnum = -1 ;
  G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_CentralityDetectorEvent.tagnum = -1 ;
  G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_CentralityEventContainer.tagnum = -1 ;
  G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_TCut.tagnum = -1 ;
  G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__CentralityLN_TTree.tagnum = -1 ;
  G__G__CentralityLN_TFile.tagnum = -1 ;
  G__G__CentralityLN_TBranch.tagnum = -1 ;
  G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_TF1.tagnum = -1 ;
  G__G__CentralityLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__CentralityLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__CentralityLN_TH1F.tagnum = -1 ;
  G__G__CentralityLN_TGraphErrors.tagnum = -1 ;
  G__G__CentralityLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_TCanvas.tagnum = -1 ;
  G__G__CentralityLN_CentralitySlice.tagnum = -1 ;
  G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_CentralitySlicesFinder.tagnum = -1 ;
  G__G__CentralityLN_GlauberParGetter.tagnum = -1 ;
  G__G__CentralityLN_CentralityGetter.tagnum = -1 ;
  G__G__CentralityLN_TChain.tagnum = -1 ;
  G__G__CentralityLN_NA61DataEvent.tagnum = -1 ;
  G__G__CentralityLN_DataTreeTrack.tagnum = -1 ;
  G__G__CentralityLN_DataTreePSDSection.tagnum = -1 ;
  G__G__CentralityLN_DataTreePSDModule.tagnum = -1 ;
  G__G__CentralityLN_DataTreeTOFHit.tagnum = -1 ;
  G__G__CentralityLN_DataTreeV0Candidate.tagnum = -1 ;
  G__G__CentralityLN_DataTreeMCTrack.tagnum = -1 ;
  G__G__CentralityLN_DataTreeTrigger.tagnum = -1 ;
  G__G__CentralityLN_DataTreeBPD.tagnum = -1 ;
  G__G__CentralityLN_DataTreeEvent.tagnum = -1 ;
  G__G__CentralityLN_NA61DataEventNew.tagnum = -1 ;
  G__G__CentralityLN_CentralityManager.tagnum = -1 ;
  G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__CentralityLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CentralityLN_TreeInterface.tagnum = -1 ;
  G__G__CentralityLN_CentralityContainerNormalizer.tagnum = -1 ;
  G__G__CentralityLN_GlauberFitter.tagnum = -1 ;
  G__G__CentralityLN_AliGlauberNucleus.tagnum = -1 ;
  G__G__CentralityLN_TNtuple.tagnum = -1 ;
  G__G__CentralityLN_AliGlauberMC.tagnum = -1 ;
  G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType.tagnum = -1 ;
  G__G__CentralityLN_AliGlauberNucleon.tagnum = -1 ;
  G__G__CentralityLN_DataTreeConverterNA61.tagnum = -1 ;
  G__G__CentralityLN_DataTreeSTSTrack.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Centrality() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TString);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralityDetectorEvent),sizeof(CentralityDetectorEvent),-1,324864,(char*)NULL,G__setup_memvarCentralityDetectorEvent,G__setup_memfuncCentralityDetectorEvent);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralityEventContainer),sizeof(CentralityEventContainer),-1,324864,(char*)NULL,G__setup_memvarCentralityEventContainer,G__setup_memfuncCentralityEventContainer);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlECentralityDetectorEventcOallocatorlECentralityDetectorEventgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TCut);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralitySlice),sizeof(CentralitySlice),-1,324864,(char*)NULL,G__setup_memvarCentralitySlice,G__setup_memfuncCentralitySlice);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralitySlicesFinder),sizeof(CentralitySlicesFinder),-1,327424,(char*)NULL,G__setup_memvarCentralitySlicesFinder,G__setup_memfuncCentralitySlicesFinder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_GlauberParGetter),sizeof(GlauberParGetter),-1,324864,(char*)NULL,G__setup_memvarGlauberParGetter,G__setup_memfuncGlauberParGetter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralityGetter),sizeof(CentralityGetter),-1,265984,(char*)NULL,G__setup_memvarCentralityGetter,G__setup_memfuncCentralityGetter);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_NA61DataEvent),sizeof(NA61DataEvent),-1,296192,(char*)NULL,G__setup_memvarNA61DataEvent,G__setup_memfuncNA61DataEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeTrack),sizeof(DataTreeTrack),-1,292096,(char*)NULL,G__setup_memvarDataTreeTrack,G__setup_memfuncDataTreeTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreePSDSection),sizeof(DataTreePSDSection),-1,292096,(char*)NULL,G__setup_memvarDataTreePSDSection,G__setup_memfuncDataTreePSDSection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreePSDModule),sizeof(DataTreePSDModule),-1,324864,(char*)NULL,G__setup_memvarDataTreePSDModule,G__setup_memfuncDataTreePSDModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeTOFHit),sizeof(DataTreeTOFHit),-1,292096,(char*)NULL,G__setup_memvarDataTreeTOFHit,G__setup_memfuncDataTreeTOFHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeV0Candidate),sizeof(DataTreeV0Candidate),-1,292096,(char*)NULL,G__setup_memvarDataTreeV0Candidate,G__setup_memfuncDataTreeV0Candidate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeMCTrack),sizeof(DataTreeMCTrack),-1,292096,(char*)NULL,G__setup_memvarDataTreeMCTrack,G__setup_memfuncDataTreeMCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeTrigger),sizeof(DataTreeTrigger),-1,324864,(char*)NULL,G__setup_memvarDataTreeTrigger,G__setup_memfuncDataTreeTrigger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeBPD),sizeof(DataTreeBPD),-1,292096,(char*)NULL,G__setup_memvarDataTreeBPD,G__setup_memfuncDataTreeBPD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeEvent),sizeof(DataTreeEvent),-1,292096,(char*)NULL,G__setup_memvarDataTreeEvent,G__setup_memfuncDataTreeEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_NA61DataEventNew),sizeof(NA61DataEventNew),-1,323840,(char*)NULL,G__setup_memvarNA61DataEventNew,G__setup_memfuncNA61DataEventNew);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralityManager),sizeof(CentralityManager),-1,324864,(char*)NULL,G__setup_memvarCentralityManager,G__setup_memfuncCentralityManager);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_TreeInterface),sizeof(TreeInterface),-1,323840,(char*)NULL,G__setup_memvarTreeInterface,G__setup_memfuncTreeInterface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_CentralityContainerNormalizer),sizeof(CentralityContainerNormalizer),-1,327424,(char*)NULL,G__setup_memvarCentralityContainerNormalizer,G__setup_memfuncCentralityContainerNormalizer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_GlauberFitter),sizeof(GlauberFitter),-1,324864,(char*)NULL,G__setup_memvarGlauberFitter,G__setup_memfuncGlauberFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_AliGlauberNucleus),sizeof(AliGlauberNucleus),-1,327424,(char*)NULL,G__setup_memvarAliGlauberNucleus,G__setup_memfuncAliGlauberNucleus);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_TNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_AliGlauberMC),sizeof(AliGlauberMC),-1,327424,(char*)NULL,G__setup_memvarAliGlauberMC,G__setup_memfuncAliGlauberMC);
   G__get_linked_tagnum_fwd(&G__G__CentralityLN_AliGlauberMCcLcLEdNdEtaType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_AliGlauberNucleon),sizeof(AliGlauberNucleon),-1,324864,(char*)NULL,G__setup_memvarAliGlauberNucleon,G__setup_memfuncAliGlauberNucleon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeConverterNA61),sizeof(DataTreeConverterNA61),-1,263424,(char*)NULL,G__setup_memvarDataTreeConverterNA61,G__setup_memfuncDataTreeConverterNA61);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CentralityLN_DataTreeSTSTrack),sizeof(DataTreeSTSTrack),-1,324608,(char*)NULL,G__setup_memvarDataTreeSTSTrack,G__setup_memfuncDataTreeSTSTrack);
}
extern "C" void G__cpp_setupG__Centrality(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Centrality()");
  G__set_cpp_environmentG__Centrality();
  G__cpp_setup_tagtableG__Centrality();

  G__cpp_setup_inheritanceG__Centrality();

  G__cpp_setup_typetableG__Centrality();

  G__cpp_setup_memvarG__Centrality();

  G__cpp_setup_memfuncG__Centrality();
  G__cpp_setup_globalG__Centrality();
  G__cpp_setup_funcG__Centrality();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Centrality();
  return;
}
class G__cpp_setup_initG__Centrality {
  public:
    G__cpp_setup_initG__Centrality() { G__add_setup_func("G__Centrality",(G__incsetup)(&G__cpp_setupG__Centrality)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Centrality() { G__remove_setup_func("G__Centrality"); }
};
G__cpp_setup_initG__Centrality G__cpp_setup_initializerG__Centrality;

